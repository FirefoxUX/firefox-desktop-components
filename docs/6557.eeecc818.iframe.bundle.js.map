{"version":3,"file":"6557.eeecc818.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-button-group/moz-button-group.mjs"],"sourcesContent":["import __chrome_styles_loader__mozbuttongroupStyles from \"toolkit/content/widgets/moz-button-group/moz-button-group.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\nexport const PLATFORM_LINUX = \"linux\";\nexport const PLATFORM_MACOS = \"macosx\";\nexport const PLATFORM_WINDOWS = \"win\";\n\n/**\n * A grouping of buttons. Primary button order will be set automatically based\n * on class=\"primary\", type=\"submit\" or autofocus attribute. Set slot=\"primary\"\n * on a primary button that does not have primary styling to set its position.\n *\n * @tagname moz-button-group\n * @property {string} platform - The detected platform, set automatically.\n */\nexport default class MozButtonGroup extends MozLitElement {\n  static queries = {\n    defaultSlotEl: \"slot:not([name])\",\n    primarySlotEl: \"slot[name=primary]\",\n  };\n\n  static properties = {\n    platform: { state: true },\n  };\n\n  constructor() {\n    super();\n    this.#detectPlatform();\n  }\n\n  #detectPlatform() {\n    if (typeof AppConstants !== \"undefined\") {\n      this.platform = AppConstants.platform;\n    } else if (navigator.platform.includes(\"Linux\")) {\n      this.platform = PLATFORM_LINUX;\n    } else if (navigator.platform.includes(\"Mac\")) {\n      this.platform = PLATFORM_MACOS;\n    } else {\n      this.platform = PLATFORM_WINDOWS;\n    }\n  }\n\n  onSlotchange() {\n    for (let child of this.defaultSlotEl.assignedNodes()) {\n      if (!(child instanceof Element)) {\n        // Text nodes won't support classList or getAttribute.\n        continue;\n      }\n      switch (child.localName) {\n        case \"button\":\n          if (\n            child.classList.contains(\"primary\") ||\n            child.getAttribute(\"type\") == \"submit\" ||\n            child.hasAttribute(\"autofocus\") ||\n            child.hasAttribute(\"default\")\n          ) {\n            child.slot = \"primary\";\n          }\n          break;\n        case \"moz-button\":\n          if (child.type == \"primary\" || child.type == \"destructive\") {\n            child.slot = \"primary\";\n          }\n          break;\n      }\n    }\n    this.#reorderLightDom();\n  }\n\n  #reorderLightDom() {\n    let primarySlottedChildren = [...this.primarySlotEl.assignedNodes()];\n    if (this.platform == PLATFORM_WINDOWS) {\n      primarySlottedChildren.reverse();\n      for (let child of primarySlottedChildren) {\n        child.parentElement.prepend(child);\n      }\n    } else {\n      for (let child of primarySlottedChildren) {\n        // Ensure the primary buttons are at the end of the light DOM.\n        child.parentElement.append(child);\n      }\n    }\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has(\"platform\")) {\n      this.#reorderLightDom();\n    }\n  }\n\n  render() {\n    let slots = [\n      html` <slot @slotchange=${this.onSlotchange}></slot> `,\n      html` <slot name=\"primary\"></slot> `,\n    ];\n    if (this.platform == PLATFORM_WINDOWS) {\n      slots = [slots[1], slots[0]];\n    }\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozbuttongroupStyles}\"\n      />\n      ${slots}\n    `;\n  }\n}\ncustomElements.define(\"moz-button-group\", MozButtonGroup);\n"],"names":[],"sourceRoot":""}