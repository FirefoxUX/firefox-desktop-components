{"version":3,"file":"4576.ec6a075f.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-page-header/moz-page-header.mjs"],"sourcesContent":["import __chrome_styles_loader__textandtypographyStyles from \"toolkit/themes/shared/design-system/text-and-typography.css\";\nimport __chrome_styles_loader__mozpageheaderStyles from \"toolkit/content/widgets/moz-page-header/moz-page-header.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\nwindow.MozXULElement?.insertFTLIfNeeded(\"toolkit/global/mozPageHeader.ftl\");\n\n/**\n * A header component for providing context about a specific page.\n *\n * @tagname moz-page-header\n * @property {string} heading - The page title text.\n * @property {string} description - Secondary text shown under the heading.\n * @property {string} iconSrc - The src for an optional icon.\n * @property {string} supportPage - Optional URL for a related support article.\n * @property {boolean} backButton - Whether or not the header should include a back button.\n * @slot breadcrumbs - Container for a <moz-breadcrumb-group, shown above the heading.\n * @fires navigate-back\n *  Event indicating the backwards navigation should occur.\n */\nexport default class MozPageHeader extends MozLitElement {\n  static properties = {\n    heading: { type: String, fluent: true },\n    description: { type: String, fluent: true },\n    iconSrc: { type: String },\n    supportPage: { type: String, attribute: \"support-page\" },\n    backButton: { type: Boolean },\n  };\n\n  constructor() {\n    super();\n    this.heading = \"\";\n    this.description = \"\";\n    this.iconSrc = \"\";\n    this.supportPage = \"\";\n    this.backButton = false;\n  }\n\n  backButtonTemplate() {\n    if (!this.backButton) {\n      return \"\";\n    }\n    return html`<moz-button\n      type=\"ghost\"\n      data-l10n-id=\"back-nav-button-title\"\n      iconsrc=\"chrome://global/skin/icons/arrow-left.svg\"\n      class=\"back-button\"\n      @click=${this.handleBack}\n    ></moz-button>`;\n  }\n\n  iconTemplate() {\n    if (!this.iconSrc) {\n      return \"\";\n    }\n    return html`<img src=${this.iconSrc} role=\"presentation\" class=\"icon\" />`;\n  }\n\n  descriptionTemplate() {\n    if (!this.description) {\n      return \"\";\n    }\n    return html`<span class=\"description\" id=\"description\">\n        ${this.description}\n      </span>\n      ${this.supportLinkTemplate()}`;\n  }\n\n  supportLinkTemplate() {\n    if (!this.supportPage) {\n      return \"\";\n    }\n    return html`<a\n      is=\"moz-support-link\"\n      support-page=${this.supportPage}\n      part=\"support-link\"\n      class=\"support-link\"\n      aria-describedby=${this.description ? \"description\" : \"heading\"}\n    ></a>`;\n  }\n\n  handleBack() {\n    this.dispatchEvent(new Event(\"navigate-back\"));\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozpageheaderStyles}\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__textandtypographyStyles}\"\n      />\n      <div class=\"page-header-container\">\n        <slot name=\"breadcrumbs\"></slot>\n        <div class=\"heading\">\n          ${this.backButtonTemplate()}${this.iconTemplate()}\n          <h1 id=\"heading\">${this.heading}</h1>\n          ${!this.description ? this.supportLinkTemplate() : \"\"}\n        </div>\n        ${this.descriptionTemplate()}\n      </div>\n    `;\n  }\n}\ncustomElements.define(\"moz-page-header\", MozPageHeader);\n"],"names":[],"sourceRoot":""}