{"version":3,"file":"backup-settings-stories.d93fb192.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;ACjKA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACzsources":["webpack://browser-storybook/../backup/content/backup-settings.mjs","webpack://browser-storybook/../backup/content/backup-settings.stories.mjs","webpack://browser-storybook/../backup/content/turn-off-scheduled-backups.mjs","webpack://browser-storybook/../backup/content/turn-on-scheduled-backups.mjs"],"sourcesContent":["import __chrome_styles_loader__backupsettingsStyles from \"browser/components/backup/content/backup-settings.css\";\nimport __chrome_styles_loader__preferencesStyles from \"browser/themes/shared/preferences/preferences.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n// eslint-disable-next-line import/no-unassigned-import\nimport \"chrome://browser/content/backup/turn-on-scheduled-backups.mjs\";\n// eslint-disable-next-line import/no-unassigned-import\nimport \"chrome://browser/content/backup/turn-off-scheduled-backups.mjs\";\n\n/**\n * The widget for managing the BackupService that is embedded within the main\n * document of about:settings / about:preferences.\n */\nexport default class BackupSettings extends MozLitElement {\n  static properties = {\n    backupServiceState: { type: Object },\n  };\n\n  static get queries() {\n    return {\n      scheduledBackupsButtonEl: \"#backup-toggle-scheduled-button\",\n      turnOnScheduledBackupsDialogEl: \"#turn-on-scheduled-backups-dialog\",\n      turnOnScheduledBackupsEl: \"turn-on-scheduled-backups\",\n      turnOffScheduledBackupsEl: \"turn-off-scheduled-backups\",\n      turnOffScheduledBackupsDialogEl: \"#turn-off-scheduled-backups-dialog\",\n    };\n  }\n\n  /**\n   * Creates a BackupPreferences instance and sets the initial default\n   * state.\n   */\n  constructor() {\n    super();\n    this.backupServiceState = {\n      backupDirPath: \"\",\n      backupInProgress: false,\n      defaultParent: {\n        fileName: \"\",\n        path: \"\",\n        iconURL: \"\",\n      },\n      scheduledBackupsEnabled: false,\n    };\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n\n    this.addEventListener(\"turnOnScheduledBackups\", this);\n    this.addEventListener(\"turnOffScheduledBackups\", this);\n    this.addEventListener(\"dialogCancel\", this);\n  }\n\n  handleEvent(event) {\n    switch (event.type) {\n      case \"turnOnScheduledBackups\":\n        this.turnOnScheduledBackupsDialogEl.close();\n        this.dispatchEvent(\n          new CustomEvent(\"BackupUI:ToggleScheduledBackups\", {\n            bubbles: true,\n            composed: true,\n            detail: {\n              ...event.detail,\n              isScheduledBackupsEnabled: true,\n            },\n          })\n        );\n        break;\n      case \"turnOffScheduledBackups\":\n        this.turnOffScheduledBackupsDialogEl.close();\n        this.dispatchEvent(\n          new CustomEvent(\"BackupUI:ToggleScheduledBackups\", {\n            bubbles: true,\n            composed: true,\n            detail: {\n              isScheduledBackupsEnabled: false,\n            },\n          })\n        );\n        break;\n      case \"dialogCancel\":\n        if (this.turnOnScheduledBackupsDialogEl.open) {\n          this.turnOnScheduledBackupsDialogEl.close();\n        } else {\n          this.turnOffScheduledBackupsDialogEl.close();\n        }\n        break;\n    }\n  }\n\n  handleShowScheduledBackups() {\n    if (\n      !this.backupServiceState.scheduledBackupsEnabled &&\n      this.turnOnScheduledBackupsDialogEl\n    ) {\n      this.turnOnScheduledBackupsDialogEl.showModal();\n    } else if (\n      this.backupServiceState.scheduledBackupsEnabled &&\n      this.turnOffScheduledBackupsDialogEl\n    ) {\n      this.turnOffScheduledBackupsDialogEl.showModal();\n    }\n  }\n\n  turnOnScheduledBackupsDialogTemplate() {\n    let { fileName, path, iconURL } = this.backupServiceState.defaultParent;\n    return html`<dialog id=\"turn-on-scheduled-backups-dialog\">\n      <turn-on-scheduled-backups\n        defaultlabel=${fileName}\n        defaultpath=${path}\n        defaulticonurl=${iconURL}\n      ></turn-on-scheduled-backups>\n    </dialog>`;\n  }\n\n  turnOffScheduledBackupsDialogTemplate() {\n    return html`<dialog id=\"turn-off-scheduled-backups-dialog\">\n      <turn-off-scheduled-backups></turn-off-scheduled-backups>\n    </dialog>`;\n  }\n\n  render() {\n    return html`<link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__preferencesStyles}\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__backupsettingsStyles}\"\n      />\n      <div id=\"scheduled-backups\">\n        <div>\n          Backup in progress:\n          ${this.backupServiceState.backupInProgress ? \"Yes\" : \"No\"}\n        </div>\n\n        ${this.turnOnScheduledBackupsDialogTemplate()}\n        ${this.turnOffScheduledBackupsDialogTemplate()}\n\n        <moz-button\n          id=\"backup-toggle-scheduled-button\"\n          @click=${this.handleShowScheduledBackups}\n          data-l10n-id=\"settings-data-backup-toggle\"\n        ></moz-button>\n      </div>`;\n  }\n}\n\ncustomElements.define(\"backup-settings\", BackupSettings);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"./backup-settings.mjs\";\n\nwindow.MozXULElement.insertFTLIfNeeded(\"locales-preview/backupSettings.ftl\");\nwindow.MozXULElement.insertFTLIfNeeded(\"branding/brand.ftl\");\n\nexport default {\n  title: \"Domain-specific UI Widgets/Backup/Backup Settings\",\n  component: \"backup-settings\",\n  argTypes: {},\n};\n\nconst Template = ({ backupServiceState }) => html`\n  <backup-settings .backupServiceState=${backupServiceState}></backup-settings>\n`;\n\nexport const BackingUpNotInProgress = Template.bind({});\nBackingUpNotInProgress.args = {\n  backupServiceState: {\n    backupDirPath: \"/Some/User/Documents\",\n    backupInProgress: false,\n    defaultParent: {\n      path: \"/Some/User/Documents\",\n      fileName: \"Documents\",\n    },\n    scheduledBackupsEnabled: false,\n  },\n};\n\nexport const BackingUpInProgress = Template.bind({});\nBackingUpInProgress.args = {\n  backupServiceState: {\n    backupDirPath: \"/Some/User/Documents\",\n    backupInProgress: true,\n    defaultParent: {\n      path: \"/Some/User/Documents\",\n      fileName: \"Documents\",\n    },\n    scheduledBackupsEnabled: false,\n  },\n};\n\nexport const ScheduledBackupsEnabled = Template.bind({});\nScheduledBackupsEnabled.args = {\n  backupServiceState: {\n    backupDirPath: \"/Some/User/Documents\",\n    backupInProgress: false,\n    defaultParent: {\n      path: \"/Some/User/Documents\",\n      fileName: \"Documents\",\n    },\n    scheduledBackupsEnabled: true,\n  },\n};\n","import __chrome_styles_loader__turnoffscheduledbackupsStyles from \"browser/components/backup/content/turn-off-scheduled-backups.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * The widget for showing available options when users want to turn on\n * scheduled backups.\n */\nexport default class TurnOffScheduledBackups extends MozLitElement {\n  static get queries() {\n    return {\n      cancelButtonEl: \"#backup-turn-off-scheduled-cancel-button\",\n      confirmButtonEl: \"#backup-turn-off-scheduled-confirm-button\",\n    };\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n  }\n\n  handleCancel() {\n    this.dispatchEvent(\n      new CustomEvent(\"dialogCancel\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  handleConfirm() {\n    this.dispatchEvent(\n      new CustomEvent(\"turnOffScheduledBackups\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  contentTemplate() {\n    return html`\n      <div\n        id=\"backup-turn-off-scheduled-wrapper\"\n        aria-labelledby=\"backup-turn-off-scheduled-header\"\n        aria-describedby=\"backup-turn-off-scheduled-description\"\n      >\n        <h1\n          id=\"backup-turn-off-scheduled-header\"\n          class=\"heading-medium\"\n          data-l10n-id=\"turn-off-scheduled-backups-header\"\n        ></h1>\n        <main id=\"backup-turn-off-scheduled-content\">\n          <div id=\"backup-turn-off-scheduled-description\">\n            <span\n              id=\"backup-turn-off-scheduled-description-span\"\n              data-l10n-id=\"turn-off-scheduled-backups-description\"\n            ></span>\n            <!--TODO: finalize support page links (bug 1900467)-->\n            <a\n              id=\"backup-turn-off-scheduled-learn-more-link\"\n              is=\"moz-support-link\"\n              support-page=\"todo-backup\"\n              data-l10n-id=\"turn-off-scheduled-backups-support-link\"\n            ></a>\n          </div>\n        </main>\n\n        <moz-button-group id=\"backup-turn-off-scheduled-button-group\">\n          <moz-button\n            id=\"backup-turn-off-scheduled-cancel-button\"\n            @click=${this.handleCancel}\n            data-l10n-id=\"turn-off-scheduled-backups-cancel-button\"\n          ></moz-button>\n          <moz-button\n            id=\"backup-turn-off-scheduled-confirm-button\"\n            @click=${this.handleConfirm}\n            type=\"primary\"\n            data-l10n-id=\"turn-off-scheduled-backups-confirm-button\"\n          ></moz-button>\n        </moz-button-group>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__turnoffscheduledbackupsStyles}\"\n      />\n      ${this.contentTemplate()}\n    `;\n  }\n}\n\ncustomElements.define(\"turn-off-scheduled-backups\", TurnOffScheduledBackups);\n","import __chrome_styles_loader__turnonscheduledbackupsStyles from \"browser/components/backup/content/turn-on-scheduled-backups.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * The widget for showing available options when users want to turn on\n * scheduled backups.\n */\nexport default class TurnOnScheduledBackups extends MozLitElement {\n  #placeholderIconURL = \"chrome://global/skin/icons/page-portrait.svg\";\n\n  static properties = {\n    defaultIconURL: { type: String, reflect: true },\n    defaultLabel: { type: String, reflect: true },\n    defaultPath: { type: String, reflect: true },\n    _newIconURL: { type: String },\n    _newLabel: { type: String },\n    _newPath: { type: String },\n    showPasswordOptions: { type: Boolean, reflect: true },\n    passwordsMatch: { type: Boolean, reflect: true },\n  };\n\n  static get queries() {\n    return {\n      cancelButtonEl: \"#backup-turn-on-scheduled-cancel-button\",\n      confirmButtonEl: \"#backup-turn-on-scheduled-confirm-button\",\n      filePathButtonEl: \"#backup-location-filepicker-button\",\n      filePathInputCustomEl: \"#backup-location-filepicker-input-custom\",\n      filePathInputDefaultEl: \"#backup-location-filepicker-input-default\",\n      passwordOptionsCheckboxEl: \"#sensitive-data-checkbox-input\",\n      passwordOptionsExpandedEl: \"#passwords\",\n      inputNewPasswordEl: \"#new-password-input\",\n      inputRepeatPasswordEl: \"#repeat-password-input\",\n    };\n  }\n\n  constructor() {\n    super();\n    this.defaultIconURL = \"\";\n    this.defaultLabel = \"\";\n    this.defaultPath = \"\";\n    this._newIconURL = \"\";\n    this._newLabel = \"\";\n    this._newPath = \"\";\n    this.showPasswordOptions = false;\n    this.passwordsMatch = false;\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n\n    this.addEventListener(\"BackupUI:SelectNewFilepickerPath\", this);\n  }\n\n  handleEvent(event) {\n    if (event.type == \"BackupUI:SelectNewFilepickerPath\") {\n      let { path, filename, iconURL } = event.detail;\n      this._newPath = path;\n      this._newLabel = filename;\n      this._newIconURL = iconURL;\n    }\n  }\n\n  async handleChooseLocation() {\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:ShowFilepicker\", {\n        bubbles: true,\n        detail: {\n          win: window.browsingContext,\n        },\n      })\n    );\n  }\n\n  handleCancel() {\n    this.dispatchEvent(\n      new CustomEvent(\"dialogCancel\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n    this.resetChanges();\n  }\n\n  handleConfirm() {\n    /**\n     * TODO:\n     * If encryption is enabled via this dialog, ensure a password is set and pass it to BackupUIParent (bug 1895981).\n     * Before confirmation, verify passwords match and FxA format rules (bug 1896772).\n     */\n    let detail = {\n      parentDirPath: this._newPath || this.defaultPath,\n    };\n\n    if (this.showPasswordOptions && this.passwordsMatch) {\n      detail.password = this.inputNewPasswordEl.value;\n    }\n\n    this.dispatchEvent(\n      new CustomEvent(\"turnOnScheduledBackups\", {\n        bubbles: true,\n        composed: true,\n        detail,\n      })\n    );\n    this.resetChanges();\n  }\n\n  handleTogglePasswordOptions() {\n    this.showPasswordOptions = this.passwordOptionsCheckboxEl?.checked;\n    this.passwordsMatch = false;\n  }\n\n  handleChangeNewPassword() {\n    this.updatePasswordValidity();\n  }\n\n  handleChangeRepeatPassword() {\n    this.updatePasswordValidity();\n  }\n\n  updatePasswordValidity() {\n    let isNewPasswordInputValid = this.inputNewPasswordEl?.checkValidity();\n    let isRepeatPasswordInputValid =\n      this.inputRepeatPasswordEl?.checkValidity();\n    this.passwordsMatch =\n      isNewPasswordInputValid &&\n      isRepeatPasswordInputValid &&\n      this.inputNewPasswordEl.value == this.inputRepeatPasswordEl.value;\n  }\n\n  resetChanges() {\n    this._newPath = \"\";\n    this._newIconURL = \"\";\n    this._newLabel = \"\";\n    this.showPasswordOptions = false;\n    this.passwordOptionsCheckboxEl.checked = false;\n    this.passwordsMatch = false;\n  }\n\n  defaultFilePathInputTemplate() {\n    let filename = this.defaultLabel;\n    let iconURL = this.defaultIconURL || this.#placeholderIconURL;\n\n    return html`\n      <input\n        id=\"backup-location-filepicker-input-default\"\n        class=\"backup-location-filepicker-input\"\n        type=\"text\"\n        readonly\n        data-l10n-id=\"turn-on-scheduled-backups-location-default-folder\"\n        data-l10n-args=${JSON.stringify({\n          recommendedFolder: filename,\n        })}\n        data-l10n-attrs=\"value\"\n        style=${`background-image: url(${iconURL})`}\n      />\n    `;\n  }\n\n  customFilePathInputTemplate() {\n    let filename = this._newLabel;\n    let iconURL = this._newIconURL || this.#placeholderIconURL;\n\n    return html`\n      <input\n        id=\"backup-location-filepicker-input-custom\"\n        class=\"backup-location-filepicker-input\"\n        type=\"text\"\n        readonly\n        value=${filename}\n        style=${`background-image: url(${iconURL})`}\n      />\n    `;\n  }\n\n  allOptionsTemplate() {\n    return html`\n      <fieldset id=\"all-controls\">\n        <fieldset id=\"backup-location-controls\">\n          <label\n            id=\"backup-location-label\"\n            for=\"backup-location-filepicker-input\"\n            data-l10n-id=\"turn-on-scheduled-backups-location-label\"\n          ></label>\n          <div id=\"backup-location-filepicker\">\n            ${!this._newPath\n              ? this.defaultFilePathInputTemplate()\n              : this.customFilePathInputTemplate()}\n            <moz-button\n              id=\"backup-location-filepicker-button\"\n              @click=${this.handleChooseLocation}\n              data-l10n-id=\"turn-on-scheduled-backups-location-choose-button\"\n              aria-controls=\"backup-location-filepicker-input\"\n            ></moz-button>\n          </div>\n        </fieldset>\n\n        <fieldset id=\"sensitive-data-controls\">\n          <div id=\"sensitive-data-checkbox\">\n            <label\n              id=\"sensitive-data-checkbox-label\"\n              for=\"sensitive-data-checkbox-input\"\n              aria-controls=\"passwords\"\n              aria-expanded=${this.showPasswordOptions}\n            >\n              <input\n                id=\"sensitive-data-checkbox-input\"\n                value=${this.showPasswordOptions}\n                @click=${this.handleTogglePasswordOptions}\n                type=\"checkbox\"\n              />\n              <span\n                id=\"sensitive-data-checkbox-span\"\n                data-l10n-id=\"turn-on-scheduled-backups-encryption-label\"\n              ></span>\n            </label>\n            <span\n              class=\"text-deemphasized\"\n              data-l10n-id=\"turn-on-scheduled-backups-encryption-description\"\n            ></span>\n          </div>\n\n          ${this.showPasswordOptions ? this.passwordOptionsTemplate() : null}\n        </fieldset>\n      </fieldset>\n    `;\n  }\n\n  passwordOptionsTemplate() {\n    return html`\n    <fieldset id=\"passwords\">\n      <label id=\"new-password-label\" for=\"new-password-input\">\n        <span id=\"new-password-span\" data-l10n-id=\"turn-on-scheduled-backups-encryption-create-password-label\"></span>\n        <input type=\"password\" id=\"new-password-input\" required @input=${this.handleChangeNewPassword}/>\n    </label>\n      <label id=\"repeat-password-label\" for=\"repeat-password-input\">\n        <span id=\"repeat-password-span\" data-l10n-id=\"turn-on-scheduled-backups-encryption-repeat-password-label\"></span>\n        <input type=\"password\" id=\"repeat-password-input\" required @input=${this.handleChangeRepeatPassword}/>\n      </label>\n    </fieldset>\n  </fieldset>`;\n  }\n\n  contentTemplate() {\n    return html`\n      <form\n        id=\"backup-turn-on-scheduled-wrapper\"\n        aria-labelledby=\"backup-turn-on-scheduled-header\"\n        aria-describedby=\"backup-turn-on-scheduled-description\"\n      >\n        <h1\n          id=\"backup-turn-on-scheduled-header\"\n          class=\"heading-medium\"\n          data-l10n-id=\"turn-on-scheduled-backups-header\"\n        ></h1>\n        <main id=\"backup-turn-on-scheduled-content\">\n          <div id=\"backup-turn-on-scheduled-description\">\n            <span\n              id=\"backup-turn-on-scheduled-description-span\"\n              data-l10n-id=\"turn-on-scheduled-backups-description\"\n            ></span>\n            <!--TODO: finalize support page links (bug 1900467)-->\n            <a\n              id=\"backup-turn-on-scheduled-learn-more-link\"\n              is=\"moz-support-link\"\n              support-page=\"todo-backup\"\n              data-l10n-id=\"turn-on-scheduled-backups-support-link\"\n            ></a>\n          </div>\n          ${this.allOptionsTemplate()}\n        </main>\n\n        <moz-button-group id=\"backup-turn-on-scheduled-button-group\">\n          <moz-button\n            id=\"backup-turn-on-scheduled-cancel-button\"\n            @click=${this.handleCancel}\n            data-l10n-id=\"turn-on-scheduled-backups-cancel-button\"\n          ></moz-button>\n          <moz-button\n            id=\"backup-turn-on-scheduled-confirm-button\"\n            form=\"backup-turn-on-scheduled-wrapper\"\n            @click=${this.handleConfirm}\n            type=\"primary\"\n            data-l10n-id=\"turn-on-scheduled-backups-confirm-button\"\n            ?disabled=${this.showPasswordOptions && !this.passwordsMatch}\n          ></moz-button>\n        </moz-button-group>\n      </form>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__turnonscheduledbackupsStyles}\"\n      />\n      ${this.contentTemplate()}\n    `;\n  }\n}\n\ncustomElements.define(\"turn-on-scheduled-backups\", TurnOnScheduledBackups);\n"],"names":[],"sourceRoot":""}