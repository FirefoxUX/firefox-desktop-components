{"version":3,"file":"sync-device-name-sync-device-name-stories.32b197a1.iframe.bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sources":["webpack:///../preferences/widgets/sync-device-name/sync-device-name.mjs","webpack:///../preferences/widgets/sync-device-name/sync-device-name.stories.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\n\n/**\n * A custom element that manages the display and editing of a Device name\n * in Firefox Sync settings section.\n *\n * @tagname sync-device-name\n * @property {string} value - The current value of the device name.\n * @property {string} defaultValue - Default device name shown in the input field when empty.\n * @property {boolean} disabled - The disabled state of the device name component.\n * @property {boolean} _isInEditMode - Whether the component is currently in edit mode.\n */\nclass SyncDeviceName extends MozLitElement {\n  static properties = {\n    value: { type: String },\n    defaultValue: { type: String },\n    disabled: { type: Boolean },\n    _isInEditMode: { type: Boolean, state: true },\n  };\n\n  static queries = {\n    inputTextEl: \"#fxaSyncComputerName\",\n    changeBtnEl: \"#fxaChangeDeviceName\",\n  };\n\n  constructor() {\n    super();\n\n    /** @type {string} */\n    this.value = \"\";\n\n    /** @type {string} */\n    this.defaultValue = \"\";\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @type {boolean} */\n    this._isInEditMode = false;\n  }\n\n  setFocus() {\n    this.updateComplete.then(() => {\n      const targetEl = this._isInEditMode ? this.inputTextEl : this.changeBtnEl;\n      targetEl?.focus();\n    });\n  }\n\n  onDeviceNameChange() {\n    this._isInEditMode = true;\n    this.setFocus();\n  }\n\n  onDeviceNameCancel() {\n    this._isInEditMode = false;\n    this.setFocus();\n  }\n\n  onDeviceNameSave() {\n    const inputVal = this.inputTextEl.value?.trim();\n    this.value = inputVal === \"\" ? this.defaultValue : inputVal;\n    this._isInEditMode = false;\n    this.setFocus();\n  }\n\n  /**\n   * Handles key presses in the device name input.\n   * Pressing Enter saves the name, pressing Escape cancels editing.\n   * @param {KeyboardEvent} event\n   */\n  onDeviceNameKeyDown(event) {\n    switch (event.key) {\n      case \"Enter\":\n        event.preventDefault();\n        this.onDeviceNameSave();\n        break;\n      case \"Escape\":\n        event.preventDefault();\n        this.onDeviceNameCancel();\n        break;\n    }\n  }\n\n  displayDeviceNameTemplate() {\n    return html`<moz-button\n      id=\"fxaChangeDeviceName\"\n      data-l10n-id=\"sync-device-name-change-2\"\n      data-l10n-attrs=\"accesskey\"\n      slot=\"actions\"\n      @click=${this.onDeviceNameChange}\n      ?disabled=${this.disabled}\n    ></moz-button>`;\n  }\n\n  editDeviceNameTemplate() {\n    return html`<moz-input-text\n        id=\"fxaSyncComputerName\"\n        data-l10n-id=\"sync-device-name-input\"\n        data-l10n-args=${JSON.stringify({ placeholder: this.defaultValue })}\n        .value=${this.value}\n        @keydown=${this.onDeviceNameKeyDown}\n      ></moz-input-text>\n      <moz-button\n        id=\"fxaCancelChangeDeviceName\"\n        data-l10n-id=\"sync-device-name-cancel\"\n        data-l10n-attrs=\"accesskey\"\n        slot=\"actions\"\n        @click=${this.onDeviceNameCancel}\n      ></moz-button>\n      <moz-button\n        id=\"fxaSaveChangeDeviceName\"\n        data-l10n-id=\"sync-device-name-save\"\n        data-l10n-attrs=\"accesskey\"\n        slot=\"actions\"\n        @click=${this.onDeviceNameSave}\n      ></moz-button>`;\n  }\n\n  render() {\n    let label = \"\";\n    if (!this._isInEditMode) {\n      label = this.value == \"\" ? this.defaultValue : this.value;\n    }\n    return html`\n      <moz-box-item label=${label}>\n        ${this._isInEditMode\n          ? this.editDeviceNameTemplate()\n          : this.displayDeviceNameTemplate()}\n      </moz-box-item>\n    `;\n  }\n}\ncustomElements.define(\"sync-device-name\", SyncDeviceName);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport \"chrome://browser/content/preferences/widgets/sync-device-name.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Settings/Sync Device Name\",\n  component: \"sync-device-name\",\n  parameters: {\n    status: \"in-development\",\n  },\n};\n\nwindow.MozXULElement.insertFTLIfNeeded(\"browser/preferences/preferences.ftl\");\n\nconst Template = ({ value = \"\", defaultValue = \"\", disabled = false }) => html`\n  <div style=\"max-width: 500px\">\n    <sync-device-name\n      value=${value}\n      defaultvalue=${defaultValue}\n      ?disabled=${disabled}\n    ></sync-device-name>\n  </div>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  value: \"My Device Name\",\n  disabled: false,\n};\n\nexport const WithDefaultValue = Template.bind({});\nWithDefaultValue.args = {\n  ...Default.args,\n  defaultValue: \"My Default Device Name\",\n};\n\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  ...Default.args,\n  disabled: true,\n};\n"],"names":[],"sourceRoot":""}