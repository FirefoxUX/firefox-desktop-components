{"version":3,"file":"input-field-input-field-stories.a6f15e2e.iframe.bundle.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpDA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack:///../aboutlogins/content/components/input-field/login-origin-field.mjs","webpack:///../aboutlogins/content/components/input-field/input-field.stories.mjs","webpack:///../aboutlogins/content/components/input-field/input-field.mjs","webpack:///../aboutlogins/content/components/input-field/login-password-field.mjs","webpack:///../aboutlogins/content/components/input-field/login-username-field.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\nimport { editableFieldTemplate, stylesTemplate } from \"./input-field.mjs\";\n\nclass LoginOriginField extends MozLitElement {\n  static properties = {\n    value: { type: String, reflect: true },\n    name: { type: String },\n    readonly: { type: Boolean, reflect: true },\n    required: { type: Boolean, reflect: true },\n    onOriginClick: { type: Function },\n  };\n\n  static queries = {\n    input: \"input\",\n  };\n\n  constructor() {\n    super();\n    this.value = \"\";\n  }\n\n  addHTTPSPrefix(e) {\n    const input = e.composedTarget;\n    let originValue = input.value.trim();\n    if (!originValue) {\n      return;\n    }\n\n    if (!originValue.match(/:\\/\\//)) {\n      input.value = \"https://\" + originValue;\n    }\n  }\n\n  get readonlyTemplate() {\n    return html`\n      <label\n        for=\"origin\"\n        class=\"field-label\"\n        data-l10n-id=\"login-item-origin-label\"\n      >\n      </label>\n      <a\n        id=\"origin\"\n        class=\"origin-input\"\n        dir=\"auto\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        name=\"origin\"\n        href=${this.value}\n        @click=${this.onOriginClick}\n      >\n        ${this.value}\n      </a>\n    `;\n  }\n\n  render() {\n    return html`\n      ${stylesTemplate()}\n      ${this.readonly\n        ? this.readonlyTemplate\n        : editableFieldTemplate({\n            type: \"text\",\n            value: this.value,\n            required: this.required,\n            labelL10nId: \"login-item-origin-label\",\n            noteL10nId: \"contextual-manager-passwords-origin-tooltip\",\n            inputL10nId: \"login-item-origin\",\n            onBlur: e => this.addHTTPSPrefix(e),\n          })}\n    `;\n  }\n}\n\ncustomElements.define(\"login-origin-field\", LoginOriginField);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"./login-password-field.mjs\";\nimport \"./login-username-field.mjs\";\nimport \"./login-origin-field.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Credential Management/Input Fields\",\n};\n\nwindow.MozXULElement.insertFTLIfNeeded(\"browser/aboutLogins.ftl\");\n\nexport const LoginUsernameField = ({ value, readonly }) => {\n  return html`\n    <div style=\"max-width: 500px\">\n      <login-username-field .value=${value} .readonly=${readonly}>\n      </login-username-field>\n    </div>\n  `;\n};\n\nLoginUsernameField.argTypes = {\n  value: {\n    control: \"text\",\n    defaultValue: \"username\",\n  },\n  readonly: {\n    control: \"boolean\",\n    defaultValue: false,\n  },\n};\n\nexport const LoginOriginField = ({ value, readonly }) => {\n  return html`\n    <div style=\"max-width: 500px\">\n      <login-origin-field .value=${value} .readonly=${readonly}>\n      </login-origin-field>\n    </div>\n  `;\n};\n\nLoginOriginField.argTypes = {\n  value: {\n    control: \"text\",\n    defaultValue: \"https://example.com\",\n  },\n  readonly: {\n    control: \"boolean\",\n    defaultValue: false,\n  },\n};\n\nexport const LoginPasswordField = ({\n  readonly,\n  visible,\n  value = \"longpassword\".repeat(2),\n}) => {\n  return html`\n    <div style=\"max-width: 500px\">\n      <login-password-field\n        .value=${value}\n        .readonly=${readonly}\n        .visible=${visible}\n        .onPasswordVisible=${() => alert(\"auth...\")}\n      >\n      </login-password-field>\n    </div>\n  `;\n};\n\nLoginPasswordField.argTypes = {\n  readonly: {\n    control: \"boolean\",\n    defaultValue: true,\n  },\n  visible: {\n    control: \"boolean\",\n    defaultValue: false,\n  },\n};\n\nexport const LoginPasswordFieldDisplayMode = ({\n  visible,\n  value = \"longpassword\".repeat(2),\n}) => {\n  return html`\n    <div style=\"max-width: 500px\">\n      <login-password-field\n        .value=${value}\n        .readonly=${true}\n        .visible=${visible}\n      >\n      </login-password-field>\n    </div>\n  `;\n};\n\nLoginPasswordFieldDisplayMode.argTypes = {\n  visible: {\n    control: \"boolean\",\n    defaultValue: false,\n  },\n};\n\nexport const LoginPasswordFieldEditMode = ({\n  visible,\n  value = \"longpassword\".repeat(2),\n}) => {\n  return html`\n    <div style=\"max-width: 500px\">\n      <login-password-field\n        .value=${value}\n        .readonly=${false}\n        .visible=${visible}\n      >\n      </login-password-field>\n    </div>\n  `;\n};\n\nLoginPasswordFieldEditMode.argTypes = {\n  visible: {\n    control: \"boolean\",\n    defaultValue: false,\n  },\n};\n","import __chrome_styles_loader__inputfieldStyles from \"browser/components/aboutlogins/content/components/input-field/input-field.css\";\nimport __chrome_styles_loader__commonStyles from \"toolkit/themes/linux/global/in-content/common.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"chrome://global/content/vendor/lit.all.mjs\";\n\nexport const stylesTemplate = () => html`\n  <link rel=\"stylesheet\" href=\"${__chrome_styles_loader__commonStyles}\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"${__chrome_styles_loader__inputfieldStyles}\"\n  />\n`;\n\nexport const editableFieldTemplate = ({\n  type,\n  value,\n  disabled,\n  required,\n  onFocus,\n  onBlur,\n  labelL10nId,\n  noteL10nId,\n  inputL10nId,\n}) => html`\n  <label\n    for=\"input\"\n    class=\"field-label\"\n    data-l10n-id=${labelL10nId}\n    tabindex=\"-1\"\n  >\n  </label>\n  <input\n    id=\"input\"\n    class=\"input-field\"\n    data-l10n-id=${ifDefined(inputL10nId)}\n    type=${type}\n    .value=${value}\n    aria-describedby=\"explainer\"\n    ?disabled=${disabled}\n    ?required=${required}\n    @focus=${onFocus}\n    @blur=${onBlur}\n  />\n  <span\n    id=\"explainer\"\n    role=\"note\"\n    class=\"explainer text-deemphasized\"\n    data-l10n-id=${ifDefined(noteL10nId)}\n  ></span>\n`;\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\nimport { editableFieldTemplate, stylesTemplate } from \"./input-field.mjs\";\n\nclass LoginPasswordField extends MozLitElement {\n  static CONCEALED_PASSWORD_TEXT = \" \".repeat(8);\n\n  static properties = {\n    value: { type: String },\n    name: { type: String },\n    newPassword: { type: Boolean },\n    concealed: { type: Boolean, reflect: true },\n    required: { type: Boolean, reflect: true },\n  };\n\n  static queries = {\n    input: \"input\",\n    label: \"label\",\n    button: \"moz-button\",\n  };\n\n  constructor() {\n    super();\n    this.value = \"\";\n    this.concealed = true;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"input\", e => {\n      this.value = e.composedTarget.value;\n    });\n  }\n\n  get #type() {\n    return this.concealed ? \"password\" : \"text\";\n  }\n\n  get #password() {\n    return !this.newPassword && this.concealed\n      ? LoginPasswordField.CONCEALED_PASSWORD_TEXT\n      : this.value;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has(\"concealed\") && !changedProperties.concealed) {\n      this.input.selectionStart = this.value.length;\n    }\n  }\n\n  render() {\n    return html`\n      ${stylesTemplate()}\n      ${editableFieldTemplate({\n        type: this.#type,\n        value: this.#password,\n        labelId: \"login-item-password-label\",\n        disabled: this.readonly,\n        required: this.required,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        labelL10nId: \"login-item-password-label\",\n        noteL10nId: \"contextual-manager-passwords-password-tooltip-2\",\n      })}\n    `;\n  }\n\n  handleFocus() {\n    this.concealed = false;\n  }\n\n  handleBlur(ev) {\n    if (ev.relatedTarget === this.label) {\n      return;\n    }\n    this.concealed = true;\n  }\n}\n\ncustomElements.define(\"login-password-field\", LoginPasswordField);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\nimport { editableFieldTemplate, stylesTemplate } from \"./input-field.mjs\";\n\nclass LoginUsernameField extends MozLitElement {\n  static properties = {\n    value: { type: String, reflect: true },\n    name: { type: String },\n    readonly: { type: Boolean, reflect: true },\n    required: { type: Boolean, reflect: true },\n  };\n\n  static queries = {\n    input: \"input\",\n  };\n\n  constructor() {\n    super();\n    this.value = \"\";\n  }\n\n  render() {\n    return html`\n      ${stylesTemplate()}\n      ${editableFieldTemplate({\n        type: \"text\",\n        value: this.value,\n        disabled: this.readonly,\n        required: this.required,\n        labelL10nId: \"login-item-username-label\",\n        noteL10nId: \"contextual-manager-passwords-username-tooltip\",\n      })}\n    `;\n  }\n}\n\ncustomElements.define(\"login-username-field\", LoginUsernameField);\n"],"names":[],"sourceRoot":""}