{"version":3,"file":"1372.1cdbb1be.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-box-button/moz-box-button.mjs"],"sourcesContent":["import __chrome_styles_loader__mozboxbuttonStyles from \"toolkit/content/widgets/moz-box-button/moz-box-button.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport { MozBoxBase } from \"../lit-utils.mjs\";\n\n/**\n * A button custom element used for navigating between sub-pages or opening\n * dialogs.\n *\n * @tagname moz-box-button\n * @property {string} label - Label for the button.\n * @property {string} description - Descriptive text for the button.\n * @property {string} iconSrc - The src for an optional icon shown next to the label.\n * @property {boolean} disabled - Whether or not the button is disabled.\n * @property {string} accesskey - Key used for keyboard access.\n */\nexport default class MozBoxButton extends MozBoxBase {\n  static shadowRootOptions = {\n    ...super.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static properties = {\n    disabled: { type: Boolean },\n    accessKey: { type: String, mapped: true, fluent: true },\n  };\n\n  static queries = {\n    buttonEl: \"button\",\n    navIcon: \".nav-icon\",\n  };\n\n  constructor() {\n    super();\n    this.disabled = false;\n  }\n\n  click() {\n    this.buttonEl.click();\n  }\n\n  labelTemplate() {\n    if (!this.label) {\n      return \"\";\n    }\n    return html`<label\n      is=\"moz-label\"\n      class=\"label\"\n      shownaccesskey=${ifDefined(this.accessKey)}\n    >\n      ${this.label}\n    </label>`;\n  }\n\n  render() {\n    return html`\n      ${super.stylesTemplate()}\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozboxbuttonStyles}\"\n      />\n      <button\n        class=\"button\"\n        ?disabled=${this.disabled}\n        accesskey=${ifDefined(this.accessKey)}\n      >\n        ${super.textTemplate()}\n        <img\n          class=\"icon nav-icon\"\n          src=\"chrome://global/skin/icons/arrow-right.svg\"\n          role=\"presentation\"\n        />\n      </button>\n    `;\n  }\n}\ncustomElements.define(\"moz-box-button\", MozBoxButton);\n"],"names":[],"sourceRoot":""}