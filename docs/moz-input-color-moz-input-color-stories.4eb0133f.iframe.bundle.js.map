{"version":3,"file":"moz-input-color-moz-input-color-stories.4eb0133f.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9FA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-input-color/moz-input-color.mjs","webpack:///../../../toolkit/content/widgets/moz-input-color/moz-input-color.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__mozinputcolorStyles from \"toolkit/content/widgets/moz-input-color/moz-input-color.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\n/**\n * @tagname moz-input-color\n * @property {string} [value] - A CSS hex value of the initial color shown in the swatch area.\n * @property {string} [name] - Any name that will be associated with the component's nested `input` element. Useful when used in `form`s.\n * @property {string} label - The text of the label.\n */\nexport default class MozInputColor extends MozLitElement {\n  static properties = {\n    value: { type: String },\n    name: { type: String },\n    label: { type: String, fluent: true },\n  };\n\n  static queries = {\n    inputEl: \".swatch\",\n  };\n\n  static shadowRootOptions = {\n    ...MozLitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  constructor() {\n    super();\n\n    this.name = \"\";\n    this.label = \"\";\n    this.value = \"\";\n  }\n\n  /**\n   * @param {Event} e\n   */\n  updateInputFromEvent(e) {\n    /**\n     * @type {HTMLInputElement}\n     */\n    const input = /** @type {object} */ (e.target);\n    this.value = input.value;\n  }\n\n  /**\n   * Dispatches an event from the host element so that outside\n   * listeners can react to these events\n   *\n   * @param {Event} e\n   * @memberof MozBaseInputElement\n   */\n  redispatchEvent(e) {\n    this.updateInputFromEvent(e);\n\n    let { bubbles, cancelable, composed, type } = e;\n    let newEvent = new Event(type, {\n      bubbles,\n      cancelable,\n      composed,\n    });\n    this.dispatchEvent(newEvent);\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozinputcolorStyles}\"\n      />\n\n      <label>\n        <input\n          type=\"color\"\n          name=${ifDefined(this.name)}\n          .value=${this.value}\n          class=\"swatch\"\n          @input=${this.updateInputFromEvent}\n          @change=${this.redispatchEvent}\n        />\n        <span>${this.label}</span>\n        <img\n          class=\"icon\"\n          alt=\"\"\n          src=\"chrome://global/skin/icons/edit-outline.svg\"\n        />\n      </label>\n    `;\n  }\n}\ncustomElements.define(\"moz-input-color\", MozInputColor);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\nimport \"./moz-input-color.mjs\";\n\nexport default {\n  title: \"UI Widgets/Input Color\",\n  component: \"moz-input-color\",\n  argTypes: {},\n  parameters: {\n    status: \"in-development\",\n    fluent: `\nmoz-input-color-label =\n  .label = Background\n    `,\n  },\n};\n\nconst Template = ({ value, label, l10nId }) => {\n  return html`\n    <moz-input-color\n      value=${value}\n      label=${label}\n      data-l10n-id=${l10nId}\n    ></moz-input-color>\n  `;\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n  value: \"#7293C9\",\n  l10nId: \"moz-input-color-label\",\n};\n"],"names":[],"sourceRoot":""}