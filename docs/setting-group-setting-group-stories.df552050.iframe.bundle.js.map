{"version":3,"file":"setting-group-setting-group-stories.df552050.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AC1DA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../preferences/widgets/setting-group/setting-group.stories.mjs","webpack:///../preferences/widgets/setting-group/setting-group.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport \"chrome://browser/content/preferences/widgets/setting-group.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Settings/Setting Group\",\n  component: \"setting-group\",\n  parameters: {\n    status: \"in-development\",\n    handles: [\"click\", \"input\", \"change\"],\n    fluent: `\ngroup-example-label =\n  .label = Group Label\n  .description = Could have a description as well.\ncheckbox-example-input =\n  .label = Checkbox example of setting-control\n  .description = Could have a description like moz-checkbox.\ncheckbox-example-input2 =\n  .label = Another checkbox\n`,\n  },\n};\n\nfunction getSetting() {\n  return {\n    value: true,\n    on() {},\n    off() {},\n    userChange() {},\n    visible: () => true,\n  };\n}\n\nconst Template = ({ config }) => html`\n  <setting-group .config=${config} .getSetting=${getSetting}></setting-group>\n`;\n\nexport const Group = Template.bind({});\nGroup.args = {\n  config: {\n    id: \"group-example\",\n    l10nId: \"group-example-label\",\n    items: [\n      {\n        id: \"checkbox-example\",\n        l10nId: \"checkbox-example-input\",\n      },\n      {\n        id: \"checkbox-example2\",\n        l10nId: \"checkbox-example-input2\",\n        supportPage: \"example-support\",\n        iconSrc: \"chrome://global/skin/icons/highlights.svg\",\n      },\n    ],\n  },\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\nexport class SettingGroup extends MozLitElement {\n  static properties = {\n    config: { type: Object },\n    groupId: { type: String },\n    // getSetting should be Preferences.getSetting from preferencesBindings.js\n    getSetting: { type: Function },\n  };\n\n  createRenderRoot() {\n    return this;\n  }\n\n  itemTemplate(item) {\n    let setting = this.getSetting(item.id);\n    if (!setting.visible) {\n      return \"\";\n    }\n    return html`<setting-control\n      .setting=${setting}\n      .config=${item}\n    ></setting-control>`;\n  }\n\n  xulCheckboxTemplate(item, setting) {\n    let result;\n    let checkbox = document.createXULElement(\"checkbox\");\n    checkbox.id = item.id;\n    document.l10n.setAttributes(checkbox, item.l10nId);\n    checkbox.addEventListener(\"command\", e =>\n      setting.userChange(e.target.checked)\n    );\n    setting.on(\"change\", () => (checkbox.checked = setting.value));\n    checkbox.checked = setting.value;\n    if (item.supportPage) {\n      let container = document.createXULElement(\"hbox\");\n      container.setAttribute(\"align\", \"center\");\n      let supportLink = document.createElement(\"a\", { is: \"moz-support-link\" });\n      supportLink.supportPage = item.supportPage;\n      checkbox.classList.add(\"tail-with-learn-more\");\n      container.append(checkbox, supportLink);\n      result = container;\n    } else {\n      result = checkbox;\n    }\n    if (item.subcategory) {\n      result.dataset.subcategory = item.subcategory;\n    }\n    return result;\n  }\n\n  xulItemTemplate(item) {\n    let setting = this.getSetting(item.id);\n    if (!setting.visible) {\n      return \"\";\n    }\n    switch (item.control) {\n      case \"checkbox\":\n      default:\n        return this.xulCheckboxTemplate(item, setting);\n    }\n  }\n\n  render() {\n    if (!this.config) {\n      return \"\";\n    }\n    if (\n      window.IS_STORYBOOK ||\n      Services.prefs.getBoolPref(\"settings.revamp.design\", false)\n    ) {\n      return html`<moz-fieldset data-l10n-id=${ifDefined(this.config.l10nId)}\n        >${this.config.items.map(item => this.itemTemplate(item))}</moz-fieldset\n      >`;\n    }\n    return this.config.items.map(item => this.xulItemTemplate(item));\n  }\n}\ncustomElements.define(\"setting-group\", SettingGroup);\n"],"names":[],"sourceRoot":""}