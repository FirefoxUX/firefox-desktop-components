{"version":3,"file":"moz-promo-moz-promo-stories.2efb5aa1.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxsources":["webpack:///../../../toolkit/content/widgets/moz-promo/moz-promo.mjs","webpack:///../../../toolkit/content/widgets/moz-promo/moz-promo.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__mozpromoStyles from \"toolkit/content/widgets/moz-promo/moz-promo.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\n/**\n * A promotional callout element.\n *\n * @tagname moz-promo\n * @property {string} type - The type of promo, can be either\n *  \"default\" or \"vibrant\". Determines the colors of the promotional\n *  element\n * @property {string} heading - The heading of the promo element.\n * @property {string} message - The message of the promo element.\n * @property {string} imageSrc - The main image of the promo element.\n * @property {string} iconAlignment - How the icon should be aligned. Can be \"start\", \"end\", \"center\".\n */\nexport default class MozPromo extends MozLitElement {\n  static properties = {\n    type: { type: String, reflect: true },\n    heading: { type: String, fluent: true },\n    message: { type: String, fluent: true },\n    imageSrc: { type: String, reflect: true },\n    imageAlignment: { type: String, reflect: true },\n  };\n\n  constructor() {\n    super();\n    this.type = \"default\";\n    this.imageAlignment = \"start\";\n  }\n\n  updated(changedProperties) {\n    // super.updated?.(changedProperties);\n    if (changedProperties.has(\"imageSrc\") && this.imageSrc) {\n      this.style.setProperty(\"--promo-image-url\", `url(\"${this.imageSrc}\")`);\n    }\n  }\n\n  headingTemplate() {\n    if (this.heading) {\n      return html`<strong class=\"heading heading-medium\"\n        >${this.heading}</strong\n      >`;\n    }\n    return \"\";\n  }\n  imageTemplate() {\n    if (this.imageSrc) {\n      return html` <div class=\"image-container\"></div> `;\n    }\n    return \"\";\n  }\n  render() {\n    let imageStartAligned = this.imageAlignment == \"start\";\n    return html` <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozpromoStyles}\"\n      />\n      <div class=\"container\">\n        ${imageStartAligned ? this.imageTemplate() : \"\"}\n        <div class=\"text-container\">\n          ${this.headingTemplate()}\n          <p class=\"message\">${this.message}</p>\n        </div>\n        ${!imageStartAligned ? this.imageTemplate() : \"\"}\n      </div>`;\n  }\n}\ncustomElements.define(\"moz-promo\", MozPromo);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport \"./moz-promo.mjs\";\n\nconst fluentStrings = [\n  \"moz-promo-message\",\n  \"moz-promo-message-heading\",\n  \"moz-promo-message-heading-long\",\n];\n\nexport default {\n  title: \"UI Widgets/Promo\",\n  component: \"moz-promo\",\n  argTypes: {\n    type: {\n      options: [\"default\", \"vibrant\"],\n      control: { type: \"select\" },\n    },\n    l10nId: {\n      options: fluentStrings,\n      control: { type: \"select\" },\n    },\n    heading: {\n      table: {\n        disable: true,\n      },\n    },\n    message: {\n      table: {\n        disable: true,\n      },\n    },\n    width: {\n      control: { type: \"number\" },\n    },\n    imageAlignment: {\n      options: [\"start\", \"end\", \"center\"],\n      control: { type: \"select\" },\n    },\n  },\n  parameters: {\n    status: \"in-development\",\n    fluent: `\nmoz-promo-message =\n  .message = Information about a new feature to check out\nmoz-promo-message-heading =\n  .heading = Check out this new feature\n  .message = Information about a new feature to check out\nmoz-promo-message-heading-long =\n  .heading = A longer version of the heading to check for text wrapping, neat!\n  .message = A much longer message to check text wrapping within the promotional element. A much longer message to check text wrapping within the promotional element.  \n    `,\n  },\n};\n\nconst Template = ({\n  type,\n  heading,\n  message,\n  l10nId,\n  width,\n  imageSrc,\n  imageAlignment,\n}) => html`\n  <div style=\"width: ${width}px\">\n    <moz-promo\n      type=${type}\n      heading=${ifDefined(heading)}\n      message=${ifDefined(message)}\n      data-l10n-id=${ifDefined(l10nId)}\n      imageSrc=${ifDefined(imageSrc)}\n      imageAlignment=${ifDefined(imageAlignment)}\n    ></moz-promo>\n  </div>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  width: 600,\n  type: \"default\",\n  l10nId: \"moz-promo-message\",\n};\n\nexport const Vibrant = Template.bind({});\nVibrant.args = {\n  ...Default.args,\n  type: \"vibrant\",\n};\n\nexport const WithHeading = Template.bind({});\nWithHeading.args = {\n  ...Vibrant.args,\n  l10nId: \"moz-promo-message-heading\",\n};\n\nexport const WithWrappedMessage = Template.bind({});\nWithWrappedMessage.args = {\n  ...Vibrant.args,\n  width: 400,\n  l10nId: \"moz-promo-message-heading-long\",\n};\n\nexport const ImageAtStart = Template.bind({});\nImageAtStart.args = {\n  ...Default.args,\n  imageSrc: \"chrome://global/skin/illustrations/about-license.svg\",\n  imageAlignment: \"start\",\n};\n\nexport const ImageAtEnd = Template.bind({});\nImageAtEnd.args = {\n  ...ImageAtStart.args,\n  imageAlignment: \"end\",\n};\n\nexport const ImageAtCenter = Template.bind({});\nImageAtCenter.args = {\n  ...ImageAtStart.args,\n  imageAlignment: \"center\",\n};\n\nexport const SquareImage = Template.bind({});\nSquareImage.args = {\n  ...ImageAtStart.args,\n};\n\nexport const RectangleImage = Template.bind({});\nRectangleImage.args = {\n  ...ImageAtStart.args,\n  imageSrc: \"chrome://global/content/aboutconfig/background.svg\",\n};\n"],"names":[],"sourceRoot":""}