{"version":3,"file":"turn-off-scheduled-backups-stories.45365fef.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACzGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://browser-storybook/../backup/content/turn-off-scheduled-backups.mjs","webpack://browser-storybook/../backup/content/turn-off-scheduled-backups.stories.mjs","webpack://browser-storybook/../../../toolkit/content/widgets/moz-card/moz-card.mjs"],"sourcesContent":["import __chrome_styles_loader__turnoffscheduledbackupsStyles from \"browser/components/backup/content/turn-off-scheduled-backups.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * The widget for showing available options when users want to turn on\n * scheduled backups.\n */\nexport default class TurnOffScheduledBackups extends MozLitElement {\n  static get queries() {\n    return {\n      cancelButtonEl: \"#backup-turn-off-scheduled-cancel-button\",\n      confirmButtonEl: \"#backup-turn-off-scheduled-confirm-button\",\n    };\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n  }\n\n  handleCancel() {\n    this.dispatchEvent(\n      new CustomEvent(\"dialogCancel\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  handleConfirm() {\n    this.dispatchEvent(\n      new CustomEvent(\"turnOffScheduledBackups\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  contentTemplate() {\n    return html`\n      <div\n        id=\"backup-turn-off-scheduled-wrapper\"\n        aria-labelledby=\"backup-turn-off-scheduled-header\"\n        aria-describedby=\"backup-turn-off-scheduled-description\"\n      >\n        <h1\n          id=\"backup-turn-off-scheduled-header\"\n          class=\"heading-medium\"\n          data-l10n-id=\"turn-off-scheduled-backups-header\"\n        ></h1>\n        <main id=\"backup-turn-off-scheduled-content\">\n          <div id=\"backup-turn-off-scheduled-description\">\n            <span\n              id=\"backup-turn-off-scheduled-description-span\"\n              data-l10n-id=\"turn-off-scheduled-backups-description\"\n            ></span>\n            <!--TODO: finalize support page links (bug 1900467)-->\n            <a\n              id=\"backup-turn-off-scheduled-learn-more-link\"\n              is=\"moz-support-link\"\n              support-page=\"todo-backup\"\n              data-l10n-id=\"turn-off-scheduled-backups-support-link\"\n            ></a>\n          </div>\n        </main>\n\n        <moz-button-group id=\"backup-turn-off-scheduled-button-group\">\n          <moz-button\n            id=\"backup-turn-off-scheduled-cancel-button\"\n            @click=${this.handleCancel}\n            data-l10n-id=\"turn-off-scheduled-backups-cancel-button\"\n          ></moz-button>\n          <moz-button\n            id=\"backup-turn-off-scheduled-confirm-button\"\n            @click=${this.handleConfirm}\n            type=\"primary\"\n            data-l10n-id=\"turn-off-scheduled-backups-confirm-button\"\n          ></moz-button>\n        </moz-button-group>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__turnoffscheduledbackupsStyles}\"\n      />\n      ${this.contentTemplate()}\n    `;\n  }\n}\n\ncustomElements.define(\"turn-off-scheduled-backups\", TurnOffScheduledBackups);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"chrome://global/content/elements/moz-card.mjs\";\nimport \"./turn-off-scheduled-backups.mjs\";\n\nwindow.MozXULElement.insertFTLIfNeeded(\"locales-preview/backupSettings.ftl\");\nwindow.MozXULElement.insertFTLIfNeeded(\"branding/brand.ftl\");\n\nexport default {\n  title: \"Domain-specific UI Widgets/Backup/Turn Off Scheduled Backups\",\n  component: \"turn-off-scheduled-backups\",\n  argTypes: {},\n};\n\nconst Template = () => html`\n  <moz-card style=\"width: 27.8rem;\">\n    <turn-off-scheduled-backups></turn-off-scheduled-backups>\n  </moz-card>\n`;\n\nexport const Default = Template.bind({});\n","import __chrome_styles_loader__mozcardStyles from \"toolkit/content/widgets/moz-card/moz-card.css\";\n/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport {\n  html,\n  ifDefined,\n  when,\n} from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * Cards contain content and actions about a single subject.\n * There are two card types:\n * The default type where no type attribute is required and the card\n * will have no extra functionality.\n *\n * The \"accordion\" type will initially not show any content. The card\n * will contain an arrow to expand the card so that all of the content\n * is visible.\n *\n *\n * @property {string} heading - The heading text that will be used for the card.\n * @property {string} icon - (optional) A flag to indicate the header should include an icon\n * @property {string} type - (optional) The type of card. No type specified\n *   will be the default card. The other available type is \"accordion\"\n * @slot content - The content to show inside of the card.\n */\nexport default class MozCard extends MozLitElement {\n  static queries = {\n    detailsEl: \"#moz-card-details\",\n    headingEl: \"#heading\",\n    contentSlotEl: \"#content\",\n  };\n\n  static properties = {\n    heading: { type: String },\n    icon: { type: Boolean },\n    type: { type: String, reflect: true },\n    expanded: { type: Boolean },\n  };\n\n  constructor() {\n    super();\n    this.expanded = false;\n    this.type = \"default\";\n  }\n\n  headingTemplate() {\n    if (!this.heading) {\n      return \"\";\n    }\n    return html`\n      <div id=\"heading-wrapper\">\n        ${when(\n          this.type == \"accordion\",\n          () => html`<div class=\"chevron-icon\"></div>`\n        )}\n        ${when(\n          this.icon,\n          () =>\n            html`<div part=\"icon\" id=\"heading-icon\" role=\"presentation\"></div>`\n        )}\n        <span id=\"heading\">${this.heading}</span>\n      </div>\n    `;\n  }\n\n  cardTemplate() {\n    if (this.type === \"accordion\") {\n      return html`\n        <details id=\"moz-card-details\" @toggle=\"${this.onToggle}\">\n          <summary>${this.headingTemplate()}</summary>\n          <div id=\"content\"><slot></slot></div>\n        </details>\n      `;\n    }\n\n    return html`\n      ${this.headingTemplate()}\n      <div id=\"content\" aria-describedby=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  /**\n   * Handles the click event on the chevron icon.\n   *\n   * Without this, the click event would be passed to\n   * toggleDetails which would force the details element\n   * to stay open.\n   *\n   * @memberof MozCard\n   */\n  onDetailsClick() {\n    this.toggleDetails();\n  }\n\n  /**\n   * @param {boolean} force - Used to force open or force close the\n   * details element.\n   * @memberof MozCard\n   */\n  toggleDetails(force) {\n    this.detailsEl.open = force ?? !this.detailsEl.open;\n  }\n\n  onToggle() {\n    this.dispatchEvent(\n      new ToggleEvent(\"toggle\", {\n        newState: this.detailsEl.open ? \"open\" : \"closed\",\n        oldState: this.detailsEl.open ? \"closed\" : \"open\",\n      })\n    );\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozcardStyles}\"\n      />\n      <article\n        class=\"moz-card\"\n        aria-labelledby=${ifDefined(this.heading ? \"heading\" : undefined)}\n      >\n        ${this.cardTemplate()}\n      </article>\n    `;\n  }\n}\ncustomElements.define(\"moz-card\", MozCard);\n"],"names":[],"sourceRoot":""}