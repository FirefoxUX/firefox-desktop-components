{"version":3,"file":"backup-settings-stories.749d4829.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACpHA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrsources":["webpack://browser-storybook/../backup/content/backup-settings.mjs","webpack://browser-storybook/../backup/content/backup-settings.stories.mjs","webpack://browser-storybook/../backup/content/turn-on-scheduled-backups.mjs"],"sourcesContent":["import __chrome_styles_loader__backupsettingsStyles from \"browser/components/backup/content/backup-settings.css\";\nimport __chrome_styles_loader__preferencesStyles from \"browser/themes/shared/preferences/preferences.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n// eslint-disable-next-line import/no-unassigned-import\nimport \"chrome://browser/content/backup/turn-on-scheduled-backups.mjs\";\n\n/**\n * The widget for managing the BackupService that is embedded within the main\n * document of about:settings / about:preferences.\n */\nexport default class BackupSettings extends MozLitElement {\n  static properties = {\n    backupServiceState: { type: Object },\n  };\n\n  static get queries() {\n    return {\n      scheduledBackupsButtonEl: \"#backup-toggle-scheduled-button\",\n      turnOnScheduledBackupsDialogEl: \"#turn-on-scheduled-backups-dialog\",\n      turnOnScheduledBackupsEl: \"turn-on-scheduled-backups\",\n    };\n  }\n\n  /**\n   * Creates a BackupPreferences instance and sets the initial default\n   * state.\n   */\n  constructor() {\n    super();\n    this.backupServiceState = {\n      backupFilePath: \"Documents\", // TODO: make save location configurable (bug 1895943)\n      backupInProgress: false,\n      scheduledBackupsEnabled: false,\n    };\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n\n    this.addEventListener(\"scheduledBackupsCancel\", this);\n    this.addEventListener(\"scheduledBackupsConfirm\", this);\n  }\n\n  handleEvent(event) {\n    switch (event.type) {\n      case \"scheduledBackupsConfirm\":\n        this.turnOnScheduledBackupsDialogEl.close();\n        this.dispatchEvent(\n          new CustomEvent(\"BackupUI:ScheduledBackupsConfirm\", {\n            bubbles: true,\n            composed: true,\n          })\n        );\n        break;\n      case \"scheduledBackupsCancel\":\n        this.turnOnScheduledBackupsDialogEl.close();\n        break;\n    }\n  }\n\n  handleShowScheduledBackups() {\n    if (\n      !this.backupServiceState.scheduledBackupsEnabled &&\n      this.turnOnScheduledBackupsDialogEl\n    ) {\n      this.turnOnScheduledBackupsDialogEl.showModal();\n    }\n  }\n\n  turnOnScheduledBackupsDialogTemplate() {\n    return html`<dialog id=\"turn-on-scheduled-backups-dialog\">\n      <turn-on-scheduled-backups\n        .backupFilePath=${this.backupServiceState.backupFilePath}\n      ></turn-on-scheduled-backups>\n    </dialog>`;\n  }\n\n  render() {\n    return html`<link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__preferencesStyles}\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__backupsettingsStyles}\"\n      />\n      <div id=\"scheduled-backups\">\n        <div>\n          Backup in progress:\n          ${this.backupServiceState.backupInProgress ? \"Yes\" : \"No\"}\n        </div>\n\n        ${this.turnOnScheduledBackupsDialogTemplate()}\n\n        <moz-button\n          id=\"backup-toggle-scheduled-button\"\n          @click=${this.handleShowScheduledBackups}\n          data-l10n-id=\"settings-data-backup-toggle\"\n        ></moz-button>\n      </div>`;\n  }\n}\n\ncustomElements.define(\"backup-settings\", BackupSettings);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"./backup-settings.mjs\";\n\nwindow.MozXULElement.insertFTLIfNeeded(\"locales-preview/backupSettings.ftl\");\nwindow.MozXULElement.insertFTLIfNeeded(\"branding/brand.ftl\");\n\nexport default {\n  title: \"Domain-specific UI Widgets/Backup/Backup Settings\",\n  component: \"backup-settings\",\n  argTypes: {},\n};\n\nconst Template = ({ backupServiceState }) => html`\n  <backup-settings .backupServiceState=${backupServiceState}></backup-settings>\n`;\n\nexport const BackingUpNotInProgress = Template.bind({});\nBackingUpNotInProgress.args = {\n  backupServiceState: {\n    backupFilePath: \"Documents\",\n    backupInProgress: false,\n    scheduledBackupsEnabled: false,\n  },\n};\n\nexport const BackingUpInProgress = Template.bind({});\nBackingUpInProgress.args = {\n  backupServiceState: {\n    backupFilePath: \"Documents\",\n    backupInProgress: true,\n    scheduledBackupsEnabled: false,\n  },\n};\n","import __chrome_styles_loader__turnonscheduledbackupsStyles from \"browser/components/backup/content/turn-on-scheduled-backups.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * The widget for showing available options when users want to turn on\n * scheduled backups.\n */\nexport default class TurnOnScheduledBackups extends MozLitElement {\n  static properties = {\n    backupFilePath: { type: String },\n    showPasswordOptions: { type: Boolean, reflect: true },\n  };\n\n  static get queries() {\n    return {\n      cancelButtonEl: \"#backup-turn-on-scheduled-cancel-button\",\n      confirmButtonEl: \"#backup-turn-on-scheduled-confirm-button\",\n      passwordOptionsCheckboxEl: \"#sensitive-data-checkbox-input\",\n      passwordOptionsExpandedEl: \"#passwords\",\n      recommendedFolderInputEl: \"#backup-location-filepicker-input\",\n    };\n  }\n\n  constructor() {\n    super();\n    this.backupFilePath = null;\n    this.showPasswordOptions = false;\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n  }\n\n  handleChooseLocation() {\n    // TODO: show file picker (bug 1895943)\n  }\n\n  handleCancel() {\n    this.dispatchEvent(\n      new CustomEvent(\"scheduledBackupsCancel\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n    this.showPasswordOptions = false;\n    this.passwordOptionsCheckboxEl.checked = false;\n  }\n\n  handleConfirm() {\n    /**\n     * TODO:\n     * We should pass save location to BackupUIParent here (bug 1895943).\n     * If encryption is enabled via this dialog, ensure a password is set and pass it to BackupUIParent (bug 1895981).\n     * Before confirmation, verify passwords match and FxA format rules (bug 1896772).\n     */\n    this.dispatchEvent(\n      new CustomEvent(\"scheduledBackupsConfirm\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n    this.showPasswordOptions = false;\n    this.passwordOptionsCheckboxEl.checked = false;\n  }\n\n  handleTogglePasswordOptions() {\n    this.showPasswordOptions = this.passwordOptionsCheckboxEl?.checked;\n  }\n\n  allOptionsTemplate() {\n    return html`\n      <fieldset id=\"all-controls\">\n        <fieldset id=\"backup-location-controls\">\n          <label\n            id=\"backup-location-label\"\n            for=\"backup-location-filepicker-input\"\n            data-l10n-id=\"turn-on-scheduled-backups-location-label\"\n          ></label>\n          <!-- TODO: show folder icon (bug 1895943) -->\n          <div id=\"backup-location-filepicker\">\n            <input\n              id=\"backup-location-filepicker-input\"\n              type=\"text\"\n              readonly\n              data-l10n-id=\"turn-on-scheduled-backups-location-default-folder\"\n              data-l10n-args=${JSON.stringify({\n                recommendedFolder: this.backupFilePath,\n              })}\n              data-l10n-attrs=\"value\"\n            />\n            <moz-button\n              id=\"backup-location-filepicker-button\"\n              @click=${this.handleChooseLocation}\n              data-l10n-id=\"turn-on-scheduled-backups-location-choose-button\"\n              aria-controls=\"backup-location-filepicker-input\"\n            ></moz-button>\n          </div>\n        </fieldset>\n\n        <fieldset id=\"sensitive-data-controls\">\n          <div id=\"sensitive-data-checkbox\">\n            <label\n              id=\"sensitive-data-checkbox-label\"\n              for=\"sensitive-data-checkbox-input\"\n              aria-controls=\"passwords\"\n              aria-expanded=${this.showPasswordOptions}\n            >\n              <input\n                id=\"sensitive-data-checkbox-input\"\n                value=${this.showPasswordOptions}\n                @click=${this.handleTogglePasswordOptions}\n                type=\"checkbox\"\n              />\n              <span\n                id=\"sensitive-data-checkbox-span\"\n                data-l10n-id=\"turn-on-scheduled-backups-encryption-label\"\n              ></span>\n            </label>\n            <span\n              class=\"text-deemphasized\"\n              data-l10n-id=\"turn-on-scheduled-backups-encryption-description\"\n            ></span>\n          </div>\n\n          ${this.showPasswordOptions ? this.passwordOptionsTemplate() : null}\n        </fieldset>\n      </fieldset>\n    `;\n  }\n\n  passwordOptionsTemplate() {\n    return html`\n    <fieldset id=\"passwords\">\n      <label id=\"new-password-label\" for=\"new-password-input\">\n        <span id=\"new-password-span\" data-l10n-id=\"turn-on-scheduled-backups-encryption-create-password-label\"></span>\n        <input type=\"password\" id=\"new-password-input\"/>\n    </label>\n      <label id=\"repeat-password-label\" for=\"repeat-password-input\">\n        <span id=\"repeat-password-span\" data-l10n-id=\"turn-on-scheduled-backups-encryption-repeat-password-label\"></span>\n        <input type=\"password\" id=\"repeat-password-input\"/>\n      </label>\n    </fieldset>\n  </fieldset>`;\n  }\n\n  contentTemplate() {\n    return html`\n      <div\n        id=\"backup-turn-on-scheduled-wrapper\"\n        aria-labelledby=\"backup-turn-on-scheduled-header\"\n        aria-describedby=\"backup-turn-on-scheduled-description\"\n      >\n        <h1\n          id=\"backup-turn-on-scheduled-header\"\n          data-l10n-id=\"turn-on-scheduled-backups-header\"\n        ></h1>\n        <main id=\"backup-turn-on-scheduled-content\">\n          <div id=\"backup-turn-on-scheduled-description\">\n            <span\n              id=\"backup-turn-on-scheduled-description-span\"\n              data-l10n-id=\"turn-on-scheduled-backups-description\"\n            ></span>\n            <a\n              id=\"backup-turn-on-scheduled-learn-more-link\"\n              is=\"moz-support-link\"\n              support-page=\"todo-backup\"\n              data-l10n-id=\"turn-on-scheduled-backups-support-link\"\n            ></a>\n          </div>\n          ${this.allOptionsTemplate()}\n        </main>\n\n        <moz-button-group id=\"backup-turn-on-scheduled-button-group\">\n          <moz-button\n            id=\"backup-turn-on-scheduled-cancel-button\"\n            @click=${this.handleCancel}\n            data-l10n-id=\"turn-on-scheduled-backups-cancel-button\"\n          ></moz-button>\n          <moz-button\n            id=\"backup-turn-on-scheduled-confirm-button\"\n            @click=${this.handleConfirm}\n            type=\"primary\"\n            data-l10n-id=\"turn-on-scheduled-backups-confirm-button\"\n          ></moz-button>\n        </moz-button-group>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__turnonscheduledbackupsStyles}\"\n      />\n      ${this.contentTemplate()}\n    `;\n  }\n}\n\ncustomElements.define(\"turn-on-scheduled-backups\", TurnOnScheduledBackups);\n"],"names":[],"sourceRoot":""}