{"version":3,"file":"1964.aca3805e.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-fieldset/moz-fieldset.mjs"],"sourcesContent":["import __chrome_styles_loader__mozfieldsetStyles from \"toolkit/content/widgets/moz-fieldset/moz-fieldset.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\n// Functions to wrap a string in a heading.\nconst HEADING_LEVEL_TEMPLATES = {\n  1: label => html`<h1>${label}</h1>`,\n  2: label => html`<h2>${label}</h2>`,\n  3: label => html`<h3>${label}</h3>`,\n  4: label => html`<h4>${label}</h4>`,\n  5: label => html`<h5>${label}</h5>`,\n  6: label => html`<h6>${label}</h6>`,\n};\n\n/**\n * Fieldset wrapper to lay out form inputs consistently.\n *\n * @tagname moz-fieldset\n * @property {string} label - The label for the fieldset's legend.\n * @property {string} description - The description for the fieldset.\n * @property {string} supportPage - Name of the SUMO support page to link to.\n * @property {number} headingLevel - Render the legend in a heading of this level.\n * @property {boolean} disabled - Whether the fieldset and its children are disabled.\n */\nexport default class MozFieldset extends MozLitElement {\n  static properties = {\n    label: { type: String, fluent: true },\n    description: { type: String, fluent: true },\n    supportPage: { type: String, attribute: \"support-page\" },\n    ariaLabel: { type: String, fluent: true, mapped: true },\n    ariaOrientation: { type: String, mapped: true },\n    headingLevel: { type: Number },\n    disabled: { type: Boolean, reflect: true },\n  };\n\n  constructor() {\n    super();\n    this.headingLevel = -1;\n    this.disabled = false;\n  }\n\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"disabled\")) {\n      this.#updateChildDisabledState();\n    }\n  }\n\n  #updateChildDisabledState() {\n    const formControls = [...this.querySelectorAll(\"*\")].filter(\n      element => \"disabled\" in element || \"parentDisabled\" in element\n    );\n\n    formControls.forEach(control => {\n      if (\"parentDisabled\" in control) {\n        control.parentDisabled = this.disabled;\n      }\n\n      if (this.disabled) {\n        control.setAttribute(\"disabled\", \"\");\n      } else {\n        control.removeAttribute(\"disabled\");\n      }\n    });\n  }\n\n  descriptionTemplate() {\n    if (this.description) {\n      return html`<span id=\"description\" class=\"description text-deemphasized\">\n          ${this.description}\n        </span>\n        ${this.supportPageTemplate()}`;\n    }\n    return \"\";\n  }\n\n  supportPageTemplate() {\n    if (this.supportPage) {\n      return html`<a\n        is=\"moz-support-link\"\n        support-page=${this.supportPage}\n        part=\"support-link\"\n      ></a>`;\n    }\n    return html`<slot name=\"support-link\"></slot>`;\n  }\n\n  legendTemplate() {\n    let label =\n      HEADING_LEVEL_TEMPLATES[this.headingLevel]?.(this.label) || this.label;\n    return html`<legend part=\"label\">${label}</legend>`;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozfieldsetStyles}\"\n      />\n      <fieldset\n        ?disabled=${this.disabled}\n        aria-label=${ifDefined(this.ariaLabel)}\n        aria-describedby=${ifDefined(\n          this.description ? \"description\" : undefined\n        )}\n        aria-orientation=${ifDefined(this.ariaOrientation)}\n      >\n        ${this.label ? this.legendTemplate() : \"\"}\n        ${!this.description ? this.supportPageTemplate() : \"\"}\n        ${this.descriptionTemplate()}\n        <div id=\"inputs\" part=\"inputs\">\n          <slot></slot>\n        </div>\n      </fieldset>\n    `;\n  }\n}\ncustomElements.define(\"moz-fieldset\", MozFieldset);\n"],"names":[],"sourceRoot":""}