{"version":3,"file":"moz-box-button-moz-box-button-stories.ea88d305.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-box-button/moz-box-button.mjs","webpack:///../../../toolkit/content/widgets/moz-box-button/moz-box-button.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__mozboxbuttonStyles from \"toolkit/content/widgets/moz-box-button/moz-box-button.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport { MozBoxBase } from \"../lit-utils.mjs\";\n\n/**\n * A button custom element used for navigating between sub-pages or opening\n * dialogs.\n *\n * @tagname moz-box-button\n * @property {string} label - Label for the button.\n * @property {string} description - Descriptive text for the button.\n * @property {string} iconSrc - The src for an optional icon shown next to the label.\n * @property {boolean} disabled - Whether or not the button is disabled.\n * @property {string} accesskey - Key used for keyboard access.\n */\nexport default class MozBoxButton extends MozBoxBase {\n  static shadowRootOptions = {\n    ...super.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static properties = {\n    disabled: { type: Boolean },\n    accessKey: { type: String, mapped: true, fluent: true },\n  };\n\n  static queries = {\n    buttonEl: \"button\",\n    navIcon: \".nav-icon\",\n  };\n\n  constructor() {\n    super();\n    this.disabled = false;\n  }\n\n  click() {\n    this.buttonEl.click();\n  }\n\n  labelTemplate() {\n    if (!this.label) {\n      return \"\";\n    }\n    return html`<label\n      is=\"moz-label\"\n      class=\"label\"\n      shownaccesskey=${ifDefined(this.accessKey)}\n    >\n      ${this.label}\n    </label>`;\n  }\n\n  render() {\n    return html`\n      ${super.stylesTemplate()}\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozboxbuttonStyles}\"\n      />\n      <button\n        class=\"button\"\n        ?disabled=${this.disabled}\n        accesskey=${ifDefined(this.accessKey)}\n      >\n        ${super.textTemplate()}\n        <img\n          class=\"icon nav-icon\"\n          src=\"chrome://global/skin/icons/arrow-right.svg\"\n          role=\"presentation\"\n        />\n      </button>\n    `;\n  }\n}\ncustomElements.define(\"moz-box-button\", MozBoxButton);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport \"./moz-box-button.mjs\";\n\nexport default {\n  title: \"UI Widgets/Box Button\",\n  component: \"moz-box-button\",\n  argTypes: {\n    l10nId: {\n      options: [\"moz-box-button-label\", \"moz-box-button-label-description\"],\n      control: { type: \"select\" },\n    },\n  },\n  parameters: {\n    status: \"in-development\",\n    fluent: `\nmoz-box-button-label =\n  .label = Click me to navigate!\nmoz-box-button-label-description =\n  .label = Click me to navigate!\n  .description = Some description of the button\n    `,\n  },\n};\n\nconst Template = ({\n  l10nId,\n  disabled,\n  iconSrc,\n  accesskey,\n  clickHandler,\n}) => html`\n  <div style=\"width: 300px\">\n    <moz-box-button\n      @click=${clickHandler}\n      data-l10n-id=${l10nId}\n      ?disabled=${disabled}\n      iconsrc=${iconSrc}\n      accesskey=${ifDefined(accesskey)}\n    ></moz-box-button>\n  </div>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  l10nId: \"moz-box-button-label\",\n  disabled: false,\n  iconSrc: \"\",\n  accesskey: \"\",\n};\n\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  ...Default.args,\n  disabled: true,\n};\n\nexport const WithDescription = Template.bind({});\nWithDescription.args = {\n  l10nId: \"moz-box-button-label-description\",\n};\n\nexport const WithIcon = Template.bind({});\nWithIcon.args = {\n  ...WithDescription.args,\n  iconSrc: \"chrome://global/skin/icons/highlights.svg\",\n};\n\nexport const WithAccesskey = Template.bind({});\nWithAccesskey.args = {\n  ...WithDescription.args,\n  iconSrc: \"chrome://global/skin/icons/highlights.svg\",\n  accesskey: \"o\",\n  clickHandler: () => alert(\"Activating the accesskey clicks the button\"),\n};\n"],"names":[],"sourceRoot":""}