{"version":3,"file":"moz-breadcrumb-group-moz-breadcrumb-group-stories.59ac4432.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC3IA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-breadcrumb-group/moz-breadcrumb-group.mjs","webpack:///../../../toolkit/content/widgets/moz-breadcrumb-group/moz-breadcrumb-group.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__mozbreadcrumbgroupStyles from \"toolkit/content/widgets/moz-breadcrumb-group/moz-breadcrumb-group.css\";\nimport __chrome_styles_loader__mozbreadcrumbStyles from \"toolkit/content/widgets/moz-breadcrumb-group/moz-breadcrumb.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\nwindow.MozXULElement?.insertFTLIfNeeded(\n  \"toolkit/global/mozBreadcrumbGroup.ftl\"\n);\n\n/**\n * @tagname moz-breadcrumb\n * @property {string} href\n * @property {string} label\n */\n\nexport class MozBreadcrumb extends MozLitElement {\n  static properties = {\n    href: { type: String },\n    label: { type: String, fluent: true },\n    ariaCurrent: { attribute: \"aria-current\", type: String },\n  };\n\n  constructor() {\n    super();\n    this.label = \"\";\n    this.href = \"\";\n  }\n\n  render() {\n    const labelTemplate = this.label || html`<slot></slot>`;\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozbreadcrumbStyles}\"\n      />\n      ${this.ariaCurrent\n        ? labelTemplate\n        : html`<a href=${this.href}>${labelTemplate}</a>`}\n    `;\n  }\n}\n\ncustomElements.define(\"moz-breadcrumb\", MozBreadcrumb);\n\n/**\n * @tagname moz-breadcrumb-group\n */\nexport class MozBreadcrumbGroup extends MozLitElement {\n  /**\n   * @type {MutationObserver | void}\n   */\n  #observer;\n\n  /**\n   * Fired when a breadcrumb is either\n   * added or removed from the DOM, at which\n   * an update is requested to re-render breadcrumbs.\n   *\n   * @type {MutationCallback}\n   */\n  #onBreadcrumbMutation(mutations) {\n    for (const mutation of mutations) {\n      if (mutation.type === \"childList\") {\n        this.requestUpdate();\n      }\n    }\n  }\n\n  /**\n   * @type {Array<MozBreadcrumb>}\n   */\n  get breadcrumbs() {\n    /**\n     * @type {NodeListOf<MozBreadcrumb>}\n     */\n    const breadcrumbElements = this.querySelectorAll(\"moz-breadcrumb\");\n    return Array.from(breadcrumbElements);\n  }\n\n  setupBreadcrumbs() {\n    const { breadcrumbs } = this;\n    return breadcrumbs.map((breadcrumb, i) => {\n      breadcrumb.setAttribute(\"slot\", i + \"\");\n\n      if (i === breadcrumbs.length - 1) {\n        breadcrumb.setAttribute(\"aria-current\", \"page\");\n      }\n\n      return breadcrumb;\n    });\n  }\n\n  update() {\n    super.update();\n    this.setupBreadcrumbs();\n  }\n\n  firstUpdated() {\n    if (!this.#observer) {\n      this.#observer = new MutationObserver((mutations, observer) =>\n        this.#onBreadcrumbMutation(mutations, observer)\n      );\n      this.#observer.observe(this, {\n        childList: true,\n      });\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.#observer) {\n      this.#observer.disconnect();\n      this.#observer = undefined;\n    }\n    super.disconnectedCallback();\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozbreadcrumbgroupStyles}\"\n      />\n      <nav data-l10n-id=\"moz-breadcrumb-group-nav\">\n        <ol>\n          ${this.breadcrumbs.map((breadcrumb, i) => {\n            return html`<li>\n              <slot name=${i}></slot>\n            </li>`;\n          })}\n        </ol>\n      </nav>\n    `;\n  }\n}\n\ncustomElements.define(\"moz-breadcrumb-group\", MozBreadcrumbGroup);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport \"./moz-breadcrumb-group.mjs\";\n\nexport default {\n  title: \"UI Widgets/Breadcrumb Group\",\n  component: \"moz-breadcrumbs-group\",\n  parameters: {\n    status: \"in-development\",\n    fluent: `\nmoz-breadcrumb-first =\n  .label = First page\nmoz-breadcrumb-second =\n  .label = Previous page\nmoz-breadcrumb-third =\n  .label = Current page\n    `,\n  },\n};\n\nconst Template = ({ l10nId, width }) => {\n  return html`\n    <style>\n      ${width\n        ? `moz-breadcrumb-group {\n            width: ${width}px;\n            overflow: hidden;\n          }`\n        : \"\"}\n    </style>\n    <moz-breadcrumb-group>\n      <moz-breadcrumb\n        href=\"about#firstpage\"\n        data-l10n-id=${ifDefined(l10nId + \"-first\")}\n      ></moz-breadcrumb>\n      <moz-breadcrumb\n        data-l10n-id=${ifDefined(l10nId + \"-second\")}\n        href=\"about#prevpage\"\n      ></moz-breadcrumb>\n      <moz-breadcrumb\n        href=\"about#currentpage\"\n        data-l10n-id=${ifDefined(l10nId + \"-third\")}\n      ></moz-breadcrumb>\n    </moz-breadcrumb-group>\n  `;\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n  l10nId: \"moz-breadcrumb\",\n};\nexport const NarrowWidth = Template.bind({});\nNarrowWidth.args = {\n  ...Default.args,\n  width: 180,\n};\n"],"names":[],"sourceRoot":""}