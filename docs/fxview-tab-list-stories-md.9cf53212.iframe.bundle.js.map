{"version":3,"file":"fxview-tab-list-stories-md.9cf53212.iframe.bundle.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;ACLA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./node_modules/@mdx-js/react/index.js","webpack:///./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs","webpack:///./node_modules/react/jsx-runtime.js","webpack:///./stories/fxview-tab-list.stories.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","export {\n  MDXContext,\n  MDXProvider,\n  useMDXComponents,\n  withMDXComponents\n} from './lib/index.js'\n","export * from '@mdx-js/react';\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"/home/runner/work/firefox-desktop-components/firefox-desktop-components/gecko/browser/components/storybook/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport { Meta, Canvas, ArgTypes } from \"@storybook/addon-docs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Domain-specific UI Widgets/Firefox View/Tab List/README\",\n      parameters: {\n        previewTabs: {\n          canvas: {\n            hidden: true\n          }\n        },\n        viewMode: \"docs\"\n      }\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n      id: \"fxviewtablist\",\n      children: \"FxviewTabList\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [/*#__PURE__*/_jsx(_components.code, {\n        children: \"fxview-tab-list\"\n      }), \" is a list of \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"fxview-tab-row\"\n      }), \" elements that display tab info such as:\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [\"A link containing:\", \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n          children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n            children: \"Favicon\"\n          }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n            children: \"Title\"\n          }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n            children: \"Domain\"\n          }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n            children: [\"Time when tab was last accessed (can be formatted as \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"relative\"\n            }), \", \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"date and time\"\n            }), \", \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"date only\"\n            }), \", and \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"time only\"\n            }), \")\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n        children: \"Secondary action button\"\n      }), \"\\n\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"when-to-use\",\n      children: \"When to use\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [\"Use \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"fxview-tab-list\"\n        }), \" anywhere you want to display a list of tabs with the above info displayed.\"]\n      }), \"\\n\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"code\",\n      children: \"Code\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"The source for \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"fxview-tab-list\"\n      }), \" can be found under\\n\", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/source/browser/components/firefoxview/fxview-tab-list.mjs\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"browser/components/firefoxview/fxview-tab-list\"\n      }), \".\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [/*#__PURE__*/_jsx(_components.code, {\n        children: \"fxview-tab-list\"\n      }), \" can be imported into \", /*#__PURE__*/_jsx(_components.code, {\n        children: \".html\"\n      }), \"/\", /*#__PURE__*/_jsx(_components.code, {\n        children: \".xhtml\"\n      }), \" files:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<script type=\\\"module\\\" src=\\\"chrome://content/browser/firefoxview/fxview-tab-list.mjs\\\"></script>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"And used as follows:\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"With context menu:\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<fxview-tab-list\\n    secondaryActionClass=\\\"options-button\\\"\\n    .dateTimeFormat=${\\\"relative\\\"}\\n    .hasPopup=${\\\"menu\\\"}\\n    .maxTabsLength=${this.maxTabsLength}\\n    .tabItems=${this.tabItems}\\n    @fxview-tab-list-secondary-action=${this.onSecondaryAction}\\n    @fxview-tab-list-primary-action=${this.onPrimaryAction}\\n>\\n    <panel-list slot=\\\"menu\\\" @hide=${this.menuClosed}>\\n        <panel-item\\n        @click=${...}\\n        data-l10n-id=\\\"fxviewtabrow-delete\\\"\\n        ></panel-item>\\n        <panel-item\\n        @click=${...}\\n        data-l10n-id=\\\"fxviewtabrow-forget-about-this-site\\\"\\n        ></panel-item>\\n        ...\\n    </panel-list>\\n</fxview-tab-list>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"With dismiss button:\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<fxview-tab-list\\n    class=\\\"with-dismiss-button\\\"\\n    .dateTimeFormat=${\\\"relative\\\"}\\n    .maxTabsLength=${this.maxTabsLength}\\n    .tabItems=${this.tabItems}\\n    @fxview-tab-list-secondary-action=${this.onSecondaryAction}\\n    @fxview-tab-list-primary-action=${this.onPrimaryAction}\\n></fxview-tab-list>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"You'll need to pass along some of the following properties:\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [/*#__PURE__*/_jsx(_components.code, {\n          children: \"compactRows\"\n        }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n          children: \"Optional\"\n        }), \"): If \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"true\"\n        }), \", displays shorter rows by omitting the URL and date/time. The default value is \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"false\"\n        }), \".\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [/*#__PURE__*/_jsx(_components.code, {\n          children: \"dateTimeFormat\"\n        }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n          children: \"Optional\"\n        }), \"): A string to indicate the expected format/options for the date and/or time displayed on each tab item in the list. The default for this if not given is \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"\\\"relative\\\"\"\n        }), \".\", \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n          children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n            children: [\"Options include:\", \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n              children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"relative\"\n                }), \" (Ex: \\\"Just now\\\", \\\"2m ago\\\", etc.)\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"date\"\n                }), \" (Ex: \\\"4/1/23\\\", \\\"01/04/23\\\", etc. - Will be formatted based on locale)\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"time\"\n                }), \" (Ex: \\\"4:00 PM\\\", \\\"16:00\\\", etc - Will be formatted based on locale)\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"dateTime\"\n                }), \" (Ex: \\\"4/1/23 4:00PM\\\", \\\"01/04/23 16:00\\\", etc. - Will be formatted based on locale)\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [/*#__PURE__*/_jsx(_components.code, {\n          children: \"hasPopup\"\n        }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n          children: \"Optional\"\n        }), \"): The optional aria-haspopup attribute for the secondary action, if required\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [/*#__PURE__*/_jsx(_components.code, {\n          children: \"maxTabsLength\"\n        }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n          children: \"Optional\"\n        }), \"): The max number of tabs you want to display in the tabs list. The default value will be \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"25\"\n        }), \" if no max value is given. You may use any negative number such as \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"-1\"\n        }), \" to indicate no max.\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [/*#__PURE__*/_jsx(_components.code, {\n          children: \"tabItems\"\n        }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n          children: \"Required\"\n        }), \"): An array of tab data such as History nodes, Bookmark nodes, Synced Tabs, etc.\", \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n          children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n            children: [\"The component is expecting to receive the following properties within each \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"tabItems\"\n            }), \" object (you may need to do some normalizing for this). If you just pass a title and an icon, it creates a header row that is not clickable.\", \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n              children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"closedId\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - For a closed tab, this ID is used by SessionStore to retrieve the tab data for forgetting/re-opening the tab.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"icon\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Required\"\n                }), \") - The location string for the favicon. Will fallback to default favicon if none is found.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"primaryL10nId\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The l10n id to be used for the primary action element. This fluent string should ONLY define a \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \".title\"\n                }), \" attribute to describe the link element in each row.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"primaryL10nArgs\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The l10n args you can optionally pass for the primary action element\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"secondaryL10nId\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") -  The l10n id to be used for the secondary action button. This fluent string should ONLY define a \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \".title\"\n                }), \" attribute to describe the secondary button in each row.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"tertiaryL10nId\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") -  The l10n id to be used for the tertiary action button. This fluent string should ONLY define a \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \".title\"\n                }), \" attribute to describe the secondary button in each row.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"secondaryL10nArgs\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The l10n args you can optionally pass for the secondary action button\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"tertiaryL10nArgs\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The l10n args you can optionally pass for the tertiary action button\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"secondaryActionClass\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The class used to style the secondary action button. \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \"options-button\"\n                }), \" or \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \"dismiss-button\"\n                })]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"tertiaryActionClass\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The class used to style the tertiary action button. \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \"options-button\"\n                }), \" or \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \"dismiss-button\"\n                })]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"tabElement\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The MozTabbrowserTab element for the tab item.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"sourceClosedId\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The closedId of the closed window the tab is from if applicable.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"sourceWindowId\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The SessionStore id of the window the tab is from if applicable.\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"tabid\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - Optional property expected for Recently Closed tab data\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"time\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The time in milliseconds for expected last interaction with the tab (Ex: \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \"lastUsed\"\n                }), \" for SyncedTabs tabs, \", /*#__PURE__*/_jsx(_components.code, {\n                  children: \"closedAt\"\n                }), \" for RecentlyClosed tabs, etc.)\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"title\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Required\"\n                }), \") - The title for the tab\"]\n              }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n                children: [/*#__PURE__*/_jsx(_components.code, {\n                  children: \"url\"\n                }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n                  children: \"Optional\"\n                }), \") - The full URL for the tab\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [/*#__PURE__*/_jsx(_components.code, {\n          children: \"searchQuery\"\n        }), \" (\", /*#__PURE__*/_jsx(_components.strong, {\n          children: \"Optional\"\n        }), \") - Highlights matches of the query string for titles of each row.\"]\n      }), \"\\n\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"notes\",\n      children: \"Notes\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [\"In order to keep this as generic as possible, the icon for the secondary action button will NOT have a default. You can supply a \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"class\"\n        }), \" attribute to an instance of \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"fxview-tab-list\"\n        }), \" in order to apply styles to things like the icon for the secondary action button. In the above example, I added a \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"secondaryActionClass\"\n        }), \" \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"\\\"options-button\\\"\"\n        }), \" to \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"fxview-tab-list\"\n        }), \", so I can update the button's icon by using:\"]\n      }), \"\\n\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-css\",\n        children: \"    .fxview-tab-row-button {\\n        &.options-button {\\n            background-image: url(\\\"chrome://global/skin/icons/more.svg\\\");\\n        }\\n    }\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n        children: [\"You'll also need to define functions for the \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"fxview-tab-list-primary-action\"\n        }), \" and \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"fxview-tab-list-secondary-action\"\n        }), \" listeners in order to add functionality to the primary element and the secondary button.\", \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n          children: [\"\\n\", /*#__PURE__*/_jsxs(_components.li, {\n            children: [\"For the both handler functions, you can reference the \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"fxview-tab-row\"\n            }), \" associated with the interaction by using \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"event.originalTarget\"\n            }), \". You can also reference the original event by using \", /*#__PURE__*/_jsx(_components.code, {\n              children: \"event.detail.originalEvent\"\n            }), \".\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const __page = () => {\n  throw new Error(\"Docs-only story\");\n};\n__page.parameters = {\n  docsOnly: true\n};\nconst componentMeta = {\n  title: 'Domain-specific UI Widgets/Firefox View/Tab List/README',\n  parameters: {\n    previewTabs: {\n      canvas: {\n        hidden: true\n      }\n    },\n    viewMode: \"docs\"\n  },\n  tags: ['stories-mdx'],\n  includeStories: [\"__page\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":[],"sourceRoot":""}