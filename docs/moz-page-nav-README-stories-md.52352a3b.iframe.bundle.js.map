{"version":3,"file":"moz-page-nav-README-stories-md.52352a3b.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAOA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAKA;AAQA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC5IA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxsources":["webpack:///../../../toolkit/content/widgets/moz-page-nav/moz-page-nav.mjs","webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./node_modules/@mdx-js/react/index.js","webpack:///./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs","webpack:///../../../toolkit/content/widgets/moz-support-link/moz-support-link.mjs","webpack:///./node_modules/react/jsx-runtime.js","webpack:///../../../toolkit/content/widgets/moz-page-nav/README.stories.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import __chrome_styles_loader__mozpagenavbuttonStyles from \"toolkit/content/widgets/moz-page-nav/moz-page-nav-button.css\";\nimport __chrome_styles_loader__mozpagenavStyles from \"toolkit/content/widgets/moz-page-nav/moz-page-nav.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, when } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n// eslint-disable-next-line import/no-unassigned-import\nimport \"chrome://global/content/elements/moz-support-link.mjs\";\n\n/**\n * @typedef {(\"mobile\"|\"default\")} PageNavType\n * @property {PageNavType} [type] - The type of the component\n */\n\n/**\n * A grouping of navigation buttons that is displayed at the page level,\n * intended to change the selected view, provide a heading, and have links\n * to external resources.\n *\n * @tagname moz-page-nav\n * @property {string} currentView - The currently selected view.\n * @property {string} heading - A heading to be displayed at the top of the navigation.\n * @property {PageNavType} [type] - The type of the component\n * @slot [default] - Used to append moz-page-nav-button elements to the navigation.\n * @slot [subheading] - Used to append page specific search input or notification to the nav.\n */\nexport default class MozPageNav extends MozLitElement {\n  static properties = {\n    currentView: { type: String },\n    heading: { type: String, fluent: true },\n    type: { type: String, reflect: true },\n  };\n\n  static queries = {\n    headingEl: \"#page-nav-heading\",\n    primaryNavGroupSlot: \".primary-nav-group slot\",\n    secondaryNavGroupSlot: \"#secondary-nav-group slot\",\n  };\n\n  constructor() {\n    super();\n    /**\n     * @type {PageNavType}\n     */\n    this.type = \"default\";\n  }\n\n  get pageNavButtons() {\n    return this.getVisibleSlottedChildren(this.primaryNavGroupSlot);\n  }\n\n  get secondaryNavButtons() {\n    return this.getVisibleSlottedChildren(this.secondaryNavGroupSlot);\n  }\n\n  getVisibleSlottedChildren(el) {\n    return el\n      ?.assignedElements()\n      .filter(\n        element =>\n          element?.localName === \"moz-page-nav-button\" &&\n          this.checkElementVisibility(element)\n      );\n  }\n\n  checkElementVisibility(element) {\n    let computedStyles = window.getComputedStyle(element);\n    return (\n      !element.hidden &&\n      computedStyles.getPropertyValue(\"display\") !== \"none\" &&\n      computedStyles.getPropertyValue(\"visibility\") !== \"hidden\" &&\n      computedStyles.getPropertyValue(\"opacity\") > 0\n    );\n  }\n\n  onChangeView(e) {\n    this.currentView = e.target.view;\n  }\n\n  handleFocus(e) {\n    if (e.key == \"ArrowDown\" || e.key == \"ArrowRight\") {\n      e.preventDefault();\n      this.focusNextView();\n    } else if (e.key == \"ArrowUp\" || e.key == \"ArrowLeft\") {\n      e.preventDefault();\n      this.focusPreviousView();\n    }\n  }\n\n  focusPreviousView() {\n    let pageNavButtons = this.pageNavButtons;\n    let currentIndex = pageNavButtons.findIndex(b => b.selected);\n    let prev = pageNavButtons[currentIndex - 1];\n    if (prev) {\n      prev.activate();\n      prev.buttonEl.focus();\n    }\n  }\n\n  focusNextView() {\n    let pageNavButtons = this.pageNavButtons;\n    let currentIndex = pageNavButtons.findIndex(b => b.selected);\n    let next = pageNavButtons[currentIndex + 1];\n    if (next) {\n      next.activate();\n      next.buttonEl.focus();\n    }\n  }\n\n  onSecondaryNavChange(event) {\n    let secondaryNavElements = event.target.assignedElements();\n    this.hasSecondaryNav = !!secondaryNavElements.length;\n    secondaryNavElements?.forEach(el => {\n      el.classList.add(\"secondary-nav-item\");\n    });\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozpagenavStyles}\"\n      />\n      <div class=\"page-nav-heading-wrapper\">\n        ${this.type === \"mobile\"\n          ? html`<moz-button\n              type=\"icon ghost\"\n              aria-label=\"Open Menu\"\n              aria-expanded=\"false\"\n              iconsrc=\"chrome://browser/skin/menu.svg\"\n            >\n            </moz-button>`\n          : \"\"}\n        <div class=\"logo\"></div>\n        <h1 class=\"page-nav-heading\" id=\"page-nav-heading\">${this.heading}</h1>\n      </div>\n      <slot name=\"subheading\"></slot>\n      <nav>\n        <div\n          class=\"primary-nav-group\"\n          role=\"tablist\"\n          aria-orientation=\"vertical\"\n          aria-labelledby=\"page-nav-heading\"\n        >\n          <slot\n            @change-view=${this.onChangeView}\n            @keydown=${this.handleFocus}\n          ></slot>\n        </div>\n        ${when(this.hasSecondaryNav, () => html`<hr />`)}\n        <div id=\"secondary-nav-group\" role=\"group\">\n          <slot\n            name=\"secondary-nav\"\n            @slotchange=${this.onSecondaryNavChange}\n          ></slot>\n        </div>\n      </nav>\n    `;\n  }\n\n  updated() {\n    let isViewSelected = false;\n    let assignedPageNavButtons = this.pageNavButtons;\n    for (let button of assignedPageNavButtons) {\n      button.selected = button.view == this.currentView;\n      isViewSelected = isViewSelected || button.selected;\n    }\n    if (!isViewSelected && assignedPageNavButtons.length) {\n      // Current page nav has no matching view, reset to the first view.\n      assignedPageNavButtons[0].activate();\n    }\n  }\n}\ncustomElements.define(\"moz-page-nav\", MozPageNav);\n\n/**\n * A navigation button intended to change the selected view within a page.\n *\n * @tagname moz-page-nav-button\n * @property {string} href - (optional) The url for an external link if not a support page URL\n * @property {string} iconSrc - The chrome:// url for the icon used for the button.\n * @property {boolean} selected - Whether or not the button is currently selected.\n * @property {string} supportPage - (optional) The short name for the support page a secondary link should launch to\n * @slot [default] - Used to append the l10n string to the button.\n */\nexport class MozPageNavButton extends MozLitElement {\n  static properties = {\n    iconSrc: { type: String, reflect: true },\n    href: { type: String },\n    selected: { type: Boolean },\n    supportPage: { type: String, attribute: \"support-page\" },\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"none\");\n  }\n\n  static queries = {\n    buttonEl: \"button\",\n    linkEl: \"a\",\n  };\n\n  get view() {\n    return this.getAttribute(\"view\");\n  }\n\n  activate() {\n    this.dispatchEvent(\n      new CustomEvent(\"change-view\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  itemTemplate() {\n    if (this.href || this.supportPage) {\n      return this.linkTemplate();\n    }\n    return this.buttonTemplate();\n  }\n\n  buttonTemplate() {\n    return html`\n      <button\n        aria-selected=${this.selected}\n        tabindex=${this.selected ? 0 : -1}\n        role=\"tab\"\n        ?selected=${this.selected}\n        @click=${this.activate}\n      >\n        ${this.innerContentTemplate()}\n      </button>\n    `;\n  }\n\n  linkTemplate() {\n    if (this.supportPage) {\n      return html`\n        <a\n          is=\"moz-support-link\"\n          class=\"moz-page-nav-link\"\n          support-page=${this.supportPage}\n        >\n          ${this.innerContentTemplate()}\n        </a>\n      `;\n    }\n    return html`\n      <a href=${this.href} class=\"moz-page-nav-link\" target=\"_blank\">\n        ${this.innerContentTemplate()}\n      </a>\n    `;\n  }\n\n  innerContentTemplate() {\n    return html`\n      ${this.iconSrc\n        ? html`<img\n            class=\"page-nav-icon\"\n            src=${this.iconSrc}\n            role=\"presentation\"\n          />`\n        : \"\"}\n      <slot></slot>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozpagenavbuttonStyles}\"\n      />\n      ${this.itemTemplate()}\n    `;\n  }\n}\ncustomElements.define(\"moz-page-nav-button\", MozPageNavButton);\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","export {\n  MDXContext,\n  MDXProvider,\n  useMDXComponents,\n  withMDXComponents\n} from './lib/index.js'\n","export * from '@mdx-js/react';\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nwindow.MozXULElement?.insertFTLIfNeeded(\"toolkit/global/mozSupportLink.ftl\");\n\n/**\n * An extension of the anchor element that helps create links to Mozilla's\n * support documentation. This should be used for SUMO links only - other \"Learn\n * more\" links can use the regular anchor element.\n *\n * @tagname moz-support-link\n * @attribute {string} support-page - Short-hand string from SUMO to the specific support page.\n * @attribute {string} utm-content - UTM parameter for a URL, if it is an AMO URL.\n * @attribute {string} data-l10n-id - Fluent ID used to generate the text content.\n */\nexport default class MozSupportLink extends HTMLAnchorElement {\n  static SUPPORT_URL = \"https://www.mozilla.org/\";\n  static get observedAttributes() {\n    return [\"support-page\", \"utm-content\"];\n  }\n\n  /**\n   * Handles setting up the SUPPORT_URL preference getter.\n   * Without this, the tests for this component may not behave\n   * as expected.\n   * @private\n   * @memberof MozSupportLink\n   */\n  #register() {\n    if (window.document.nodePrincipal?.isSystemPrincipal) {\n      ChromeUtils.defineESModuleGetters(MozSupportLink, {\n        BrowserUtils: \"resource://gre/modules/BrowserUtils.sys.mjs\",\n      });\n\n      // eslint-disable-next-line no-shadow\n      let { XPCOMUtils } = window.XPCOMUtils\n        ? window\n        : ChromeUtils.importESModule(\n            \"resource://gre/modules/XPCOMUtils.sys.mjs\"\n          );\n      XPCOMUtils.defineLazyPreferenceGetter(\n        MozSupportLink,\n        \"SUPPORT_URL\",\n        \"app.support.baseURL\",\n        \"\",\n        null,\n        val => Services.urlFormatter.formatURL(val)\n      );\n    } else if (!window.IS_STORYBOOK) {\n      MozSupportLink.SUPPORT_URL = window.RPMGetFormatURLPref(\n        \"app.support.baseURL\"\n      );\n    }\n  }\n\n  connectedCallback() {\n    this.#register();\n    this.#setHref();\n    this.setAttribute(\"target\", \"_blank\");\n    this.addEventListener(\"click\", this);\n    if (\n      !this.getAttribute(\"data-l10n-id\") &&\n      !this.getAttribute(\"data-l10n-name\") &&\n      !this.childElementCount\n    ) {\n      document.l10n.setAttributes(this, \"moz-support-link-text\");\n    }\n    document.l10n.translateFragment(this);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener(\"click\", this);\n  }\n\n  get supportPage() {\n    return this.getAttribute(\"support-page\");\n  }\n\n  set supportPage(val) {\n    this.setAttribute(\"support-page\", val);\n  }\n\n  handleEvent(e) {\n    if (e.type == \"click\") {\n      if (window.openTrustedLinkIn) {\n        let where = MozSupportLink.BrowserUtils.whereToOpenLink(e, false, true);\n        if (where == \"current\") {\n          where = \"tab\";\n        }\n        e.preventDefault();\n        openTrustedLinkIn(this.href, where);\n      }\n    }\n  }\n\n  attributeChangedCallback(attrName) {\n    if (attrName === \"support-page\" || attrName === \"utm-content\") {\n      this.#setHref();\n    }\n  }\n\n  #setHref() {\n    let supportPage = this.getAttribute(\"support-page\") ?? \"\";\n    let base = MozSupportLink.SUPPORT_URL + supportPage;\n    this.href = this.hasAttribute(\"utm-content\")\n      ? formatUTMParams(this.getAttribute(\"utm-content\"), base)\n      : base;\n  }\n}\ncustomElements.define(\"moz-support-link\", MozSupportLink, { extends: \"a\" });\n\n/**\n * Adds UTM parameters to a given URL, if it is an AMO URL.\n *\n * @param {string} contentAttribute\n *        Identifies the part of the UI with which the link is associated.\n * @param {string} url\n * @returns {string}\n *          The url with UTM parameters if it is an AMO URL.\n *          Otherwise the url in unmodified form.\n */\nexport function formatUTMParams(contentAttribute, url) {\n  if (!contentAttribute) {\n    return url;\n  }\n  let parsedUrl = new URL(url);\n  let domain = `.${parsedUrl.hostname}`;\n  if (\n    !domain.endsWith(\".mozilla.org\") &&\n    // For testing: addons-dev.allizom.org and addons.allizom.org\n    !domain.endsWith(\".allizom.org\")\n  ) {\n    return url;\n  }\n\n  parsedUrl.searchParams.set(\"utm_source\", \"firefox-browser\");\n  parsedUrl.searchParams.set(\"utm_medium\", \"firefox-browser\");\n  parsedUrl.searchParams.set(\"utm_content\", contentAttribute);\n  return parsedUrl.href;\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"/home/runner/work/firefox-desktop-components/firefox-desktop-components/gecko/browser/components/storybook/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport { Meta, Canvas, ArgTypes } from \"@storybook/addon-docs\";\nimport \"toolkit-widgets/moz-page-nav/moz-page-nav.mjs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"UI Widgets/ Page Nav/README\",\n      parameters: {\n        previewTabs: {\n          canvas: {\n            hidden: true\n          }\n        },\n        viewMode: \"docs\"\n      }\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n      id: \"mozpagenav\",\n      children: \"MozPageNav\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [/*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav\"\n      }), \" is a grouping of navigation buttons that is displayed at the page level,\\nintended to change the selected view, provide a heading, and have links to external resources.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n      withSource: \"none\",\n      mdxSource: \"<with-common-styles><moz-page-nav heading=\\\"This is a nav\\\" style={{ \\\"--page-nav-margin-top\\\": 0, maxWidth: \\\"20ch\\\", maxHeight: \\\"275px\\\" }}><moz-page-nav-button view=\\\"view-one\\\" iconSrc=\\\"chrome://browser/skin/preferences/category-general.svg\\\"><p style={{ margin: 0 }}>{\\\"Test 1\\\"}</p></moz-page-nav-button><moz-page-nav-button view=\\\"view-two\\\" iconSrc=\\\"chrome://browser/skin/preferences/category-general.svg\\\"><p style={{ margin: 0 }}>{\\\"Test 2\\\"}</p></moz-page-nav-button><moz-page-nav-button view=\\\"view-three\\\" iconSrc=\\\"chrome://browser/skin/preferences/category-general.svg\\\"><p style={{ margin: 0 }}>{\\\"Test 3\\\"}</p></moz-page-nav-button><moz-page-nav-button support-page=\\\"test\\\" iconSrc=\\\"chrome://browser/skin/preferences/category-general.svg\\\" slot=\\\"secondary-nav\\\"><p style={{ margin: 0 }}>{\\\"Support Link\\\"}</p></moz-page-nav-button><moz-page-nav-button href=\\\"https://www.example.com\\\" iconSrc=\\\"chrome://browser/skin/preferences/category-general.svg\\\" slot=\\\"secondary-nav\\\"><p style={{ margin: 0 }}>{\\\"External Link\\\"}</p></moz-page-nav-button></moz-page-nav></with-common-styles>\",\n      children: /*#__PURE__*/_jsx(\"with-common-styles\", {\n        children: /*#__PURE__*/_jsxs(\"moz-page-nav\", {\n          heading: \"This is a nav\",\n          style: {\n            '--page-nav-margin-top': 0,\n            maxWidth: '20ch',\n            maxHeight: '275px'\n          },\n          children: [/*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            view: \"view-one\",\n            iconSrc: \"chrome://browser/skin/preferences/category-general.svg\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"Test 1\"\n            })\n          }), /*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            view: \"view-two\",\n            iconSrc: \"chrome://browser/skin/preferences/category-general.svg\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"Test 2\"\n            })\n          }), /*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            view: \"view-three\",\n            iconSrc: \"chrome://browser/skin/preferences/category-general.svg\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"Test 3\"\n            })\n          }), /*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            \"support-page\": \"test\",\n            iconSrc: \"chrome://browser/skin/preferences/category-general.svg\",\n            slot: \"secondary-nav\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"Support Link\"\n            })\n          }), /*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            href: \"https://www.example.com\",\n            iconSrc: \"chrome://browser/skin/preferences/category-general.svg\",\n            slot: \"secondary-nav\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"External Link\"\n            })\n          })]\n        })\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"when-to-use\",\n      children: \"When to use\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n        children: \"Use moz-page-nav for single-page navigation to switch between different views.\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n        children: \"moz-page-nav also supports footer buttons for external and support links\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.li, {\n        children: \"This component is intended to be used in about: pages such as about:firefoxview, about:preferences, about:addons, about:debugging, etc.\"\n      }), \"\\n\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"when-not-to-use\",\n      children: \"When not to use\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.ul, {\n      children: [\"\\n\", /*#__PURE__*/_jsx(_components.li, {\n        children: \"If you need a navigation menu that does not switch between views within a single page\"\n      }), \"\\n\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"code\",\n      children: \"Code\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"The source for \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav\"\n      }), \" and \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav-button\"\n      }), \" can be found under\\n\", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/source/toolkit/content/widgets/moz-page-nav\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"toolkit/content/widgets/moz-page-nav\"\n      }), \".\\nYou can find an examples of \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav\"\n      }), \" in use in the Firefox codebase in\\n\", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/rev/9783996dbd86f999cab50ea426079a7b10f28a2f/browser/components/firefoxview/firefoxview.html#53-88\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"about:firefoxview\"\n      }), \".\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [/*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav\"\n      }), \" can be imported into \", /*#__PURE__*/_jsx(_components.code, {\n        children: \".html\"\n      }), \"/\", /*#__PURE__*/_jsx(_components.code, {\n        children: \".xhtml\"\n      }), \" files:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<script type=\\\"module\\\" src=\\\"chrome://global/content/elements/moz-page-nav.mjs\\\"></script>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"And used as follows:\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<moz-page-nav heading=\\\"This is a nav\\\">\\n  <moz-page-nav-button\\n    data-l10n-id=\\\"id-1\\\"\\n    view=\\\"A name for the first view\\\"\\n    iconSrc=\\\"A url for the icon for the first navigation button\\\">\\n  </moz-page-nav-button>\\n  <moz-page-nav-button\\n    data-l10n-id=\\\"id-2\\\"\\n    view=\\\"A name for the second view\\\"\\n    iconSrc=\\\"A url for the icon for the second navigation button\\\">\\n  </moz-page-nav-button>\\n  <moz-page-nav-button\\n    data-l10n-id=\\\"id-3\\\"\\n    view=\\\"A name for the third view\\\"\\n    iconSrc=\\\"A url for the icon for the third navigation button\\\">\\n  </moz-page-nav-button>\\n\\n  <!-- Footer Links -->\\n\\n  <!-- Support Link -->\\n  <moz-page-nav-button\\n    support-page=\\\"A name for a support link\\\"\\n    iconSrc=\\\"A url for the icon for the third navigation button\\\"\\n    slot=\\\"secondary-nav\\\">\\n  </moz-page-nav-button>\\n\\n  <!-- External Link -->\\n  <moz-page-nav-button\\n    href=\\\"A url for an external link\\\"\\n    iconSrc=\\\"A url for the icon for the third navigation button\\\"\\n    slot=\\\"secondary-nav\\\">\\n  </moz-page-nav-button>\\n</moz-page-nav>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"iconless-variant\",\n      children: \"Iconless variant\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"The \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"iconSrc\"\n      }), \" property of \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav-button\"\n      }), \" is optional. This is intended to support more internal facing \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"about:\"\n      }), \" pages where the addition of icons is not necessary. In these cases, the code will look a bit simpler:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<moz-page-nav heading=\\\"This is a nav\\\">\\n  <moz-page-nav-button\\n    data-l10n-id=\\\"id-1\\\"\\n    view=\\\"A name for the first view\\\">\\n  </moz-page-nav-button>\\n  <moz-page-nav-button\\n    data-l10n-id=\\\"id-2\\\"\\n    view=\\\"A name for the second view\\\">\\n  </moz-page-nav-button>\\n  <moz-page-nav-button\\n    data-l10n-id=\\\"id-3\\\"\\n    view=\\\"A name for the third view\\\">\\n  </moz-page-nav-button>\\n</moz-page-nav>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"And will render like this:\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n      withSource: \"none\",\n      mdxSource: \"<with-common-styles><moz-page-nav heading=\\\"This is a nav\\\" style={{ maxWidth: \\\"20ch\\\", maxHeight: \\\"275px\\\" }}><moz-page-nav-button view=\\\"A name for the first view\\\"><p style={{ margin: 0 }}>{\\\"First iconless button\\\"}</p></moz-page-nav-button><moz-page-nav-button view=\\\"A name for the second view\\\"><p style={{ margin: 0 }}>{\\\"Second iconless button\\\"}</p></moz-page-nav-button><moz-page-nav-button view=\\\"A name for the third view\\\"><p style={{ margin: 0 }}>{\\\"Third iconless button\\\"}</p></moz-page-nav-button></moz-page-nav></with-common-styles>\",\n      children: /*#__PURE__*/_jsx(\"with-common-styles\", {\n        children: /*#__PURE__*/_jsxs(\"moz-page-nav\", {\n          heading: \"This is a nav\",\n          style: {\n            maxWidth: '20ch',\n            maxHeight: '275px'\n          },\n          children: [/*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            view: \"A name for the first view\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"First iconless button\"\n            })\n          }), /*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            view: \"A name for the second view\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"Second iconless button\"\n            })\n          }), /*#__PURE__*/_jsx(\"moz-page-nav-button\", {\n            view: \"A name for the third view\",\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: \"Third iconless button\"\n            })\n          })]\n        })\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Please note that \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav\"\n      }), \" does not currently support mixing \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav-button\"\n      }), \"s with icons and iconless \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav-button\"\n      }), \"s. To avoid display issue your nav should pick one type for primary and secondary nav buttons and stick with it.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"fluent-usage\",\n      children: \"Fluent usage\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Generally the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"heading\"\n      }), \" property of\\n\", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav\"\n      }), \" will be provided via \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://mozilla-l10n.github.io/localizer-documentation/tools/fluent/basic_syntax.html#attributes\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Fluent attributes\"\n      }), \".\\nTo get this working you will need to format your Fluent message like this:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        children: \"with-heading =\\n  .heading = Heading text goes here\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"The \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"data-l10n-attrs\"\n      }), \" will be set up automatically via \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"MozLitElement\"\n      }), \", so you can just specify \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"data-l10n-id\"\n      }), \" on your moz-page-nav as you would with any other markup:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<moz-page-nav data-l10n-id=\\\"with-heading\\\"></moz-page-nav>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"You also need to specify a \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"data-l10n-id\"\n      }), \" for each \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-page-nav-button\"\n      }), \":\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<moz-page-nav-button data-l10n-id=\\\"with-button-text\\\"></moz-page-nav-button>\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        children: \"with-button-text = button text goes here\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"args-table\",\n      children: \"Args Table\"\n    }), \"\\n\", /*#__PURE__*/_jsx(ArgTypes, {\n      of: \"moz-page-nav\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const __page = () => {\n  throw new Error(\"Docs-only story\");\n};\n__page.parameters = {\n  docsOnly: true\n};\nconst componentMeta = {\n  title: 'UI Widgets/ Page Nav/README',\n  parameters: {\n    previewTabs: {\n      canvas: {\n        hidden: true\n      }\n    },\n    viewMode: \"docs\"\n  },\n  tags: ['stories-mdx'],\n  includeStories: [\"__page\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":[],"sourceRoot":""}