{"version":3,"file":"shopping-card-stories.5f213406.iframe.bundle.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7MA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAAA;AAGA;AACA;AAEA;AAGA;AAAA;AAGA;AACA;AAEA;AAaA;AAAA","sources":["webpack://browser-storybook/../shopping/content/shopping-card.mjs","webpack://browser-storybook/./stories/shopping-card.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__shoppingpageStyles from \"browser/components/shopping/content/shopping-page.css\";\nimport __chrome_styles_loader__shoppingcardStyles from \"browser/components/shopping/content/shopping-card.css\";\n/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\nconst MIN_SHOW_MORE_HEIGHT = 200;\n/**\n * A card container to be used in the shopping sidebar. There are three card types.\n * The default type where no type attribute is required and the card will have no extra functionality.\n * The \"accordion\" type will initially not show any content. The card will contain a arrow to expand the\n * card so all of the content is visible.\n *\n * @property {string} label - The label text that will be used for the card header\n * @property {string} type - (optional) The type of card. No type specified\n *   will be the default card. The other available types are \"accordion\" and \"show-more\".\n */\nclass ShoppingCard extends MozLitElement {\n  static properties = {\n    label: { type: String },\n    type: { type: String },\n    _isExpanded: { type: Boolean },\n  };\n\n  static get queries() {\n    return {\n      detailsEl: \"#shopping-details\",\n      contentEl: \"#content\",\n    };\n  }\n\n  labelTemplate() {\n    if (this.label) {\n      if (this.type === \"accordion\") {\n        return html`\n          <div id=\"label-wrapper\">\n            <h2 id=\"header\">${this.label}</h2>\n            <button\n              tabindex=\"-1\"\n              class=\"icon chevron-icon ghost-button\"\n              aria-labelledby=\"header\"\n              @click=${this.handleChevronButtonClick}\n            ></button>\n          </div>\n        `;\n      }\n      return html`\n        <div id=\"label-wrapper\">\n          <h2 id=\"header\">${this.label}</h2>\n          <slot name=\"rating\"></slot>\n        </div>\n      `;\n    }\n    return \"\";\n  }\n\n  cardTemplate() {\n    if (this.type === \"accordion\") {\n      return html`\n        <details id=\"shopping-details\" @toggle=${this.onCardToggle}>\n          <summary>${this.labelTemplate()}</summary>\n          <div id=\"content\"><slot name=\"content\"></slot></div>\n        </details>\n      `;\n    } else if (this.type === \"show-more\") {\n      return html`\n        ${this.labelTemplate()}\n        <article\n          id=\"content\"\n          class=\"show-more\"\n          aria-describedby=\"content\"\n          expanded=\"false\"\n        >\n          <slot name=\"content\"></slot>\n\n          <footer>\n            <button\n              aria-controls=\"content\"\n              class=\"small-button shopping-button\"\n              data-l10n-id=\"shopping-show-more-button\"\n              @click=${this.handleShowMoreButtonClick}\n            ></button>\n          </footer>\n        </article>\n      `;\n    }\n    return html`\n      ${this.labelTemplate()}\n      <div id=\"content\" aria-describedby=\"content\">\n        <slot name=\"content\"></slot>\n      </div>\n    `;\n  }\n\n  onCardToggle() {\n    const action = this.detailsEl.open ? \"expanded\" : \"collapsed\";\n    let l10nId = this.getAttribute(\"data-l10n-id\");\n    switch (l10nId) {\n      case \"shopping-settings-label\":\n        Glean.shopping.surfaceSettingsExpandClicked.record({ action });\n        break;\n      case \"shopping-analysis-explainer-label\":\n        Glean.shopping.surfaceShowQualityExplainerClicked.record({\n          action,\n        });\n        break;\n    }\n  }\n\n  handleShowMoreButtonClick(e) {\n    this._isExpanded = !this._isExpanded;\n    // toggle show more/show less text\n    e.target.setAttribute(\n      \"data-l10n-id\",\n      this._isExpanded\n        ? \"shopping-show-less-button\"\n        : \"shopping-show-more-button\"\n    );\n    // toggle content expanded attribute\n    this.contentEl.attributes.expanded.value = this._isExpanded;\n\n    let action = this._isExpanded ? \"expanded\" : \"collapsed\";\n    Glean.shopping.surfaceShowMoreReviewsButtonClicked.record({\n      action,\n    });\n  }\n\n  enableShowMoreButton() {\n    this._isExpanded = false;\n    this.toggleAttribute(\"showMoreButtonDisabled\", false);\n    this.contentEl.attributes.expanded.value = false;\n  }\n\n  disableShowMoreButton() {\n    this._isExpanded = true;\n    this.toggleAttribute(\"showMoreButtonDisabled\", true);\n    this.contentEl.attributes.expanded.value = true;\n  }\n\n  handleChevronButtonClick() {\n    this.detailsEl.open = !this.detailsEl.open;\n  }\n\n  firstUpdated() {\n    if (this.type !== \"show-more\") {\n      return;\n    }\n\n    let contentSlot = this.shadowRoot.querySelector(\"slot[name='content']\");\n    let contentSlotEls = contentSlot.assignedElements();\n    if (!contentSlotEls.length) {\n      return;\n    }\n\n    let slottedDiv = contentSlotEls[0];\n\n    this.handleContentSlotResize = this.handleContentSlotResize.bind(this);\n    this.contentResizeObserver = new ResizeObserver(\n      this.handleContentSlotResize\n    );\n    this.contentResizeObserver.observe(slottedDiv);\n  }\n\n  disconnectedCallback() {\n    this.contentResizeObserver?.disconnect();\n  }\n\n  handleContentSlotResize(entries) {\n    for (let entry of entries) {\n      if (entry.contentRect.height === 0) {\n        return;\n      }\n\n      if (entry.contentRect.height < MIN_SHOW_MORE_HEIGHT) {\n        this.disableShowMoreButton();\n      } else if (this.hasAttribute(\"showMoreButtonDisabled\")) {\n        this.enableShowMoreButton();\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__shoppingcardStyles}\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__shoppingpageStyles}\"\n      />\n      <article\n        class=\"shopping-card\"\n        aria-labelledby=\"header\"\n        aria-label=${ifDefined(this.label)}\n      >\n        ${this.cardTemplate()}\n      </article>\n    `;\n  }\n}\ncustomElements.define(\"shopping-card\", ShoppingCard);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html, ifDefined } from \"lit.all.mjs\";\nimport \"browser/components/shopping/content/shopping-card.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Shopping/Shopping Card\",\n  component: \"shopping-card\",\n  parameters: {\n    status: \"in-development\",\n    fluent: `\nshopping-card-label =\n  .label = This the label\nshopping-show-more-button = Show more\nshopping-show-less-button = Show less\n    `,\n  },\n};\n\nconst Template = ({ l10nId, rating, content, type }) => html`\n  <main style=\"max-width: 400px\">\n    <shopping-card\n      type=${ifDefined(type)}\n      data-l10n-id=${ifDefined(l10nId)}\n      data-l10n-attrs=\"label\"\n    >\n      <div slot=\"rating\">\n        ${rating ? html`<moz-five-star rating=\"${rating}\" />` : \"\"}\n      </div>\n      <div slot=\"content\">${ifDefined(content)}</div>\n    </shopping-card>\n  </main>\n`;\n\nexport const DefaultCard = Template.bind({});\nDefaultCard.args = {\n  l10nId: \"shopping-card-label\",\n  content: \"This is the content\",\n};\n\nexport const CardWithRating = Template.bind({});\nCardWithRating.args = {\n  ...DefaultCard.args,\n  rating: 3,\n};\n\nexport const CardOnlyContent = Template.bind({});\nCardOnlyContent.args = {\n  content: \"This card only contains content\",\n};\n\nexport const CardTypeAccordion = Template.bind({});\nCardTypeAccordion.args = {\n  ...DefaultCard.args,\n  content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  Nunc velit turpis, mollis a ultricies vitae, accumsan ut augue.\n  In a eros ac dolor hendrerit varius et at mauris.`,\n  type: \"accordion\",\n};\n\nexport const CardTypeShowMoreButtonDisabled = Template.bind({});\nCardTypeShowMoreButtonDisabled.args = {\n  ...DefaultCard.args,\n  content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  Nunc velit turpis, mollis a ultricies vitae, accumsan ut augue.\n  In a eros ac dolor hendrerit varius et at mauris.`,\n  type: \"show-more\",\n};\n\nexport const CardTypeShowMore = Template.bind({});\nCardTypeShowMore.args = {\n  ...DefaultCard.args,\n  content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  Posuere morbi leo urna molestie at elementum.\n  Felis donec et odio pellentesque.\n  Malesuada fames ac turpis egestas maecenas pharetra convallis posuere morbi. Varius duis at consectetur lorem donec massa sapien faucibus et.\n  Et tortor consequat id porta nibh venenatis.\n  Adipiscing diam donec adipiscing tristique risus nec feugiat in fermentum.\n  Viverra accumsan in nisl nisi scelerisque eu ultrices vitae.\n  Gravida neque convallis a cras.\n  Fringilla est ullamcorper eget nulla.\n  Habitant morbi tristique senectus et netus.\n  Quam vulputate dignissim suspendisse in est ante in.\n  Feugiat vivamus at augue eget arcu dictum varius duis.\n  Est pellentesque elit ullamcorper dignissim cras tincidunt lobortis feugiat vivamus. Ultricies integer quis auctor elit.`,\n  type: \"show-more\",\n};\n"],"names":[],"sourceRoot":""}