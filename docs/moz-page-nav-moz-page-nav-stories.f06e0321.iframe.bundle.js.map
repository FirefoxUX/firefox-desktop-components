{"version":3,"file":"moz-page-nav-moz-page-nav-stories.f06e0321.iframe.bundle.js","mappingssources":["webpack://browser-storybook/../../../toolkit/content/widgets/moz-page-nav/moz-page-nav.mjs","webpack://browser-storybook/../../../toolkit/content/widgets/moz-page-nav/moz-page-nav.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__mozpagenavbuttonStyles from \"toolkit/content/widgets/moz-page-nav/moz-page-nav-button.css\";\nimport __chrome_styles_loader__mozpagenavStyles from \"toolkit/content/widgets/moz-page-nav/moz-page-nav.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * A grouping of navigation buttons that is displayed at the page level,\n * intended to change the selected view, provide a heading, and have links\n * to external resources.\n *\n * @tagname moz-page-nav\n * @property {string} currentView - The currently selected view.\n * @property {string} heading - A heading to be displayed at the top of the navigation.\n * @slot [default] - Used to append moz-page-nav-button elements to the navigation.\n */\nexport default class MozPageNav extends MozLitElement {\n  static properties = {\n    currentView: { type: String },\n    heading: { type: String },\n  };\n\n  static queries = {\n    headingEl: \"#page-nav-header\",\n    primaryNavGroupSlot: \".primary-nav-group slot\",\n    secondaryNavGroupSlot: \"#secondary-nav-group slot\",\n  };\n\n  get pageNavButtons() {\n    return this.primaryNavGroupSlot\n      .assignedNodes()\n      .filter(\n        node => node?.localName === \"moz-page-nav-button\" && !node.hidden\n      );\n  }\n\n  onChangeView(e) {\n    this.currentView = e.target.view;\n  }\n\n  handleFocus(e) {\n    if (e.key == \"ArrowDown\" || e.key == \"ArrowRight\") {\n      e.preventDefault();\n      this.focusNextView();\n    } else if (e.key == \"ArrowUp\" || e.key == \"ArrowLeft\") {\n      e.preventDefault();\n      this.focusPreviousView();\n    }\n  }\n\n  focusPreviousView() {\n    let pageNavButtons = this.pageNavButtons;\n    let currentIndex = pageNavButtons.findIndex(b => b.selected);\n    let prev = pageNavButtons[currentIndex - 1];\n    if (prev) {\n      prev.activate();\n      prev.buttonEl.focus();\n    }\n  }\n\n  focusNextView() {\n    let pageNavButtons = this.pageNavButtons;\n    let currentIndex = pageNavButtons.findIndex(b => b.selected);\n    let next = pageNavButtons[currentIndex + 1];\n    if (next) {\n      next.activate();\n      next.buttonEl.focus();\n    }\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozpagenavStyles}\"\n      />\n      <nav>\n        <h1 class=\"page-nav-header\" id=\"page-nav-header\">${this.heading}</h1>\n        <div\n          class=\"primary-nav-group\"\n          role=\"tablist\"\n          aria-orientation=\"vertical\"\n          aria-labelledby=\"page-nav-header\"\n        >\n          <slot\n            @change-view=${this.onChangeView}\n            @keydown=${this.handleFocus}\n          ></slot>\n        </div>\n        <div id=\"secondary-nav-group\" role=\"group\">\n          <slot name=\"secondary-nav\" @keydown=${this.handleFocus}></slot>\n        </div>\n      </nav>\n    `;\n  }\n\n  updated() {\n    let isViewSelected = false;\n    let assignedPageNavButtons = this.pageNavButtons;\n    for (let button of assignedPageNavButtons) {\n      button.selected = button.view == this.currentView;\n      isViewSelected = isViewSelected || button.selected;\n    }\n    if (!isViewSelected && assignedPageNavButtons.length) {\n      // Current page nav has no matching view, reset to the first view.\n      assignedPageNavButtons[0].activate();\n    }\n  }\n}\ncustomElements.define(\"moz-page-nav\", MozPageNav);\n\n/**\n * A navigation button intended to change the selected view within a page.\n *\n * @tagname moz-page-nav-button\n * @property {string} iconSrc - The chrome:// url for the icon used for the button.\n * @property {string} l10nId - The fluent ID for the button's text\n * @property {boolean} selected - Whether or not the button is currently selected.\n * @slot [default] - Used to append the l10n string to the button.\n */\nexport class MozPageNavButton extends MozLitElement {\n  static properties = {\n    iconSrc: { type: String },\n    l10nId: { type: String },\n    selected: { type: Boolean },\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"none\");\n  }\n\n  static queries = {\n    buttonEl: \"button\",\n  };\n\n  get view() {\n    return this.getAttribute(\"view\");\n  }\n\n  activate() {\n    this.dispatchEvent(\n      new CustomEvent(\"change-view\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozpagenavbuttonStyles}\"\n      />\n      <button\n        aria-selected=${this.selected}\n        tabindex=${this.selected ? 0 : -1}\n        role=\"tab\"\n        ?selected=${this.selected}\n        @click=${this.activate}\n      >\n        <img class=\"page-nav-icon\" src=${this.iconSrc} />\n        <slot></slot>\n      </button>\n    `;\n  }\n}\ncustomElements.define(\"moz-page-nav-button\", MozPageNavButton);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\n// eslint-disable-next-line import/no-unassigned-import\nimport \"./moz-page-nav.mjs\";\n\nexport default {\n  title: \"UI Widgets/Page Nav\",\n  component: \"moz-page-nav\",\n  parameters: {\n    status: \"in-development\",\n    actions: {\n      handles: [\"change-view\"],\n    },\n    fluent: `\nmoz-page-nav-button-one = View 1\n  .title = View 1\nmoz-page-nav-button-two = View 2\n  .title = View 2\nmoz-page-nav-button-three = View 3\n  .title = View 3\nmoz-page-link-one = Support Page\n  .title = Support Page\nmoz-page-nav-heading =\n  .heading = Heading\n     `,\n  },\n};\n\nconst Template = () => html`\n  <style>\n    #page {\n      height: 100%;\n      display: flex;\n\n      @media (max-width: 52rem) {\n        grid-template-columns: 82px 1fr;\n      }\n    }\n    moz-page-nav {\n      margin-inline-start: 10px;\n      --page-nav-margin-top: 10px;\n\n      @media (max-width: 52rem) {\n        margin-inline-start: 0;\n      }\n    }\n  </style>\n  <div id=\"page\">\n    <moz-page-nav data-l10n-id=\"moz-page-nav-heading\" data-l10n-attrs=\"heading\">\n      <moz-page-nav-button\n        view=\"view-one\"\n        data-l10n-id=\"moz-page-nav-button-one\"\n        iconSrc=\"chrome://browser/skin/preferences/category-general.svg\"\n      >\n      </moz-page-nav-button>\n      <moz-page-nav-button\n        view=\"view-two\"\n        data-l10n-id=\"moz-page-nav-button-two\"\n        iconSrc=\"chrome://browser/skin/preferences/category-general.svg\"\n      >\n      </moz-page-nav-button>\n      <moz-page-nav-button\n        view=\"view-three\"\n        data-l10n-id=\"moz-page-nav-button-three\"\n        iconSrc=\"chrome://browser/skin/preferences/category-general.svg\"\n      >\n      </moz-page-nav-button>\n    </moz-page-nav>\n    <main></main>\n  </div>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {};\n"],"names":[],"sourceRoot":""}