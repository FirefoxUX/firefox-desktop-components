{"version":3,"file":"login-list-item-stories.920216fe.iframe.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;;AAEA;AAOA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sources":["webpack://browser-storybook/../aboutlogins/content/components/login-list-item.stories.mjs","webpack://browser-storybook/../aboutlogins/content/components/login-list-lit-item.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"./login-list-lit-item.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Credential Management/Login List Item\",\n  component: \"login-list-item\",\n};\n\nwindow.MozXULElement.insertFTLIfNeeded(\"browser/aboutLogins.ftl\");\n\nexport const NewLoginListItem = ({ selected }) => {\n  return html` <new-list-item .selected=${selected}> </new-list-item> `;\n};\n\nNewLoginListItem.argTypes = {\n  selected: {\n    options: [true, false],\n    control: { type: \"radio\" },\n    defaultValue: false,\n  },\n};\n\nexport const LoginListItem = ({\n  title,\n  username,\n  notificationIcon,\n  selected,\n}) => {\n  return html`\n    <login-list-item\n      .title=${title}\n      .username=${username}\n      .notificationIcon=${notificationIcon}\n      .selected=${selected}\n    >\n    </login-list-item>\n  `;\n};\n\nLoginListItem.argTypes = {\n  notificationIcon: {\n    options: [\"default\", \"breached\", \"vulnerable\"],\n    control: { type: \"radio\" },\n    defaultValue: \"default\",\n  },\n  selected: {\n    options: [true, false],\n    control: { type: \"radio\" },\n    defaultValue: false,\n  },\n};\n\nLoginListItem.args = {\n  title: \"https://www.example.com\",\n  username: \"test-username\",\n};\n","import __chrome_styles_loader__loginlistlititemStyles from \"browser/components/aboutlogins/content/components/login-list-lit-item.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport {\n  html,\n  classMap,\n  choose,\n  when,\n} from \"chrome://global/content/vendor/lit.all.mjs\";\n\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\nexport class ListItem extends MozLitElement {\n  static get properties() {\n    return {\n      icon: { type: String },\n      selected: { type: Boolean },\n    };\n  }\n\n  constructor() {\n    super();\n    this.icon = \"\";\n    this.selected = false;\n  }\n\n  render() {\n    const classes = { selected: this.selected, \"list-item\": true };\n    return html` <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__loginlistlititemStyles}\"\n      />\n      <li class=${classMap(classes)} role=\"option\">\n        <img class=\"icon\" src=${this.icon} />\n        <slot name=\"login-info\"></slot>\n        <slot name=\"notificationIcon\"></slot>\n      </li>`;\n  }\n}\n\nexport class NewListItem extends MozLitElement {\n  static properties = {\n    icon: { type: String },\n    selected: { type: Boolean },\n  };\n\n  constructor() {\n    super();\n    this.id = \"new-login-list-item\";\n    this.selected = false;\n    this.icon = \"page-icon:undefined\";\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__loginlistlititemStyles}\"\n      />\n      <list-item ?selected=${this.selected} icon=${this.icon}>\n        <div class=\"labels\" slot=\"login-info\">\n          <span\n            class=\"title\"\n            dir=\"auto\"\n            data-l10n-id=\"login-list-item-title-new-login2\"\n          ></span\n          ><span class=\"subtitle\" dir=\"auto\"></span>\n        </div>\n      </list-item>\n    `;\n  }\n}\n\nexport class LoginListItem extends MozLitElement {\n  static get properties() {\n    return {\n      favicon: { type: String },\n      title: { type: String, reflect: true },\n      username: { type: String, reflect: true },\n      notificationIcon: { type: String, reflect: true },\n      selected: { type: Boolean },\n    };\n  }\n\n  constructor() {\n    super();\n    this.favicon = \"\";\n    this.title = \"\";\n    this.username = \"\";\n    this.notificationIcon = \"\";\n    this.selected = false;\n  }\n  render() {\n    switch (this.notificationIcon) {\n      case \"breached\":\n        this.classList.add(\"breached\");\n        break;\n      case \"vulnerable\":\n        this.classList.add(\"vulnerable\");\n        break;\n      default:\n        this.classList.remove(\"breached\");\n        this.classList.remove(\"vulnerable\");\n        break;\n    }\n\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__loginlistlititemStyles}\"\n      />\n      <list-item\n        icon=${this.favicon}\n        title=${this.title}\n        username=${this.username}\n        notificationIcon=${this.notificationIcon}\n        ?selected=${this.selected}\n      >\n        <div class=\"labels\" slot=\"login-info\">\n          <span class=\"title\" dir=\"auto\">${this.title}</span>\n          ${when(\n            this.username,\n            () => html` <span class=\"subtitle\" dir=\"auto\">\n              ${this.username}\n            </span>`,\n            () => html`<span\n              class=\"subtitle\"\n              dir=\"auto\"\n              data-l10n-id=\"login-list-item-subtitle-missing-username\"\n            ></span>`\n          )}\n        </div>\n        <div slot=\"notificationIcon\">\n          ${choose(\n            this.notificationIcon,\n            [\n              [\n                \"breached\",\n                () =>\n                  html`<img\n                    class=\"alert-icon\"\n                    data-l10n-id=\"about-logins-list-item-breach-icon\"\n                    title=\"\"\n                    src=\"chrome://browser/content/aboutlogins/icons/breached-website.svg\"\n                  />`,\n              ],\n              [\n                \"vulnerable\",\n                () =>\n                  html`<img\n                    class=\"alert-icon\"\n                    data-l10n-id=\"about-logins-list-item-vulnerable-password-icon\"\n                    title=\"\"\n                    src=\"chrome://browser/content/aboutlogins/icons/vulnerable-password.svg\"\n                  />`,\n              ],\n            ],\n            () => html`<img class=\"alert-icon\" title=\"\" src=\"\" />`\n          )}\n        </div>\n      </list-item>\n    `;\n  }\n}\n\ncustomElements.define(\"list-item\", ListItem);\ncustomElements.define(\"new-list-item\", NewListItem);\ncustomElements.define(\"login-list-item\", LoginListItem);\n"],"names":[],"sourceRoot":""}