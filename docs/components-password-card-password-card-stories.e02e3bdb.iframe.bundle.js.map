{"version":3,"file":"components-password-card-password-card-stories.e02e3bdb.iframe.bundle.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AAKA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACpSA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/components/satchel/megalist/content/components/login-line/login-line.mjs","webpack:///../../../toolkit/components/satchel/megalist/content/components/password-card/password-card.mjs","webpack:///../../../toolkit/components/satchel/megalist/content/components/password-card/password-card.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__loginlineStyles from \"toolkit/components/satchel/megalist/content/components/login-line/login-line.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport {\n  html,\n  when,\n  ifDefined,\n} from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\nclass LoginLine extends MozLitElement {\n  static properties = {\n    value: { type: String },\n    labelL10nId: { type: String },\n    lineType: { type: String },\n    inputType: { type: String },\n    favIcon: { type: String },\n    alert: { type: Boolean },\n    onLineClick: { type: Function },\n  };\n\n  #copyTimeoutID;\n\n  static get queries() {\n    return {\n      lineContainer: \".line-container\",\n    };\n  }\n\n  #canCopy() {\n    return this.lineType !== \"origin\";\n  }\n\n  #addCopyAttr() {\n    return ifDefined(this.#canCopy() ? \"data-after\" : undefined);\n  }\n\n  #handleCopyAnimation() {\n    if (!this.lineContainer.classList.contains(\"copied\")) {\n      this.lineContainer.classList.add(\"copied\");\n      this.#copyTimeoutID = setTimeout(() => {\n        this.lineContainer.classList.remove(\"copied\");\n        this.#copyTimeoutID = null;\n      }, 4000);\n    }\n  }\n\n  async #onClick() {\n    const isAuthorized = await this.onLineClick();\n    if (!isAuthorized || !this.#canCopy()) {\n      return;\n    }\n    this.#handleCopyAnimation();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.addEventListener(\"click\", this.#onClick);\n    this.addEventListener(\"keypress\", async e => {\n      if (e.code === \"Enter\" || e.code === \"Space\") {\n        e.preventDefault();\n        await this.#onClick();\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.#copyTimeoutID) {\n      clearTimeout(this.#copyTimeoutID);\n    }\n  }\n\n  constructor() {\n    super();\n    this.favIcon = \"\";\n    this.#copyTimeoutID = null;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__loginlineStyles}\"\n      />\n      <div class=\"line-container\">\n        <div class=\"input-container\">\n          <div class=\"label-container\">\n            <label\n              data-l10n-id=${this.labelL10nId}\n              data-l10n-attrs=${this.#addCopyAttr()}\n              class=\"input-label\"\n              for=\"login-line-input\"\n            ></label>\n            ${when(\n              this.alert,\n              () =>\n                html` <img\n                  data-l10n-id=\"alert-icon\"\n                  class=\"alert-icon\"\n                  src=\"chrome://global/skin/icons/warning-fill-12.svg\"\n                />`\n            )}\n          </div>\n          <div class=\"value-container\">\n            ${when(\n              this.favIcon,\n              () =>\n                html` <img\n                  data-l10n-id=\"website-icon\"\n                  class=\"fav-icon\"\n                  src=${this.favIcon}\n                />`\n            )}\n            <input\n              class=\"input-field\"\n              id=\"login-line-input\"\n              value=${this.value}\n              type=${this.inputType}\n              readonly\n            />\n          </div>\n        </div>\n        ${when(this.#canCopy(), () => {\n          return html`\n            <div class=\"copy-container\">\n              <img\n                data-l10n-id=\"copy-icon\"\n                class=\"copy-icon\"\n                src=\"chrome://global/skin/icons/edit-copy.svg\"\n              />\n              <img\n                data-l10n-id=\"check-icon\"\n                class=\"check-icon\"\n                src=\"chrome://global/skin/icons/check-filled.svg\"\n              />\n            </div>\n          `;\n        })}\n      </div>\n    `;\n  }\n}\n\nclass ConcealedLoginLine extends MozLitElement {\n  static properties = {\n    value: { type: String },\n    labelL10nId: { type: String },\n    alert: { type: Boolean },\n    visible: { type: Boolean },\n    onLineClick: { type: Function },\n    onButtonClick: { type: Function },\n  };\n\n  static CONCEALED_VALUE_TEXT = \" \".repeat(8);\n\n  static get queries() {\n    return {\n      loginLine: \"login-line\",\n      revealBtn: \"moz-button\",\n    };\n  }\n\n  get #inputType() {\n    return !this.visible ? \"password\" : \"text\";\n  }\n\n  get #displayValue() {\n    return !this.visible ? ConcealedLoginLine.CONCEALED_VALUE_TEXT : this.value;\n  }\n\n  get #revealBtnLabel() {\n    return !this.visible ? \"show-password-button\" : \"hide-password-button\";\n  }\n\n  #revealIconSrc() {\n    return this.visible\n      ? /* eslint-disable-next-line mozilla/no-browser-refs-in-toolkit */\n        \"chrome://browser/content/aboutlogins/icons/password-hide.svg\"\n      : /* eslint-disable-next-line mozilla/no-browser-refs-in-toolkit */\n        \"chrome://browser/content/aboutlogins/icons/password.svg\";\n  }\n\n  async #onRevealButtonClick() {\n    const isAuthorized = await this.onButtonClick();\n    if (!isAuthorized) {\n      return;\n    }\n    this.revealBtn.setAttribute(\"data-l10n-id\", this.#revealBtnLabel);\n  }\n\n  render() {\n    const dataL10nId = this.alert\n      ? \"password-login-line-with-alert\"\n      : \"password-login-line\";\n    return html` <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__loginlineStyles}\"\n      />\n      <login-line\n        role=\"option\"\n        tabindex=\"-1\"\n        data-l10n-id=${dataL10nId}\n        lineType=\"password\"\n        inputType=${this.#inputType}\n        labelL10nId=${this.labelL10nId}\n        .value=${this.#displayValue}\n        ?alert=${this.alert}\n        .onLineClick=${this.onLineClick}\n        }\n      >\n      </login-line>\n      <div class=\"reveal-button-container\">\n        <moz-button\n          role=\"option\"\n          class=\"reveal-button\"\n          type=\"icon ghost\"\n          data-l10n-id=${this.#revealBtnLabel}\n          iconSrc=${this.#revealIconSrc()}\n          @keypress=${async e => {\n            if (e.code === \"Enter\") {\n              await this.#onRevealButtonClick();\n            }\n          }}\n          @click=${this.#onRevealButtonClick}\n        ></moz-button>\n      </div>`;\n  }\n}\n\ncustomElements.define(\"login-line\", LoginLine);\ncustomElements.define(\"concealed-login-line\", ConcealedLoginLine);\n","import __chrome_styles_loader__passwordcardStyles from \"toolkit/components/satchel/megalist/content/components/password-card/password-card.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/* eslint-disable-next-line import/no-unassigned-import */\nimport \"chrome://global/content/megalist/components/login-line/login-line.mjs\";\n\nconst DIRECTIONS = {\n  ArrowUp: -1,\n  ArrowLeft: -1,\n  ArrowDown: 1,\n  ArrowRight: 1,\n};\n\nexport class PasswordCard extends MozLitElement {\n  static properties = {\n    origin: { type: Object },\n    username: { type: Object },\n    password: { type: Object },\n    messageToViewModel: { type: Function },\n    reauthCommandHandler: { type: Function },\n    onPasswordRevealClick: { type: Function },\n    handleEditButtonClick: { type: Function },\n    handleViewAlertClick: { type: Function },\n  };\n\n  static get queries() {\n    return {\n      originLine: \".line-item[linetype='origin']\",\n      usernameLine: \".line-item[linetype='username']\",\n      passwordLine: \"concealed-login-line\",\n      editBtn: \".edit-button\",\n      viewAlertBtn: \".view-alert-button\",\n    };\n  }\n\n  #focusableElementsList;\n  #focusableElementsMap;\n\n  #hasAlert() {\n    return (\n      this.origin.breached ||\n      !this.username.value.length ||\n      this.password.vulnerable\n    );\n  }\n\n  #getNextFocusableElement() {\n    return this.nextElementSibling?.originLine;\n  }\n\n  #getPrevFocusableElement() {\n    const prevSibling = this.previousElementSibling;\n    if (!prevSibling) {\n      return null;\n    }\n    return prevSibling.#hasAlert()\n      ? prevSibling.viewAlertBtn\n      : prevSibling.editBtn;\n  }\n\n  async firstUpdated() {\n    this.#focusableElementsMap = new Map();\n    const buttons = this.shadowRoot.querySelectorAll(\"moz-button\");\n    const lineItems = this.shadowRoot.querySelectorAll(\".line-item\");\n\n    let index = 0;\n    for (const el of lineItems) {\n      if (el === this.passwordLine) {\n        await el.updateComplete;\n        this.#focusableElementsMap.set(el.loginLine, index++);\n        this.#focusableElementsMap.set(el.revealBtn.buttonEl, index++);\n      } else {\n        this.#focusableElementsMap.set(el, index++);\n      }\n    }\n\n    for (const el of buttons) {\n      this.#focusableElementsMap.set(el.buttonEl, index);\n      index++;\n    }\n\n    this.#focusableElementsList = Array.from(this.#focusableElementsMap.keys());\n  }\n\n  #handleKeydown(e) {\n    const element = e.composedTarget;\n\n    const focusInternal = offset => {\n      const index = this.#focusableElementsMap.get(element);\n      this.#focusableElementsList[index + offset].focus();\n    };\n\n    switch (e.code) {\n      case \"ArrowUp\":\n        e.preventDefault();\n        if (this.#focusableElementsMap.get(element) === 0) {\n          this.#getPrevFocusableElement()?.focus();\n        } else {\n          focusInternal(DIRECTIONS[e.code]);\n        }\n        break;\n      case \"ArrowDown\":\n        e.preventDefault();\n        if (\n          this.#focusableElementsMap.get(element) ===\n          this.#focusableElementsList.length - 1\n        ) {\n          this.#getNextFocusableElement()?.focus();\n        } else {\n          focusInternal(DIRECTIONS[e.code]);\n        }\n        break;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"keydown\", e => this.#handleKeydown(e), {\n      capture: true,\n    });\n  }\n\n  handleCommand(commandId, lineIndex) {\n    this.messageToViewModel(\"Command\", { commandId, snapshotId: lineIndex });\n  }\n\n  #recordInteractionType(type) {\n    Glean.contextualManager.recordsInteraction.record({\n      interaction_type: type,\n    });\n  }\n\n  async onEditButtonClick() {\n    this.#recordInteractionType(\"edit\");\n    const isAuthenticated = await this.reauthCommandHandler(() =>\n      this.messageToViewModel(\"Command\", {\n        commandId: \"Edit\",\n        snapshotId: this.password.lineIndex,\n      })\n    );\n\n    if (!isAuthenticated) {\n      return;\n    }\n\n    this.handleEditButtonClick();\n  }\n\n  onViewAlertClick() {\n    this.handleViewAlertClick();\n    this.#recordInteractionType(\"view_alert\");\n  }\n\n  #onOriginLineClick(lineIndex) {\n    this.handleCommand(\"OpenLink\", lineIndex);\n    this.#recordInteractionType(\"url_navigate\");\n  }\n\n  #onCopyButtonClick(lineIndex) {\n    this.handleCommand(\"Copy\", lineIndex);\n  }\n\n  renderOriginField() {\n    const dataL10nId = this.origin.breached\n      ? \"origin-login-line-with-alert\"\n      : \"origin-login-line\";\n    return html`\n      <login-line\n        tabindex=\"-1\"\n        role=\"option\"\n        class=\"line-item\"\n        data-l10n-id=${dataL10nId}\n        data-l10n-args=\"${JSON.stringify({ url: this.origin.value })}\"\n        inputType=\"text\"\n        lineType=\"origin\"\n        labelL10nId=\"passwords-origin-label\"\n        .value=${this.origin.value}\n        .favIcon=${this.origin.valueIcon}\n        ?alert=${this.origin.breached}\n        .onLineClick=${() => {\n          this.#onOriginLineClick(this.origin.lineIndex);\n          return true;\n        }}\n      >\n      </login-line>\n    `;\n  }\n\n  renderUsernameField() {\n    const dataL10nId = !this.username.value.length\n      ? \"username-login-line-with-alert\"\n      : \"username-login-line\";\n    return html`\n      <login-line\n        tabindex=\"-1\"\n        role=\"option\"\n        class=\"line-item\"\n        data-l10n-id=${dataL10nId}\n        data-l10n-args=\"${JSON.stringify({ username: this.username.value })}\"\n        inputType=\"text\"\n        lineType=\"username\"\n        labelL10nId=\"passwords-username-label\"\n        .value=${this.username.value}\n        .onLineClick=${() => {\n          this.#onCopyButtonClick(this.username.lineIndex);\n          this.#recordInteractionType(\"copy_username\");\n          return true;\n        }}\n        ?alert=${!this.username.value.length}\n      >\n      </login-line>\n    `;\n  }\n\n  renderPasswordField() {\n    return html`\n      <concealed-login-line\n        class=\"line-item\"\n        labelL10nId=\"passwords-password-label\"\n        .value=${this.password.value}\n        .visible=${!this.password.concealed}\n        ?alert=${this.password.vulnerable}\n        .onLineClick=${() => {\n          this.reauthCommandHandler(() => {\n            this.#onCopyButtonClick(this.password.lineIndex);\n          });\n          this.#recordInteractionType(\"copy_password\");\n        }}\n        .onButtonClick=${() => {\n          const interactionType = this.password.concealed\n            ? \"view_password\"\n            : \"hide_password\";\n          this.#recordInteractionType(interactionType);\n          this.reauthCommandHandler(() =>\n            this.onPasswordRevealClick(\n              this.password.concealed,\n              this.password.lineIndex\n            )\n          );\n        }}\n      >\n      </concealed-login-line>\n    `;\n  }\n\n  renderButton() {\n    return html`<div class=\"edit-line-container\" role=\"option\">\n      <moz-button\n        data-l10n-id=\"edit-login-button\"\n        class=\"edit-button\"\n        @click=${this.onEditButtonClick}\n      ></moz-button>\n    </div>`;\n  }\n\n  renderViewAlertField() {\n    if (!this.#hasAlert()) {\n      return \"\";\n    }\n\n    return html`\n      <moz-message-bar type=\"warning\" data-l10n-id=\"view-alert-heading\">\n        <moz-button\n          class=\"view-alert-button\"\n          data-l10n-id=\"view-alert-button\"\n          slot=\"actions\"\n          type=\"icon\"\n          iconSrc=\"chrome://browser/skin/forward.svg\"\n          @click=${this.onViewAlertClick}\n        >\n        </moz-button>\n      </moz-message-bar>\n    `;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__passwordcardStyles}\"\n      />\n      ${this.renderOriginField()} ${this.renderUsernameField()}\n      ${this.renderPasswordField()} ${this.renderButton()}\n      ${this.renderViewAlertField()}\n    `;\n  }\n}\n\ncustomElements.define(\"password-card\", PasswordCard);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"./password-card.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Credential Management/Password Card\",\n  component: \"PasswordCard\",\n  argTypes: {\n    website: { control: { type: \"object\" } },\n    username: { control: { type: \"object\" } },\n    password: { control: { type: \"object\" } },\n  },\n};\n\nwindow.MozXULElement.insertFTLIfNeeded(\"preview/megalist.ftl\");\n\nconst Template = ({ website, username, password }) => {\n  return html`\n    <password-card\n      role=\"group\"\n      .origin=${website}\n      .username=${username}\n      .password=${password}\n      .messageToViewModel=${() => {}}\n      .reauthCommandHandler=${() => true}\n    >\n    </password-card>\n  `;\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n  website: {\n    value: \"website.com\",\n    breached: false,\n    valueIcon: \"chrome://global/skin/icons/defaultFavicon.svg\",\n  },\n  username: {\n    value: \"username\",\n  },\n  password: {\n    value: \"password\",\n    vulnerable: false,\n    concealed: true,\n  },\n};\n\nexport const AllAlertsOn = Template.bind({});\nAllAlertsOn.args = {\n  website: {\n    value: \"website.com\",\n    breached: true,\n    valueIcon: \"chrome://global/skin/icons/defaultFavicon.svg\",\n  },\n  username: {\n    value: \"\",\n  },\n  password: {\n    value: \"password\",\n    vulnerable: true,\n    concealed: true,\n  },\n};\n"],"names":[],"sourceRoot":""}