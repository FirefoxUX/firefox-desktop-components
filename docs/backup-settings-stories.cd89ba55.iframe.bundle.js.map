{"version":3,"file":"backup-settings-stories.cd89ba55.iframe.bundle.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;AC9CA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://browser-storybook/../backup/content/backup-settings.mjs","webpack://browser-storybook/../backup/content/backup-settings.stories.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n/**\n * The widget for managing the BackupService that is embedded within the main\n * document of about:settings / about:preferences.\n */\nexport default class BackupSettings extends MozLitElement {\n  static properties = {\n    backupServiceState: { type: Object },\n  };\n\n  /**\n   * Creates a BackupSettings instance and sets the initial default\n   * state.\n   */\n  constructor() {\n    super();\n    this.backupServiceState = {\n      backupInProgress: false,\n    };\n  }\n\n  /**\n   * Dispatches the BackupUI:InitWidget custom event upon being attached to the\n   * DOM, which registers with BackupUIChild for BackupService state updates.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      new CustomEvent(\"BackupUI:InitWidget\", { bubbles: true })\n    );\n  }\n\n  render() {\n    return html`<div>\n      Backup in progress:\n      ${this.backupServiceState.backupInProgress ? \"Yes\" : \"No\"}\n    </div>`;\n  }\n}\n\ncustomElements.define(\"backup-settings\", BackupSettings);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html } from \"lit.all.mjs\";\nimport \"./backup-settings.mjs\";\n\nexport default {\n  title: \"Domain-specific UI Widgets/Backup/Backup Settings\",\n  component: \"backup-settings\",\n  argTypes: {},\n};\n\nconst Template = ({ backupServiceState }) => html`\n  <backup-settings .backupServiceState=${backupServiceState}></backup-settings>\n`;\n\nexport const BackingUpNotInProgress = Template.bind({});\nBackingUpNotInProgress.args = {\n  backupServiceState: {\n    backupInProgress: false,\n  },\n};\n\nexport const BackingUpInProgress = Template.bind({});\nBackingUpInProgress.args = {\n  backupServiceState: {\n    backupInProgress: true,\n  },\n};\n"],"names":[],"sourceRoot":""}