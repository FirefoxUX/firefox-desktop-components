{"version":3,"file":"moz-support-link-moz-support-link-stories.51ae785d.iframe.bundle.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAKA;AAQA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;;AAEA;AACA;AAEA;AAGA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://browser-storybook/../../../toolkit/content/widgets/moz-support-link/moz-support-link.mjs","webpack://browser-storybook/../../../toolkit/content/widgets/moz-support-link/moz-support-link.stories.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nwindow.MozXULElement?.insertFTLIfNeeded(\"toolkit/global/mozSupportLink.ftl\");\n\n/**\n * An extension of the anchor element that helps create links to Mozilla's\n * support documentation. This should be used for SUMO links only - other \"Learn\n * more\" links can use the regular anchor element.\n *\n * @tagname moz-support-link\n * @attribute {string} support-page - Short-hand string from SUMO to the specific support page.\n * @attribute {string} utm-content - UTM parameter for a URL, if it is an AMO URL.\n * @attribute {string} data-l10n-id - Fluent ID used to generate the text content.\n */\nexport default class MozSupportLink extends HTMLAnchorElement {\n  static SUPPORT_URL = \"https://www.mozilla.org/\";\n  static get observedAttributes() {\n    return [\"support-page\", \"utm-content\"];\n  }\n\n  /**\n   * Handles setting up the SUPPORT_URL preference getter.\n   * Without this, the tests for this component may not behave\n   * as expected.\n   * @private\n   * @memberof MozSupportLink\n   */\n  #register() {\n    if (window.document.nodePrincipal?.isSystemPrincipal) {\n      ChromeUtils.defineESModuleGetters(MozSupportLink, {\n        BrowserUtils: \"resource://gre/modules/BrowserUtils.sys.mjs\",\n      });\n\n      // eslint-disable-next-line no-shadow\n      let { XPCOMUtils } = window.XPCOMUtils\n        ? window\n        : ChromeUtils.importESModule(\n            \"resource://gre/modules/XPCOMUtils.sys.mjs\"\n          );\n      XPCOMUtils.defineLazyPreferenceGetter(\n        MozSupportLink,\n        \"SUPPORT_URL\",\n        \"app.support.baseURL\",\n        \"\",\n        null,\n        val => Services.urlFormatter.formatURL(val)\n      );\n    } else if (!window.IS_STORYBOOK) {\n      MozSupportLink.SUPPORT_URL = window.RPMGetFormatURLPref(\n        \"app.support.baseURL\"\n      );\n    }\n  }\n\n  connectedCallback() {\n    this.#register();\n    this.#setHref();\n    this.setAttribute(\"target\", \"_blank\");\n    this.addEventListener(\"click\", this);\n    if (\n      !this.getAttribute(\"data-l10n-id\") &&\n      !this.getAttribute(\"data-l10n-name\") &&\n      !this.childElementCount\n    ) {\n      document.l10n.setAttributes(this, \"moz-support-link-text\");\n    }\n    document.l10n.translateFragment(this);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener(\"click\", this);\n  }\n\n  handleEvent(e) {\n    if (e.type == \"click\") {\n      if (window.openTrustedLinkIn) {\n        let where = MozSupportLink.BrowserUtils.whereToOpenLink(e, false, true);\n        if (where == \"current\") {\n          where = \"tab\";\n        }\n        e.preventDefault();\n        openTrustedLinkIn(this.href, where);\n      }\n    }\n  }\n\n  attributeChangedCallback(attrName) {\n    if (attrName === \"support-page\" || attrName === \"utm-content\") {\n      this.#setHref();\n    }\n  }\n\n  #setHref() {\n    let supportPage = this.getAttribute(\"support-page\") ?? \"\";\n    let base = MozSupportLink.SUPPORT_URL + supportPage;\n    this.href = this.hasAttribute(\"utm-content\")\n      ? formatUTMParams(this.getAttribute(\"utm-content\"), base)\n      : base;\n  }\n}\ncustomElements.define(\"moz-support-link\", MozSupportLink, { extends: \"a\" });\n\n/**\n * Adds UTM parameters to a given URL, if it is an AMO URL.\n *\n * @param {string} contentAttribute\n *        Identifies the part of the UI with which the link is associated.\n * @param {string} url\n * @returns {string}\n *          The url with UTM parameters if it is an AMO URL.\n *          Otherwise the url in unmodified form.\n */\nexport function formatUTMParams(contentAttribute, url) {\n  if (!contentAttribute) {\n    return url;\n  }\n  let parsedUrl = new URL(url);\n  let domain = `.${parsedUrl.hostname}`;\n  if (\n    !domain.endsWith(\".mozilla.org\") &&\n    // For testing: addons-dev.allizom.org and addons.allizom.org\n    !domain.endsWith(\".allizom.org\")\n  ) {\n    return url;\n  }\n\n  parsedUrl.searchParams.set(\"utm_source\", \"firefox-browser\");\n  parsedUrl.searchParams.set(\"utm_medium\", \"firefox-browser\");\n  parsedUrl.searchParams.set(\"utm_content\", contentAttribute);\n  return parsedUrl.href;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport \"./moz-support-link.mjs\";\n\nMozXULElement.insertFTLIfNeeded(\n  \"locales-preview/moz-support-link-storybook.ftl\"\n);\nMozXULElement.insertFTLIfNeeded(\"toolkit/global/mozSupportLink.ftl\");\n\nconst fluentStrings = [\n  \"storybook-amo-test\",\n  \"storybook-fluent-test\",\n  \"moz-support-link-text\",\n];\n\nexport default {\n  title: \"UI Widgets/Support Link\",\n  component: \"moz-support-link\",\n  argTypes: {\n    \"data-l10n-id\": {\n      options: [fluentStrings[0], fluentStrings[1], fluentStrings[2]],\n      control: { type: \"select\" },\n    },\n    onClick: { action: \"clicked\" },\n  },\n  parameters: {\n    status: \"stable\",\n  },\n};\n\nconst Template = ({\n  \"data-l10n-id\": dataL10nId,\n  \"support-page\": supportPage,\n  \"utm-content\": utmContent,\n}) => html`\n  <a\n    is=\"moz-support-link\"\n    data-l10n-id=${ifDefined(dataL10nId)}\n    support-page=${ifDefined(supportPage)}\n    utm-content=${ifDefined(utmContent)}\n  >\n  </a>\n`;\n\nexport const withAMOUrl = Template.bind({});\nwithAMOUrl.args = {\n  \"data-l10n-id\": fluentStrings[0],\n  \"support-page\": \"addons\",\n  \"utm-content\": \"promoted-addon-badge\",\n};\n\nexport const Primary = Template.bind({});\nPrimary.args = {\n  \"support-page\": \"preferences\",\n  \"utm-content\": \"\",\n};\n\nexport const withFluentId = Template.bind({});\nwithFluentId.args = {\n  \"data-l10n-id\": fluentStrings[1],\n  \"support-page\": \"preferences\",\n  \"utm-content\": \"\",\n};\n"],"names":[],"sourceRoot":""}