{"version":3,"file":"moz-button-moz-button-stories.82fcad07.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://browser-storybook/../../../toolkit/content/widgets/moz-button/moz-button.mjs","webpack://browser-storybook/../../../toolkit/content/widgets/moz-button/moz-button.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__mozbuttonStyles from \"toolkit/content/widgets/moz-button/moz-button.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\n/**\n * A button with multiple types and two sizes.\n *\n * @tagname moz-button\n * @property {string} label - The button's label, will be overridden by slotted content.\n * @property {string} type - The button type.\n *   Options: default, primary, destructive, icon, icon ghost, ghost.\n * @property {string} size - The button size.\n *   Options: default, small.\n * @property {boolean} disabled - The disabled state.\n * @property {string} title - The button's title attribute, used in shadow DOM and therefore not as an attribute on moz-button.\n * @property {string} titleAttribute - Internal, map title attribute to the title JS property.\n * @property {string} tooltipText - Set the title property, the title attribute will be used first.\n * @property {string} ariaLabel - The button's arial-label attribute, used in shadow DOM and therefore not as an attribute on moz-button.\n * @property {string} ariaLabelAttribute - Internal, map aria-label attribute to the ariaLabel JS property.\n * @property {HTMLButtonElement} buttonEl - The internal button element in the shadow DOM.\n * @slot default - The button's content, overrides label property.\n * @fires click - The click event.\n */\nexport default class MozButton extends MozLitElement {\n  static shadowRootOptions = {\n    ...MozLitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static properties = {\n    label: { type: String, reflect: true },\n    type: { type: String, reflect: true },\n    size: { type: String, reflect: true },\n    disabled: { type: Boolean, reflect: true },\n    title: { type: String, state: true },\n    titleAttribute: { type: String, attribute: \"title\", reflect: true },\n    tooltipText: { type: String },\n    ariaLabelAttribute: {\n      type: String,\n      attribute: \"aria-label\",\n      reflect: true,\n    },\n    ariaLabel: { type: String, state: true },\n  };\n\n  static queries = {\n    buttonEl: \"button\",\n  };\n\n  constructor() {\n    super();\n    this.type = \"default\";\n    this.size = \"default\";\n    this.disabled = false;\n  }\n\n  willUpdate(changes) {\n    if (changes.has(\"titleAttribute\")) {\n      this.title = this.titleAttribute;\n      this.titleAttribute = null;\n    }\n    if (changes.has(\"ariaLabelAttribute\")) {\n      this.ariaLabel = this.ariaLabelAttribute;\n      this.ariaLabelAttribute = null;\n    }\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozbuttonStyles}\"\n      />\n      <button\n        type=${this.type}\n        size=${this.size}\n        ?disabled=${this.disabled}\n        title=${ifDefined(this.title || this.tooltipText)}\n        aria-label=${ifDefined(this.ariaLabel)}\n        part=\"button\"\n      >\n        <slot>${this.label}</slot>\n      </button>\n    `;\n  }\n}\ncustomElements.define(\"moz-button\", MozButton);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\n// eslint-disable-next-line import/no-unassigned-import\nimport \"./moz-button.mjs\";\n\nexport default {\n  title: \"UI Widgets/Moz Button\",\n  component: \"moz-button\",\n  argTypes: {\n    l10nId: {\n      options: [\n        \"moz-button-labelled\",\n        \"moz-button-titled\",\n        \"moz-button-aria-labelled\",\n      ],\n      control: { type: \"select\" },\n    },\n    size: {\n      options: [\"default\", \"small\"],\n      control: { type: \"radio\" },\n    },\n  },\n  parameters: {\n    actions: {\n      handles: [\"click\"],\n    },\n    status: \"in-development\",\n    fluent: `\nmoz-button-labelled = Button\nmoz-button-primary = Primary\nmoz-button-destructive = Destructive\nmoz-button-titled =\n  .title = View logins\nmoz-button-aria-labelled =\n  .aria-label = View logins\n`,\n  },\n};\n\nconst Template = ({ type, size, l10nId, iconUrl, disabled }) => html`\n  <style>\n    moz-button[type~=\"icon\"]::part(button) {\n      background-image: url(\"${iconUrl}\");\n    }\n  </style>\n  <moz-button\n    data-l10n-id=${l10nId}\n    type=${type}\n    size=${size}\n    ?disabled=${disabled}\n  ></moz-button>\n`;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  type: \"default\",\n  size: \"default\",\n  l10nId: \"moz-button-labelled\",\n  iconUrl: \"chrome://global/skin/icons/more.svg\",\n  disabled: false,\n};\nexport const DefaultSmall = Template.bind({});\nDefaultSmall.args = {\n  type: \"default\",\n  size: \"small\",\n  l10nId: \"moz-button-labelled\",\n  iconUrl: \"chrome://global/skin/icons/more.svg\",\n  disabled: false,\n};\nexport const Primary = Template.bind({});\nPrimary.args = {\n  ...Default.args,\n  type: \"primary\",\n  l10nId: \"moz-button-primary\",\n};\nexport const Destructive = Template.bind({});\nDestructive.args = {\n  ...Default.args,\n  type: \"destructive\",\n  l10nId: \"moz-button-destructive\",\n};\nexport const Icon = Template.bind({});\nIcon.args = {\n  ...Default.args,\n  type: \"icon\",\n  l10nId: \"moz-button-titled\",\n};\nexport const IconSmall = Template.bind({});\nIconSmall.args = {\n  ...Icon.args,\n  size: \"small\",\n};\nexport const IconGhost = Template.bind({});\nIconGhost.args = {\n  ...Icon.args,\n  type: \"icon ghost\",\n};\n"],"names":[],"sourceRoot":""}