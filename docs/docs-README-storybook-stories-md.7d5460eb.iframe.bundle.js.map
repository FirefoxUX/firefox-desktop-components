{"version":3,"file":"docs-README-storybook-stories-md.7d5460eb.iframe.bundle.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvSA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./node_modules/@mdx-js/react/index.js","webpack:///./docs/README.storybook.stories.md","webpack:///./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs","webpack:///./node_modules/react/jsx-runtime.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","export {\n  MDXContext,\n  MDXProvider,\n  useMDXComponents,\n  withMDXComponents\n} from './lib/index.js'\n","\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"/home/runner/work/firefox-desktop-components/firefox-desktop-components/gecko/browser/components/storybook/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport { Meta, Canvas, ArgTypes } from \"@storybook/addon-docs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\",\n    h4: \"h4\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Docs/Storybook\",\n      parameters: {\n        previewTabs: {\n          canvas: {\n            hidden: true\n          }\n        },\n        viewMode: \"docs\"\n      }\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n      id: \"storybook-for-firefox\",\n      children: \"Storybook for Firefox\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [/*#__PURE__*/_jsx(_components.a, {\n        href: \"https://storybook.js.org/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Storybook\"\n      }), \" is an interactive tool that creates a\\nplayground for UI components. We use Storybook to document our design system,\\nreusable components, and any specific components you might want to test with\\ndummy data. \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://firefoxux.github.io/firefox-desktop-components/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Take a look at our Storybook\\ninstance!\"\n      })]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"background\",\n      children: \"Background\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"Storybook lists components that can be reused, and helps document\\nwhat common elements we have. It can also list implementation specific\\ncomponents, but they should be added to the \\\"Domain-Specific UI Widgets\\\" section.\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Changes to files directly referenced from Storybook (so basically non-chrome://\\npaths) should automatically reflect changes in the opened browser. If you make a\\nchange to a \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"chrome://\"\n      }), \" referenced file then you'll need to do a hard refresh\\n(Cmd+Shift+R/Ctrl+Shift+R) to notice the changes. If you're on Windows you may\\nneed to \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach build faster\"\n      }), \" to have the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"chrome://\"\n      }), \" URL show the latest version.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"running-storybook\",\n      children: \"Running Storybook\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Installing the npm dependencies and running the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"storybook\"\n      }), \" npm script should be\\nenough to get Storybook running. This can be done via \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach storybook\"\n      }), \"\\ncommands, or with your personal npm/node that happens to be compatible.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"running-with-mach-commands\",\n      children: \"Running with mach commands\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"This is the recommended approach for installing dependencies and running\\nStorybook locally.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"To install dependencies, start the Storybook server, and launch the Storybook\\nsite in a local build of Firefox, just run:\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"# This uses npm ci under the hood to install the package-lock.json exactly.\\n./mach storybook\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"This single command will first install any missing dependencies then start the\\nlocal Storybook server. It will also start your local browser and point it to\\n\", /*#__PURE__*/_jsx(_components.code, {\n        children: \"http://localhost:5703\"\n      }), \" while enabling certain preferences to ensure components\\ndisplay as expected (specifically \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"svg.context-properties.content.enabled\"\n      }), \" and\\n\", /*#__PURE__*/_jsx(_components.code, {\n        children: \"layout.css.light-dark.enabled\"\n      }), \").\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"It's necessary to use your local build to test in Storybook since \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"chrome://\"\n      }), \"\\nURLs are currently being pulled from the running browser, so any changes to\\ncommon-shared.css for example will come from your build.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"The Storybook server will continue running and will watch for component file\\nchanges.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h4, {\n      id: \"alternative-mach-commands\",\n      children: \"Alternative mach commands\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Although running \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach storybook\"\n      }), \" is the most convenient way to interact with\\nStorybook locally it is also possible to run separate commands to start the\\nStorybook server and run your local build with the necessary prefs.\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"If you only want to start the Storybook server - for example in cases where you\\nalready have a local build running - you can pass a \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"--no-open\"\n      }), \" flag to \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach storybook\"\n      }), \":\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"# Start the storybook server without launching a local Firefox build.\\n./mach storybook --no-open\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"If you just want to spin up a local build of Firefox with the required prefs\\nenabled you can use the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"launch\"\n      }), \" subcommand:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"# In another terminal:\\n./mach storybook launch\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"This will run your local browser and point it at \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"http://localhost:5703\"\n      }), \".\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Alternatively, you can simply navigate to \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"http://localhost:5703/\"\n      }), \" or run:\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"# In another terminal:\\n./mach run http://localhost:5703/\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n      children: \"although with this option certain prefs won't be enabled, so what's displayed in\\nStorybook may not exactly reflect how components will look when used in Firefox.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"personal-npm\",\n      children: \"Personal npm\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"You can use your own \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"npm\"\n      }), \" to install and run Storybook. Compatibility is up\\nto you to sort out.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"cd browser/components/storybook\\nnpm ci # Install the package-lock.json exactly so lockfileVersion won't change.\\nnpm run storybook\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"updating-storybook-dependencies\",\n      children: \"Updating Storybook dependencies\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"On occasion you may need to update or add a npm dependency for Storybook.\\nThis can be done using the version of \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"npm\"\n      }), \" packaged with \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"mach\"\n      }), \":\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"# Install a dev dependency from within the storybook directory.\\ncd browser/components/storybook && ../../../mach npm i -D your-package\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n      id: \"adding-new-stories\",\n      children: \"Adding new stories\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Storybook is currently configured to search for story files (any file with a\\n\", /*#__PURE__*/_jsx(_components.code, {\n        children: \".stories.(js|mjs|md)\"\n      }), \" extension) in \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"toolkit/content/widgets\"\n      }), \" and\\n\", /*#__PURE__*/_jsx(_components.code, {\n        children: \"browser/components/storybook/stories\"\n      }), \".\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Stories in \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"toolkit/content/widgets\"\n      }), \" are used to document design system\\ncomponents, also known as UI widgets.\\nAs long as you used \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach addwidget\"\n      }), \" correctly, there is no additional setup needed to view your newly created story in Storybook.\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Stories in \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"browser/components/storybook/stories\"\n      }), \" are used for non-design system components, also called domain-specific UI widgets.\\nThe easiest way to use Storybook for non-design system element is to use \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach addstory new-component \\\"Your Project\\\"\"\n      }), \".\\nYou can also use \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"./mach addstory new-component \\\"Your Project\\\" --path browser/components/new-component.mjs\"\n      }), \" where \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"--path\"\n      }), \" is the path to your new components' source.\\n\", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/rev/2c11f18f89056a806c299a9d06bfa808718c2e84/browser/components/storybook/stories/login-timeline.stories.mjs#11\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"See the Credential Management/Timeline widget for an example.\"\n      })]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"If you want to colocate your story with the code it is documenting you will need\\nto add to the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"stories\"\n      }), \" array in the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \".storybook/main.js\"\n      }), \" \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/source/browser/components/storybook/.storybook/main.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"configuration\\nfile\"\n      }), \"\\nso that Storybook knows where to look for your files.\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"The Storybook docs site has a \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://storybook.js.org/docs/web-components/get-started/whats-a-story\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"good\\noverview\"\n      }), \"\\nof what's involved in writing a new story. For convenience you can use the \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://lit.dev/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"Lit\\nlibrary\"\n      }), \" to define the template code for your story, but this\\nis not a requirement.\"]\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n      id: \"ui-widgets-versus-domain-specific-ui-widgets\",\n      children: \"UI Widgets versus Domain-Specific UI Widgets\"\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Widgets that are part of \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://acorn.firefox.com/latest/acorn.html\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"our design system\"\n      }), \" and intended to be used across the Mozilla suite of products live under the \\\"UI Widgets\\\" category in Storybook and under \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"toolkit/content/widgets/\"\n      }), \" in Firefox.\\nThese global widgets are denoted in code by the \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-\"\n      }), \" prefix in their name.\\nFor example, the name \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"moz-support-link\"\n      }), \" informs us that this widget is design system compliant and can be used anywhere in Firefox.\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Storybook can also be used to help document and prototype widgets that are specific to a part of the codebase and not intended for more global use.\\nStories for these types of widgets live under the \\\"Domain-Specific UI Widgets\\\" category, while the code can live in any appropriate folder in \", /*#__PURE__*/_jsx(_components.code, {\n        children: \"mozilla-central\"\n      }), \".\\n\", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://firefoxux.github.io/firefox-desktop-components/?path=/docs/domain-specific-ui-widgets-credential-management-timeline--empty-timeline\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"See the Credential Management folder as an example of a domain specific folder\"\n      }), \" and \", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/source/browser/components/storybook/stories/login-timeline.stories.mjs\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"see the login-timeline.stories.mjs for how to make a domain specific folder in Storybook\"\n      }), \".\\n\", /*#__PURE__*/_jsx(_components.a, {\n        href: \"https://searchfox.org/mozilla-central/source/browser/components/storybook/stories/migration-wizard.stories.mjs\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"To add a non-team specific widget to the \\\"Domain-specific UI Widgets\\\" section, see the migration-wizard.stories.mjs file\"\n      }), \".\"]\n    }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n      children: [\"Creating and documenting domain specific UI widgets allows other teams to be aware of and take inspiration from existing UI patterns.\\nWith these widgets, \", /*#__PURE__*/_jsx(_components.strong, {\n        children: \"there is no guarantee that the element will work for your domain.\"\n      }), \"\\nIf you need to use a domain-specific widget outside of its intended domain, it may be worth discussing how to convert this domain specific widget into a global UI widget.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const __page = () => {\n  throw new Error(\"Docs-only story\");\n};\n__page.parameters = {\n  docsOnly: true\n};\nconst componentMeta = {\n  title: 'Docs/Storybook',\n  parameters: {\n    previewTabs: {\n      canvas: {\n        hidden: true\n      }\n    },\n    viewMode: \"docs\"\n  },\n  tags: ['stories-mdx'],\n  includeStories: [\"__page\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","export * from '@mdx-js/react';\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":[],"sourceRoot":""}