{"version":3,"file":"shopping-message-bar-stories.02c83a6d.iframe.bundle.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAivHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;ACrLA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA","sources":["webpack://browser-storybook/../shopping/content/shopping-message-bar.mjs","webpack://browser-storybook/../../../toolkit/content/widgets/moz-button/moz-button.mjs","webpack://browser-storybook/../../../toolkit/content/widgets/moz-message-bar/moz-message-bar.mjs","webpack://browser-storybook/./stories/shopping-message-bar.stories.mjs"],"sourcesContent":["import __chrome_styles_loader__shoppingpageStyles from \"browser/components/shopping/content/shopping-page.css\";\nimport __chrome_styles_loader__shoppingmessagebarStyles from \"browser/components/shopping/content/shopping-message-bar.css\";\n/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*-\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint-env mozilla/remote-page */\n\nimport { html, styleMap } from \"chrome://global/content/vendor/lit.all.mjs\";\nimport { MozLitElement } from \"chrome://global/content/lit-utils.mjs\";\n\n// eslint-disable-next-line import/no-unassigned-import\nimport \"chrome://global/content/elements/moz-message-bar.mjs\";\n\nconst SHOPPING_SIDEBAR_ACTIVE_PREF = \"browser.shopping.experience2023.active\";\nconst SHOW_KEEP_SIDEBAR_CLOSED_MESSAGE_PREF =\n  \"browser.shopping.experience2023.showKeepSidebarClosedMessage\";\nconst SHOPPING_AUTO_OPEN_SIDEBAR_PREF =\n  \"browser.shopping.experience2023.autoOpen.userEnabled\";\n\nclass ShoppingMessageBar extends MozLitElement {\n  #MESSAGE_TYPES_RENDER_TEMPLATE_MAPPING = new Map([\n    [\"stale\", () => this.staleWarningTemplate()],\n    [\"generic-error\", () => this.genericErrorTemplate()],\n    [\"not-enough-reviews\", () => this.notEnoughReviewsTemplate()],\n    [\"product-not-available\", () => this.productNotAvailableTemplate()],\n    [\"thanks-for-reporting\", () => this.thanksForReportingTemplate()],\n    [\n      \"product-not-available-reported\",\n      () => this.productNotAvailableReportedTemplate(),\n    ],\n    [\"analysis-in-progress\", () => this.analysisInProgressTemplate()],\n    [\"reanalysis-in-progress\", () => this.reanalysisInProgressTemplate()],\n    [\"page-not-supported\", () => this.pageNotSupportedTemplate()],\n    [\"thank-you-for-feedback\", () => this.thankYouForFeedbackTemplate()],\n    [\"keep-closed\", () => this.keepClosedTemplate()],\n  ]);\n\n  static properties = {\n    type: { type: String },\n    productUrl: { type: String, reflect: true },\n    progress: { type: Number, reflect: true },\n  };\n\n  static get queries() {\n    return {\n      reAnalysisButtonEl: \"#message-bar-reanalysis-button\",\n      productAvailableBtnEl: \"#message-bar-report-product-available-btn\",\n      yesKeepClosedButtonEl: \"#yes-keep-closed-button\",\n      noThanksButtonEl: \"#no-thanks-button\",\n    };\n  }\n\n  onClickAnalysisButton() {\n    this.dispatchEvent(\n      new CustomEvent(\"ReanalysisRequested\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n    Glean.shopping.surfaceReanalyzeClicked.record();\n  }\n\n  onClickProductAvailable() {\n    this.dispatchEvent(\n      new CustomEvent(\"ReportedProductAvailable\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  handleNoThanksClick() {\n    RPMSetPref(SHOPPING_SIDEBAR_ACTIVE_PREF, false);\n    RPMSetPref(SHOW_KEEP_SIDEBAR_CLOSED_MESSAGE_PREF, false);\n    this.dispatchEvent(\n      new CustomEvent(\"HideKeepClosedMessage\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n    Glean.shopping.surfaceNoThanksButtonClicked.record();\n  }\n\n  handleKeepClosedClick() {\n    RPMSetPref(SHOPPING_SIDEBAR_ACTIVE_PREF, false);\n    RPMSetPref(SHOW_KEEP_SIDEBAR_CLOSED_MESSAGE_PREF, false);\n    RPMSetPref(SHOPPING_AUTO_OPEN_SIDEBAR_PREF, false);\n    this.dispatchEvent(\n      new CustomEvent(\"HideKeepClosedMessage\", {\n        bubbles: true,\n        composed: true,\n      })\n    );\n    Glean.shopping.surfaceYesKeepClosedButtonClicked.record();\n  }\n\n  staleWarningTemplate() {\n    return html`<div class=\"shopping-message-bar\">\n      <span class=\"icon\"></span>\n      <article id=\"message-bar-container\" aria-labelledby=\"header\">\n        <span\n          data-l10n-id=\"shopping-message-bar-warning-stale-analysis-message-2\"\n        ></span>\n        <button\n          id=\"message-bar-reanalysis-button\"\n          class=\"small-button shopping-button\"\n          data-l10n-id=\"shopping-message-bar-warning-stale-analysis-button\"\n          @click=${this.onClickAnalysisButton}\n        ></button>\n      </article>\n    </div>`;\n  }\n\n  genericErrorTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"warning\"\n      data-l10n-id=\"shopping-message-bar-generic-error\"\n    >\n    </moz-message-bar>`;\n  }\n\n  notEnoughReviewsTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"warning\"\n      data-l10n-id=\"shopping-message-bar-warning-not-enough-reviews\"\n    >\n    </moz-message-bar>`;\n  }\n\n  productNotAvailableTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"warning\"\n      data-l10n-id=\"shopping-message-bar-warning-product-not-available\"\n    >\n      <button\n        slot=\"actions\"\n        id=\"message-bar-report-product-available-btn\"\n        class=\"small-button shopping-button\"\n        data-l10n-id=\"shopping-message-bar-warning-product-not-available-button2\"\n        @click=${this.onClickProductAvailable}\n      ></button>\n    </moz-message-bar>`;\n  }\n\n  thanksForReportingTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"info\"\n      data-l10n-id=\"shopping-message-bar-thanks-for-reporting\"\n    >\n    </moz-message-bar>`;\n  }\n\n  productNotAvailableReportedTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"warning\"\n      data-l10n-id=\"shopping-message-bar-warning-product-not-available-reported\"\n    >\n    </moz-message-bar>`;\n  }\n\n  analysisInProgressTemplate() {\n    return html`<div\n      class=\"shopping-message-bar analysis-in-progress\"\n      style=${styleMap({\n        \"--analysis-progress-pcent\": `${this.progress}%`,\n      })}\n    >\n      <span class=\"icon\"></span>\n      <article\n        id=\"message-bar-container\"\n        aria-labelledby=\"header\"\n        type=\"analysis\"\n      >\n        <strong\n          id=\"header\"\n          data-l10n-id=\"shopping-message-bar-analysis-in-progress-with-amount\"\n          data-l10n-args=\"${JSON.stringify({\n            percentage: Math.round(this.progress),\n          })}\"\n        ></strong>\n        <span\n          data-l10n-id=\"shopping-message-bar-analysis-in-progress-message2\"\n        ></span>\n      </article>\n    </div>`;\n  }\n\n  reanalysisInProgressTemplate() {\n    return html`<div\n      class=\"shopping-message-bar\"\n      id=\"reanalysis-in-progress-message\"\n      style=${styleMap({\n        \"--analysis-progress-pcent\": `${this.progress}%`,\n      })}\n    >\n      <span class=\"icon\"></span>\n      <article\n        id=\"message-bar-container\"\n        aria-labelledby=\"header\"\n        type=\"re-analysis\"\n      >\n        <span\n          id=\"header\"\n          data-l10n-id=\"shopping-message-bar-analysis-in-progress-with-amount\"\n          data-l10n-args=\"${JSON.stringify({\n            percentage: Math.round(this.progress),\n          })}\"\n        ></span>\n      </article>\n    </div>`;\n  }\n\n  pageNotSupportedTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"warning\"\n      data-l10n-id=\"shopping-message-bar-page-not-supported\"\n    >\n    </moz-message-bar>`;\n  }\n\n  thankYouForFeedbackTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading\"\n      type=\"success\"\n      dismissable\n      data-l10n-id=\"shopping-survey-thanks\"\n    >\n    </moz-message-bar>`;\n  }\n\n  keepClosedTemplate() {\n    return html`<moz-message-bar\n      data-l10n-attrs=\"heading, message\"\n      type=\"info\"\n      data-l10n-id=\"shopping-message-bar-keep-closed-header\"\n    >\n      <moz-button-group slot=\"actions\">\n        <button\n          id=\"no-thanks-button\"\n          class=\"small-button shopping-button\"\n          data-l10n-id=\"shopping-message-bar-keep-closed-dismiss-button\"\n          @click=${this.handleNoThanksClick}\n        ></button>\n        <button\n          id=\"yes-keep-closed-button\"\n          class=\"primary small-button shopping-button\"\n          data-l10n-id=\"shopping-message-bar-keep-closed-accept-button\"\n          @click=${this.handleKeepClosedClick}\n        ></button>\n      </moz-button-group>\n    </moz-message-bar>`;\n  }\n\n  render() {\n    let messageBarTemplate = this.#MESSAGE_TYPES_RENDER_TEMPLATE_MAPPING.get(\n      this.type\n    )();\n    if (messageBarTemplate) {\n      if (this.type == \"stale\") {\n        Glean.shopping.surfaceStaleAnalysisShown.record();\n      }\n      return html`\n        <link\n          rel=\"stylesheet\"\n          href=\"${__chrome_styles_loader__shoppingmessagebarStyles}\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"${__chrome_styles_loader__shoppingpageStyles}\"\n        />\n        ${messageBarTemplate}\n      `;\n    }\n    return null;\n  }\n}\n\ncustomElements.define(\"shopping-message-bar\", ShoppingMessageBar);\n","import __chrome_styles_loader__mozbuttonStyles from \"toolkit/content/widgets/moz-button/moz-button.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined, classMap } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\n/**\n * A button with multiple types and two sizes.\n *\n * @tagname moz-button\n * @property {string} label - The button's label, will be overridden by slotted content.\n * @property {string} type - The button type.\n *   Options: default, primary, destructive, icon, icon ghost, ghost.\n * @property {string} size - The button size.\n *   Options: default, small.\n * @property {boolean} disabled - The disabled state.\n * @property {string} title - The button's title attribute, used in shadow DOM and therefore not as an attribute on moz-button.\n * @property {string} titleAttribute - Internal, map title attribute to the title JS property.\n * @property {string} tooltipText - Set the title property, the title attribute will be used first.\n * @property {string} ariaLabel - The button's arial-label attribute, used in shadow DOM and therefore not as an attribute on moz-button.\n * @property {string} iconSrc - Path to the icon that should be displayed in the button.\n * @property {string} ariaLabelAttribute - Internal, map aria-label attribute to the ariaLabel JS property.\n * @property {string} hasVisibleLabel - Internal, tracks whether or not the button has a visible label.\n * @property {HTMLButtonElement} buttonEl - The internal button element in the shadow DOM.\n * @property {HTMLButtonElement} slotEl - The internal slot element in the shadow DOM.\n * @slot default - The button's content, overrides label property.\n * @fires click - The click event.\n */\nexport default class MozButton extends MozLitElement {\n  static shadowRootOptions = {\n    ...MozLitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  static properties = {\n    label: { type: String, reflect: true, fluent: true },\n    type: { type: String, reflect: true },\n    size: { type: String, reflect: true },\n    disabled: { type: Boolean, reflect: true },\n    title: { type: String, state: true },\n    titleAttribute: { type: String, attribute: \"title\", reflect: true },\n    tooltipText: { type: String, fluent: true },\n    ariaLabelAttribute: {\n      type: String,\n      attribute: \"aria-label\",\n      reflect: true,\n    },\n    ariaLabel: { type: String, state: true },\n    iconSrc: { type: String },\n    hasVisibleLabel: { type: Boolean, state: true },\n  };\n\n  static queries = {\n    buttonEl: \"button\",\n    slotEl: \"slot\",\n  };\n\n  constructor() {\n    super();\n    this.type = \"default\";\n    this.size = \"default\";\n    this.disabled = false;\n    this.hasVisibleLabel = !!this.label;\n  }\n\n  willUpdate(changes) {\n    if (changes.has(\"titleAttribute\")) {\n      this.title = this.titleAttribute;\n      this.titleAttribute = null;\n    }\n    if (changes.has(\"ariaLabelAttribute\")) {\n      this.ariaLabel = this.ariaLabelAttribute;\n      this.ariaLabelAttribute = null;\n    }\n  }\n\n  // Delegate clicks on host to the button element.\n  click() {\n    this.buttonEl.click();\n  }\n\n  checkForLabelText() {\n    this.hasVisibleLabel = this.slotEl\n      ?.assignedNodes()\n      .some(node => node.textContent.trim());\n  }\n\n  labelTemplate() {\n    if (this.label) {\n      return this.label;\n    }\n    return html`<slot @slotchange=${this.checkForLabelText}></slot>`;\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozbuttonStyles}\"\n      />\n      <button\n        type=${this.type}\n        size=${this.size}\n        ?disabled=${this.disabled}\n        title=${ifDefined(this.title || this.tooltipText)}\n        aria-label=${ifDefined(this.ariaLabel)}\n        part=\"button\"\n        class=${classMap({ labelled: this.label || this.hasVisibleLabel })}\n      >\n        ${this.iconSrc\n          ? html`<img src=${this.iconSrc} role=\"presentation\" />`\n          : \"\"}\n        ${this.labelTemplate()}\n      </button>\n    `;\n  }\n}\ncustomElements.define(\"moz-button\", MozButton);\n","import __chrome_styles_loader__mozmessagebarStyles from \"toolkit/content/widgets/moz-message-bar/moz-message-bar.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n// eslint-disable-next-line import/no-unassigned-import\nimport \"chrome://global/content/elements/moz-button.mjs\";\n\nwindow.MozXULElement?.insertFTLIfNeeded(\"toolkit/global/mozMessageBar.ftl\");\n\nconst messageTypeToIconData = {\n  info: {\n    iconSrc: \"chrome://global/skin/icons/info-filled.svg\",\n    l10nId: \"moz-message-bar-icon-info\",\n  },\n  warning: {\n    iconSrc: \"chrome://global/skin/icons/warning.svg\",\n    l10nId: \"moz-message-bar-icon-warning\",\n  },\n  success: {\n    iconSrc: \"chrome://global/skin/icons/check-filled.svg\",\n    l10nId: \"moz-message-bar-icon-success\",\n  },\n  error: {\n    iconSrc: \"chrome://global/skin/icons/error.svg\",\n    l10nId: \"moz-message-bar-icon-error\",\n  },\n  critical: {\n    iconSrc: \"chrome://global/skin/icons/error.svg\",\n    l10nId: \"moz-message-bar-icon-error\",\n  },\n};\n\n/**\n * A simple message bar element that can be used to display\n * important information to users.\n *\n * @tagname moz-message-bar\n * @property {string} type - The type of the displayed message.\n * @property {string} heading - The heading of the message.\n * @property {string} message - The message text.\n * @property {boolean} dismissable - Whether or not the element is dismissable.\n * @property {string} messageL10nId - l10n ID for the message.\n * @property {string} messageL10nArgs - Any args needed for the message l10n ID.\n * @fires message-bar:close\n *  Custom event indicating that message bar was closed.\n * @fires message-bar:user-dismissed\n *  Custom event indicating that message bar was dismissed by the user.\n */\n\nexport default class MozMessageBar extends MozLitElement {\n  static queries = {\n    actionsSlot: \"slot[name=actions]\",\n    actionsEl: \".actions\",\n    closeButton: \"moz-button.close\",\n    supportLinkSlot: \"slot[name=support-link]\",\n  };\n\n  static properties = {\n    type: { type: String },\n    heading: { type: String },\n    message: { type: String },\n    dismissable: { type: Boolean },\n    messageL10nId: { type: String },\n    messageL10nArgs: { type: String },\n  };\n\n  constructor() {\n    super();\n    this.type = \"info\";\n    this.dismissable = false;\n  }\n\n  onSlotchange() {\n    let actions = this.actionsSlot.assignedNodes();\n    this.actionsEl.classList.toggle(\"active\", actions.length);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"alert\");\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.dispatchEvent(new CustomEvent(\"message-bar:close\"));\n  }\n\n  get supportLinkEls() {\n    return this.supportLinkSlot.assignedElements();\n  }\n\n  iconTemplate() {\n    let iconData = messageTypeToIconData[this.type];\n    if (iconData) {\n      let { iconSrc, l10nId } = iconData;\n      return html`\n        <div class=\"icon-container\">\n          <img\n            class=\"icon\"\n            src=${iconSrc}\n            data-l10n-id=${l10nId}\n            data-l10n-attrs=\"alt\"\n          />\n        </div>\n      `;\n    }\n    return \"\";\n  }\n\n  headingTemplate() {\n    if (this.heading) {\n      return html`<strong class=\"heading\">${this.heading}</strong>`;\n    }\n    return \"\";\n  }\n\n  closeButtonTemplate({ size } = {}) {\n    if (this.dismissable) {\n      return html`\n        <moz-button\n          type=\"icon ghost\"\n          class=\"close\"\n          size=${ifDefined(size)}\n          data-l10n-id=\"moz-message-bar-close-button\"\n          @click=${this.dismiss}\n        ></moz-button>\n      `;\n    }\n    return \"\";\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozmessagebarStyles}\"\n      />\n      <div class=\"container\">\n        <div class=\"content\">\n          <div class=\"text-container\">\n            ${this.iconTemplate()}\n            <div class=\"text-content\">\n              ${this.headingTemplate()}\n              <div>\n                <span\n                  class=\"message\"\n                  data-l10n-id=${ifDefined(this.messageL10nId)}\n                  data-l10n-args=${ifDefined(\n                    JSON.stringify(this.messageL10nArgs)\n                  )}\n                >\n                  ${this.message}\n                </span>\n                <span class=\"link\">\n                  <slot name=\"support-link\"></slot>\n                </span>\n              </div>\n            </div>\n          </div>\n          <span class=\"actions\">\n            <slot name=\"actions\" @slotchange=${this.onSlotchange}></slot>\n          </span>\n        </div>\n        ${this.closeButtonTemplate()}\n      </div>\n    `;\n  }\n\n  dismiss() {\n    this.dispatchEvent(new CustomEvent(\"message-bar:user-dismissed\"));\n    this.close();\n  }\n\n  close() {\n    this.remove();\n  }\n}\n\ncustomElements.define(\"moz-message-bar\", MozMessageBar);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// eslint-disable-next-line import/no-unresolved\nimport { html, ifDefined } from \"lit.all.mjs\";\nimport \"browser/components/shopping/content/shopping-message-bar.mjs\";\n\nwindow.MozXULElement.insertFTLIfNeeded(\"browser/shopping.ftl\");\nwindow.MozXULElement.insertFTLIfNeeded(\"toolkit/branding/brandings.ftl\");\n\nexport default {\n  title: \"Domain-specific UI Widgets/Shopping/Shopping Message Bar\",\n  component: \"shopping-message-bar\",\n  argTypes: {\n    type: {\n      control: { type: \"select\" },\n      options: [\n        \"stale\",\n        \"generic-error\",\n        \"not-enough-reviews\",\n        \"product-not-available\",\n        \"product-not-available-reported\",\n        \"thanks-for-reporting\",\n        \"analysis-in-progress\",\n        \"reanalysis-in-progress\",\n        \"page-not-supported\",\n        \"thank-you-for-feedback\",\n      ],\n    },\n  },\n  parameters: {\n    status: \"in-development\",\n    actions: {\n      handles: [\"click\"],\n    },\n  },\n};\n\nconst Template = ({ type, progress }) => html`\n  <shopping-message-bar\n    type=${ifDefined(type)}\n    progress=${ifDefined(progress)}\n  ></shopping-message-bar>\n`;\n\nexport const DefaultShoppingMessageBar = Template.bind({});\nDefaultShoppingMessageBar.args = {\n  type: \"stale\",\n  progress: 0,\n};\n"],"names":[],"sourceRoot":""}