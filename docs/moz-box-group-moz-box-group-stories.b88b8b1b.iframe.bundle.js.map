{"version":3,"file":"moz-box-group-moz-box-group-stories.b88b8b1b.iframe.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../../../toolkit/content/widgets/moz-box-group/moz-box-group.stories.mjs","webpack:///../../../toolkit/content/widgets/moz-box-group/moz-box-group.mjs"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, ifDefined } from \"../vendor/lit.all.mjs\";\nimport \"./moz-box-group.mjs\";\n\nexport default {\n  title: \"UI Widgets/Box Group\",\n  component: \"moz-box-group\",\n  parameters: {\n    status: \"in-development\",\n    fluent: `\nmoz-box-item =\n  .label = I'm a box item\n  .description = I'm part of a group\nmoz-box-button-1 =\n  .label = I'm a box button in a group\nmoz-box-button-2 =\n  .label = I'm another box button in a group\nmoz-box-link =\n  .label = I'm a box link in a group\nmoz-box-delete-action =\n  .title = Delete I'm a box item\nmoz-box-edit-action =\n  .title = Edit I'm a box item\nmoz-box-toggle-action =\n  .aria-label = Toggle I'm a box item\nmoz-box-more-action =\n  .title = More options, I'm a box item\n\n    `,\n  },\n};\n\nconst Template = ({ type }) => html`\n  <style>\n    .delete {\n      margin-top: var(--space-medium);\n    }\n  </style>\n  <moz-box-group type=${ifDefined(type)}>\n    <moz-box-item data-l10n-id=\"moz-box-item\">\n      <moz-button\n        iconsrc=\"chrome://global/skin/icons/edit-outline.svg\"\n        data-l10n-id=\"moz-box-edit-action\"\n        type=\"ghost\"\n        slot=\"actions\"\n      ></moz-button>\n      <moz-toggle\n        slot=\"actions\"\n        pressed\n        data-l10n-id=\"moz-box-toggle-action\"\n      ></moz-toggle>\n      <moz-button\n        iconsrc=\"chrome://global/skin/icons/more.svg\"\n        data-l10n-id=\"moz-box-more-action\"\n        slot=\"actions-start\"\n      ></moz-button>\n    </moz-box-item>\n    <moz-box-link data-l10n-id=\"moz-box-link\"></moz-box-link>\n    <moz-box-button data-l10n-id=\"moz-box-button-1\"></moz-box-button>\n    <moz-box-item data-l10n-id=\"moz-box-item\">\n      <moz-button\n        iconsrc=\"chrome://global/skin/icons/edit-outline.svg\"\n        data-l10n-id=\"moz-box-edit-action\"\n        type=\"ghost\"\n        slot=\"actions-start\"\n      ></moz-button>\n      <moz-button\n        iconsrc=\"chrome://global/skin/icons/more.svg\"\n        data-l10n-id=\"moz-box-more-action\"\n        slot=\"actions-start\"\n      ></moz-button>\n    </moz-box-item>\n    <moz-box-button data-l10n-id=\"moz-box-button-2\"></moz-box-button>\n  </moz-box-group>\n  ${type == \"list\"\n    ? html`<moz-button class=\"delete\" @click=${appendItem}>\n        Add an item\n      </moz-button>`\n    : \"\"}\n`;\n\nconst appendItem = event => {\n  let group = event.target.getRootNode().querySelector(\"moz-box-group\");\n\n  let boxItem = document.createElement(\"moz-box-item\");\n  boxItem.label = \"New box item\";\n  boxItem.description = \"New items are added to the list\";\n\n  let actionButton = document.createElement(\"moz-button\");\n  actionButton.addEventListener(\"click\", () => boxItem.remove());\n  actionButton.iconSrc = \"chrome://global/skin/icons/delete.svg\";\n  actionButton.slot = \"actions\";\n  actionButton.setAttribute(\"data-l10n-id\", \"moz-box-delete-action\");\n  boxItem.append(actionButton);\n\n  group.prepend(boxItem);\n};\n\nexport const Default = Template.bind({});\nDefault.args = {};\n\nexport const List = Template.bind({});\nList.args = {\n  type: \"list\",\n};\n","import __chrome_styles_loader__mozboxgroupStyles from \"toolkit/content/widgets/moz-box-group/moz-box-group.css\";\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html } from \"../vendor/lit.all.mjs\";\nimport { MozLitElement } from \"../lit-utils.mjs\";\n\n/**\n * An element used to group combinations of moz-box-item, moz-box-link, and\n * moz-box-button elements and provide the expected styles.\n *\n * @tagname moz-box-group\n * @property {string} type - The type of the group, either \"list\" or undefined.\n * @slot default - Slot for rendering various moz-box-* elements.\n * @slot <index> - Slots used to assign moz-box-* elements to <li> elements when\n *   the group is type=\"list\".\n */\nexport default class MozBoxGroup extends MozLitElement {\n  #tabbable = true;\n\n  static properties = {\n    type: { type: String },\n    listItems: { type: Array, state: true },\n  };\n\n  constructor() {\n    super();\n    this.listItems = [];\n  }\n\n  slotTemplate() {\n    if (this.type == \"list\") {\n      return html`<ul\n          class=\"list\"\n          aria-orientation=\"vertical\"\n          @keydown=${this.handleKeydown}\n          @focusin=${this.handleFocus}\n          @focusout=${this.handleBlur}\n        >\n          ${this.listItems.map((_, i) => {\n            return html`<li>\n              <slot name=${i}></slot>\n            </li> `;\n          })}\n        </ul>\n        <slot hidden @slotchange=${this.handleSlotchange}></slot>`;\n    }\n    return html`<slot></slot>`;\n  }\n\n  handleKeydown(event) {\n    let positionAttr =\n      event.target.getAttribute(\"position\") ??\n      // handles the case where an interactive element is nested in a moz-box-item\n      event.target.closest(\"moz-box-item\").getAttribute(\"position\");\n    let currentPosition = parseInt(positionAttr);\n\n    switch (event.key) {\n      case \"Down\":\n      case \"ArrowDown\": {\n        let nextItem = this.listItems[currentPosition + 1];\n        nextItem?.focus(event);\n        break;\n      }\n      case \"Up\":\n      case \"ArrowUp\": {\n        let prevItem = this.listItems[currentPosition - 1];\n        prevItem?.focus(event);\n        break;\n      }\n    }\n  }\n\n  handleFocus() {\n    if (this.#tabbable) {\n      this.#tabbable = false;\n      this.listItems.forEach(item => {\n        item.setAttribute(\"tabindex\", \"-1\");\n      });\n    }\n  }\n\n  handleBlur() {\n    if (!this.#tabbable) {\n      this.#tabbable = true;\n      this.listItems.forEach(item => {\n        item.removeAttribute(\"tabindex\");\n      });\n    }\n  }\n\n  handleSlotchange() {\n    let boxElements = this.querySelectorAll(\n      \"moz-box-item, moz-box-button, moz-box-link\"\n    );\n    this.listItems = Array.from(boxElements);\n  }\n\n  render() {\n    return html`\n      <link\n        rel=\"stylesheet\"\n        href=\"${__chrome_styles_loader__mozboxgroupStyles}\"\n      />\n      ${this.slotTemplate()}\n    `;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has(\"listItems\") && this.listItems.length) {\n      this.listItems.forEach((item, i) => {\n        item.slot = i;\n        item.setAttribute(\"position\", i);\n      });\n    }\n  }\n}\ncustomElements.define(\"moz-box-group\", MozBoxGroup);\n"],"names":[],"sourceRoot":""}